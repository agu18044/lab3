

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 17:20:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	strings
   481  1000                     __pstrings:
   482  1000                     stringtab:
   483  1000                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  1000  1BFF               	btfsc	btemp+1,7
   487  1001  280A               	ljmp	stringcode
   488  1002  1383               	bcf	3,7
   489  1003  187F               	btfsc	btemp+1,0
   490  1004  1783               	bsf	3,7
   491  1005  0800               	movf	0,w
   492  1006  0A84               	incf	4,f
   493  1007  1903               	skipnz
   494  1008  0AFF               	incf	btemp+1,f
   495  1009  0008               	return
   496  100A                     stringcode:
   497  100A                     stringdir:
   498  100A  3010               	movlw	high stringdir
   499  100B  008A               	movwf	10
   500  100C  0804               	movf	4,w
   501  100D  0A84               	incf	4,f
   502  100E  0782               	addwf	2,f
   503  100F                     __stringbase:
   504  100F  3400               	retlw	0
   505  1010                     __end_of__stringtab:
   506  1010                     __powers_:
   507  1010  3400               	retlw	0
   508  1011  3400               	retlw	0
   509  1012  3480               	retlw	128
   510  1013  343F               	retlw	63
   511  1014  3400               	retlw	0
   512  1015  3400               	retlw	0
   513  1016  3420               	retlw	32
   514  1017  3441               	retlw	65
   515  1018  3400               	retlw	0
   516  1019  3400               	retlw	0
   517  101A  34C8               	retlw	200
   518  101B  3442               	retlw	66
   519  101C  3400               	retlw	0
   520  101D  3400               	retlw	0
   521  101E  347A               	retlw	122
   522  101F  3444               	retlw	68
   523  1020  3400               	retlw	0
   524  1021  3440               	retlw	64
   525  1022  341C               	retlw	28
   526  1023  3446               	retlw	70
   527  1024  3400               	retlw	0
   528  1025  3450               	retlw	80
   529  1026  34C3               	retlw	195
   530  1027  3447               	retlw	71
   531  1028  3400               	retlw	0
   532  1029  3424               	retlw	36
   533  102A  3474               	retlw	116
   534  102B  3449               	retlw	73
   535  102C  3480               	retlw	128
   536  102D  3496               	retlw	150
   537  102E  3418               	retlw	24
   538  102F  344B               	retlw	75
   539  1030  3420               	retlw	32
   540  1031  34BC               	retlw	188
   541  1032  34BE               	retlw	190
   542  1033  344C               	retlw	76
   543  1034  3428               	retlw	40
   544  1035  346B               	retlw	107
   545  1036  346E               	retlw	110
   546  1037  344E               	retlw	78
   547  1038  34F9               	retlw	249
   548  1039  3402               	retlw	2
   549  103A  3415               	retlw	21
   550  103B  3450               	retlw	80
   551  103C  34EC               	retlw	236
   552  103D  3478               	retlw	120
   553  103E  34AD               	retlw	173
   554  103F  3460               	retlw	96
   555  1040  34CA               	retlw	202
   556  1041  34F2               	retlw	242
   557  1042  3449               	retlw	73
   558  1043  3471               	retlw	113
   559  1044                     __end_of__powers_:
   560  1044                     __npowers_:
   561  1044  3400               	retlw	0
   562  1045  3400               	retlw	0
   563  1046  3480               	retlw	128
   564  1047  343F               	retlw	63
   565  1048  34CD               	retlw	205
   566  1049  34CC               	retlw	204
   567  104A  34CC               	retlw	204
   568  104B  343D               	retlw	61
   569  104C  340A               	retlw	10
   570  104D  34D7               	retlw	215
   571  104E  3423               	retlw	35
   572  104F  343C               	retlw	60
   573  1050  346F               	retlw	111
   574  1051  3412               	retlw	18
   575  1052  3483               	retlw	131
   576  1053  343A               	retlw	58
   577  1054  3417               	retlw	23
   578  1055  34B7               	retlw	183
   579  1056  34D1               	retlw	209
   580  1057  3438               	retlw	56
   581  1058  34AC               	retlw	172
   582  1059  34C5               	retlw	197
   583  105A  3427               	retlw	39
   584  105B  3437               	retlw	55
   585  105C  34BD               	retlw	189
   586  105D  3437               	retlw	55
   587  105E  3486               	retlw	134
   588  105F  3435               	retlw	53
   589  1060  3495               	retlw	149
   590  1061  34BF               	retlw	191
   591  1062  34D6               	retlw	214
   592  1063  3433               	retlw	51
   593  1064  3477               	retlw	119
   594  1065  34CC               	retlw	204
   595  1066  342B               	retlw	43
   596  1067  3432               	retlw	50
   597  1068  345F               	retlw	95
   598  1069  3470               	retlw	112
   599  106A  3489               	retlw	137
   600  106B  3430               	retlw	48
   601  106C  34FF               	retlw	255
   602  106D  34E6               	retlw	230
   603  106E  34DB               	retlw	219
   604  106F  342E               	retlw	46
   605  1070  3408               	retlw	8
   606  1071  34E5               	retlw	229
   607  1072  343C               	retlw	60
   608  1073  341E               	retlw	30
   609  1074  3460               	retlw	96
   610  1075  3442               	retlw	66
   611  1076  34A2               	retlw	162
   612  1077  340D               	retlw	13
   613  1078                     __end_of__npowers_:
   614  1078                     _dpowers:
   615  1078  3401               	retlw	1
   616  1079  3400               	retlw	0
   617  107A  3400               	retlw	0
   618  107B  3400               	retlw	0
   619  107C  340A               	retlw	10
   620  107D  3400               	retlw	0
   621  107E  3400               	retlw	0
   622  107F  3400               	retlw	0
   623  1080  3464               	retlw	100
   624  1081  3400               	retlw	0
   625  1082  3400               	retlw	0
   626  1083  3400               	retlw	0
   627  1084  34E8               	retlw	232
   628  1085  3403               	retlw	3
   629  1086  3400               	retlw	0
   630  1087  3400               	retlw	0
   631  1088  3410               	retlw	16
   632  1089  3427               	retlw	39
   633  108A  3400               	retlw	0
   634  108B  3400               	retlw	0
   635  108C  34A0               	retlw	160
   636  108D  3486               	retlw	134
   637  108E  3401               	retlw	1
   638  108F  3400               	retlw	0
   639  1090  3440               	retlw	64
   640  1091  3442               	retlw	66
   641  1092  340F               	retlw	15
   642  1093  3400               	retlw	0
   643  1094  3480               	retlw	128
   644  1095  3496               	retlw	150
   645  1096  3498               	retlw	152
   646  1097  3400               	retlw	0
   647  1098  3400               	retlw	0
   648  1099  34E1               	retlw	225
   649  109A  34F5               	retlw	245
   650  109B  3405               	retlw	5
   651  109C  3400               	retlw	0
   652  109D  34CA               	retlw	202
   653  109E  349A               	retlw	154
   654  109F  343B               	retlw	59
   655  10A0                     __end_of_dpowers:
   656  001A                     _RCREG	set	26
   657  0019                     _TXREG	set	25
   658  001E                     _ADRESH	set	30
   659  001F                     _ADCON0bits	set	31
   660  000C                     _PIR1bits	set	12
   661  000B                     _INTCONbits	set	11
   662  0009                     _PORTE	set	9
   663  0008                     _PORTD	set	8
   664  00C4                     _CREN	set	196
   665  00C7                     _SPEN	set	199
   666  0049                     _RE1	set	73
   667  0048                     _RE0	set	72
   668  0047                     _RD7	set	71
   669  0046                     _RD6	set	70
   670  0045                     _RD5	set	69
   671  0044                     _RD4	set	68
   672  0043                     _RD3	set	67
   673  0042                     _RD2	set	66
   674  0041                     _RD1	set	65
   675  0040                     _RD0	set	64
   676  0065                     _RCIF	set	101
   677  0099                     _SPBRG	set	153
   678  0086                     _TRISBbits	set	134
   679  0089                     _TRISEbits	set	137
   680  0085                     _TRISAbits	set	133
   681  009F                     _ADCON1	set	159
   682  008C                     _PIE1bits	set	140
   683  0089                     _TRISE	set	137
   684  0088                     _TRISD	set	136
   685  04C1                     _TRMT	set	1217
   686  04C5                     _TXEN	set	1221
   687  043E                     _TRISC6	set	1086
   688  043F                     _TRISC7	set	1087
   689  04C4                     _SYNC	set	1220
   690  04C2                     _BRGH	set	1218
   691  0189                     _ANSELHbits	set	393
   692  0188                     _ANSELbits	set	392
   693  0189                     _ANSELH	set	393
   694  0188                     _ANSEL	set	392
   695  10A0                     STR_1:
   696  10A0  3456               	retlw	86	;'V'
   697  10A1  3431               	retlw	49	;'1'
   698  10A2  3420               	retlw	32	;' '
   699  10A3  3420               	retlw	32	;' '
   700  10A4  3420               	retlw	32	;' '
   701  10A5  3456               	retlw	86	;'V'
   702  10A6  3432               	retlw	50	;'2'
   703  10A7  3420               	retlw	32	;' '
   704  10A8  3420               	retlw	32	;' '
   705  10A9  3420               	retlw	32	;' '
   706  10AA  3463               	retlw	99	;'c'
   707  10AB  346F               	retlw	111	;'o'
   708  10AC  346E               	retlw	110	;'n'
   709  10AD  3474               	retlw	116	;'t'
   710  10AE  3461               	retlw	97	;'a'
   711  10AF  3464               	retlw	100	;'d'
   712  10B0  346F               	retlw	111	;'o'
   713  10B1  3472               	retlw	114	;'r'
   714  10B2  3420               	retlw	32	;' '
   715  10B3  340A               	retlw	10
   716  10B4  3400               	retlw	0
   717  10B5                     STR_3:
   718  10B5  3456               	retlw	86	;'V'
   719  10B6  3431               	retlw	49	;'1'
   720  10B7  3420               	retlw	32	;' '
   721  10B8  3420               	retlw	32	;' '
   722  10B9  3420               	retlw	32	;' '
   723  10BA  3456               	retlw	86	;'V'
   724  10BB  3432               	retlw	50	;'2'
   725  10BC  3420               	retlw	32	;' '
   726  10BD  3420               	retlw	32	;' '
   727  10BE  3420               	retlw	32	;' '
   728  10BF  3443               	retlw	67	;'C'
   729  10C0  344F               	retlw	79	;'O'
   730  10C1  344E               	retlw	78	;'N'
   731  10C2  3454               	retlw	84	;'T'
   732  10C3  3400               	retlw	0
   733  10C4                     STR_2:
   734  10C4  3425               	retlw	37	;'%'
   735  10C5  3466               	retlw	102	;'f'
   736  10C6  3420               	retlw	32	;' '
   737  10C7  3425               	retlw	37	;'%'
   738  10C8  3466               	retlw	102	;'f'
   739  10C9  3420               	retlw	32	;' '
   740  10CA  3420               	retlw	32	;' '
   741  10CB  3425               	retlw	37	;'%'
   742  10CC  3464               	retlw	100	;'d'
   743  10CD  3400               	retlw	0
   744                           
   745                           	psect	cinit
   746  000F                     start_initialization:	
   747                           ; #config settings
   748                           
   749  000F                     __initialization:
   750                           
   751                           ; Clear objects allocated to COMMON
   752  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   753  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   754  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   755                           
   756                           ; Clear objects allocated to BANK0
   757  0012  1283               	bcf	3,5	;RP0=0, select bank0
   758  0013  1303               	bcf	3,6	;RP1=0, select bank0
   759  0014  01ED               	clrf	__pbssBANK0& (0+127)
   760                           
   761                           ; Clear objects allocated to BANK1
   762  0015  1383               	bcf	3,7	;select IRP bank0
   763  0016  30D4               	movlw	low __pbssBANK1
   764  0017  0084               	movwf	4
   765  0018  30F0               	movlw	low (__pbssBANK1+28)
   766  0019  120A  158A  2001  120A  118A  	fcall	clear_ram0
   767  001E                     end_of_initialization:	
   768                           ;End of C runtime variable initialization code
   769                           
   770  001E                     __end_of__initialization:
   771  001E  0183               	clrf	3
   772  001F  120A  158A  284F   	ljmp	_main	;jump to C main() function
   773                           
   774                           	psect	bssCOMMON
   775  0078                     __pbssCOMMON:
   776  0078                     _readUSART:
   777  0078                     	ds	1
   778  0079                     _ADC1:
   779  0079                     	ds	1
   780  007A                     _ADC0:
   781  007A                     	ds	1
   782                           
   783                           	psect	bssBANK0
   784  006D                     __pbssBANK0:
   785  006D                     _contador:
   786  006D                     	ds	1
   787                           
   788                           	psect	bssBANK1
   789  00D4                     __pbssBANK1:
   790  00D4                     _V2:
   791  00D4                     	ds	4
   792  00D8                     _V1:
   793  00D8                     	ds	4
   794  00DC                     _BUFFER:
   795  00DC                     	ds	20
   796                           
   797                           	psect	clrtext
   798  0801                     clear_ram0:	
   799                           ;	Called with FSR containing the base address, and
   800                           ;	W with the last address+1
   801                           
   802  0801  0064               	clrwdt	;clear the watchdog before getting into this loop
   803  0802                     clrloop0:
   804  0802  0180               	clrf	0	;clear RAM location pointed to by FSR
   805  0803  0A84               	incf	4,f	;increment pointer
   806  0804  0604               	xorwf	4,w	;XOR with final address
   807  0805  1903               	btfsc	3,2	;have we reached the end yet?
   808  0806  3400               	retlw	0	;all done for this memory range, return
   809  0807  0604               	xorwf	4,w	;XOR again to restore value
   810  0808  2802               	goto	clrloop0	;do the next byte
   811                           
   812                           	psect	cstackBANK1
   813  00A0                     __pcstackBANK1:
   814  00A0                     ?___flsub:
   815  00A0                     ___flsub@a:	
   816                           ; 4 bytes @ 0x0
   817                           
   818                           
   819                           ; 4 bytes @ 0x0
   820  00A0                     	ds	4
   821  00A4                     ___flsub@b:
   822                           
   823                           ; 4 bytes @ 0x4
   824  00A4                     	ds	4
   825  00A8                     ?_sprintf:
   826  00A8                     sprintf@f:	
   827                           ; 2 bytes @ 0x8
   828                           
   829                           
   830                           ; 1 bytes @ 0x8
   831  00A8                     	ds	11
   832  00B3                     ??_sprintf:
   833                           
   834                           ; 1 bytes @ 0x13
   835  00B3                     	ds	5
   836  00B8                     _sprintf$1110:
   837                           
   838                           ; 4 bytes @ 0x18
   839  00B8                     	ds	4
   840  00BC                     sprintf@ap:
   841                           
   842                           ; 1 bytes @ 0x1C
   843  00BC                     	ds	1
   844  00BD                     sprintf@flag:
   845                           
   846                           ; 2 bytes @ 0x1D
   847  00BD                     	ds	2
   848  00BF                     sprintf@prec:
   849                           
   850                           ; 2 bytes @ 0x1F
   851  00BF                     	ds	2
   852  00C1                     sprintf@val:
   853                           
   854                           ; 4 bytes @ 0x21
   855  00C1                     	ds	4
   856  00C5                     sprintf@eexp:
   857                           
   858                           ; 2 bytes @ 0x25
   859  00C5                     	ds	2
   860  00C7                     sprintf@tmpval:
   861                           
   862                           ; 4 bytes @ 0x27
   863  00C7                     	ds	4
   864  00CB                     sprintf@sp:
   865                           
   866                           ; 1 bytes @ 0x2B
   867  00CB                     	ds	1
   868  00CC                     sprintf@fval:
   869                           
   870                           ; 4 bytes @ 0x2C
   871  00CC                     	ds	4
   872  00D0                     sprintf@c:
   873                           
   874                           ; 1 bytes @ 0x30
   875  00D0                     	ds	1
   876  00D1                     ??_main:
   877                           
   878                           ; 1 bytes @ 0x31
   879  00D1                     	ds	3
   880                           
   881                           	psect	cstackCOMMON
   882  0070                     __pcstackCOMMON:
   883  0070                     ?_Read_USART:
   884  0070                     ??_Read_USART:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_setup:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_LCD_init:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_clear_LCD:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_ADCmed:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_Write_USART:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_ISR:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ??_ISR:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_main:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_port:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_CMDs:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_write_char:	
   918                           ; 1 bytes @ 0x0
   919                           
   920                           
   921                           ; 1 bytes @ 0x0
   922  0070                     	ds	3
   923  0073                     ??_setup:
   924  0073                     ??_ADCmed:	
   925                           ; 1 bytes @ 0x3
   926                           
   927  0073                     ??_Write_USART:	
   928                           ; 1 bytes @ 0x3
   929                           
   930  0073                     ??__tdiv_to_l_:	
   931                           ; 1 bytes @ 0x3
   932                           
   933  0073                     ??__div_to_l_:	
   934                           ; 1 bytes @ 0x3
   935                           
   936  0073                     ??_port:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0073                     ??___lldiv:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0073                     ??___aldiv:	
   943                           ; 1 bytes @ 0x3
   944                           
   945  0073                     ??___fleq:	
   946                           ; 1 bytes @ 0x3
   947                           
   948  0073                     ??___flge:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     ?__Umul8_16:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     ?___wmul:	
   955                           ; 2 bytes @ 0x3
   956                           
   957  0073                     ?___awmod:	
   958                           ; 2 bytes @ 0x3
   959                           
   960  0073                     ?___lwmod:	
   961                           ; 2 bytes @ 0x3
   962                           
   963  0073                     ?___flneg:	
   964                           ; 2 bytes @ 0x3
   965                           
   966  0073                     ?___xxtofl:	
   967                           ; 4 bytes @ 0x3
   968                           
   969  0073                     port@a:	
   970                           ; 4 bytes @ 0x3
   971                           
   972  0073                     Write_USART@a:	
   973                           ; 1 bytes @ 0x3
   974                           
   975  0073                     __Umul8_16@multiplicand:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0073                     ___wmul@multiplier:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ___awmod@divisor:	
   982                           ; 2 bytes @ 0x3
   983                           
   984  0073                     ___lwmod@divisor:	
   985                           ; 2 bytes @ 0x3
   986                           
   987  0073                     ___flneg@f1:	
   988                           ; 2 bytes @ 0x3
   989                           
   990  0073                     ___xxtofl@val:	
   991                           ; 4 bytes @ 0x3
   992                           
   993                           
   994                           ; 4 bytes @ 0x3
   995  0073                     	ds	1
   996  0074                     ?_Write_USART_String:
   997  0074                     ??_CMDs:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ??_write_char:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0074                     ??___llmod:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  0074                     USART_Init@x:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     Write_USART_String@a:	
  1010                           ; 2 bytes @ 0x4
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014  0074                     	ds	1
  1015  0075                     ??__Umul8_16:
  1016  0075                     write_char@a:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019  0075                     ADCmed@ch:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022  0075                     ___llmod@counter:	
  1023                           ; 1 bytes @ 0x5
  1024                           
  1025  0075                     ___wmul@multiplicand:	
  1026                           ; 1 bytes @ 0x5
  1027                           
  1028  0075                     ___awmod@dividend:	
  1029                           ; 2 bytes @ 0x5
  1030                           
  1031  0075                     ___lwmod@dividend:	
  1032                           ; 2 bytes @ 0x5
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x5
  1036  0075                     	ds	1
  1037  0076                     ??_Write_USART_String:
  1038  0076                     ?_write_string:	
  1039                           ; 1 bytes @ 0x6
  1040                           
  1041  0076                     CMDs@a:	
  1042                           ; 1 bytes @ 0x6
  1043                           
  1044  0076                     write_string@a:	
  1045                           ; 1 bytes @ 0x6
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x6
  1049  0076                     	ds	1
  1050  0077                     ??_clear_LCD:
  1051  0077                     ?_set_cursor:	
  1052                           ; 1 bytes @ 0x7
  1053                           
  1054  0077                     ??___wmul:	
  1055                           ; 1 bytes @ 0x7
  1056                           
  1057  0077                     ??___awmod:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060  0077                     ??___flneg:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063  0077                     ??___lwmod:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066  0077                     set_cursor@b:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069  0077                     Write_USART_String@i:	
  1070                           ; 1 bytes @ 0x7
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x7
  1074  0077                     	ds	1
  1075  0078                     ??___flsub:
  1076                           
  1077                           	psect	cstackBANK0
  1078  0020                     __pcstackBANK0:	
  1079                           ; 1 bytes @ 0x8
  1080                           
  1081  0020                     ?___fleq:
  1082  0020                     ?___flge:	
  1083                           ; 1 bit 
  1084                           
  1085  0020                     ??_LCD_init:	
  1086                           ; 1 bit 
  1087                           
  1088  0020                     ??_set_cursor:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ??_write_string:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0020                     ??___xxtofl:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0020                     ?__tdiv_to_l_:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0020                     ?__div_to_l_:	
  1101                           ; 4 bytes @ 0x0
  1102                           
  1103  0020                     ?___lldiv:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106  0020                     ?___aldiv:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109  0020                     ___awmod@counter:	
  1110                           ; 4 bytes @ 0x0
  1111                           
  1112  0020                     ___lwmod@counter:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0020                     ___wmul@product:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0020                     __Umul8_16@product:	
  1119                           ; 2 bytes @ 0x0
  1120                           
  1121  0020                     ___lldiv@divisor:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124  0020                     ___aldiv@divisor:	
  1125                           ; 4 bytes @ 0x0
  1126                           
  1127  0020                     __div_to_l_@f1:	
  1128                           ; 4 bytes @ 0x0
  1129                           
  1130  0020                     ___fleq@ff1:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133  0020                     ___flge@ff1:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136  0020                     __tdiv_to_l_@f1:	
  1137                           ; 4 bytes @ 0x0
  1138                           
  1139                           
  1140                           ; 4 bytes @ 0x0
  1141  0020                     	ds	1
  1142  0021                     ?___lwdiv:
  1143  0021                     set_cursor@a:	
  1144                           ; 2 bytes @ 0x1
  1145                           
  1146  0021                     ___awmod@sign:	
  1147                           ; 1 bytes @ 0x1
  1148                           
  1149  0021                     ___lwdiv@divisor:	
  1150                           ; 1 bytes @ 0x1
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x1
  1154  0021                     	ds	1
  1155  0022                     ?___awdiv:
  1156  0022                     set_cursor@x:	
  1157                           ; 2 bytes @ 0x2
  1158                           
  1159  0022                     ___awdiv@divisor:	
  1160                           ; 1 bytes @ 0x2
  1161                           
  1162  0022                     __Umul8_16@word_mpld:	
  1163                           ; 2 bytes @ 0x2
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x2
  1167  0022                     	ds	1
  1168  0023                     write_string@i:
  1169  0023                     ___lwdiv@dividend:	
  1170                           ; 2 bytes @ 0x3
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x3
  1174  0023                     	ds	1
  1175  0024                     __Umul8_16@multiplier:
  1176  0024                     ___xxtofl@sign:	
  1177                           ; 1 bytes @ 0x4
  1178                           
  1179  0024                     ___awdiv@dividend:	
  1180                           ; 1 bytes @ 0x4
  1181                           
  1182  0024                     ___lldiv@dividend:	
  1183                           ; 2 bytes @ 0x4
  1184                           
  1185  0024                     ___aldiv@dividend:	
  1186                           ; 4 bytes @ 0x4
  1187                           
  1188  0024                     __div_to_l_@f2:	
  1189                           ; 4 bytes @ 0x4
  1190                           
  1191  0024                     ___fleq@ff2:	
  1192                           ; 4 bytes @ 0x4
  1193                           
  1194  0024                     ___flge@ff2:	
  1195                           ; 4 bytes @ 0x4
  1196                           
  1197  0024                     __tdiv_to_l_@f2:	
  1198                           ; 4 bytes @ 0x4
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x4
  1202  0024                     	ds	1
  1203  0025                     ??___lwdiv:
  1204  0025                     ___xxtofl@exp:	
  1205                           ; 1 bytes @ 0x5
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x5
  1209  0025                     	ds	1
  1210  0026                     ??___awdiv:
  1211  0026                     ___lwdiv@counter:	
  1212                           ; 1 bytes @ 0x6
  1213                           
  1214  0026                     ___xxtofl@arg:	
  1215                           ; 1 bytes @ 0x6
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x6
  1219  0026                     	ds	1
  1220  0027                     ___awdiv@counter:
  1221  0027                     ___lwdiv@quotient:	
  1222                           ; 1 bytes @ 0x7
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x7
  1226  0027                     	ds	1
  1227  0028                     ___aldiv@counter:
  1228  0028                     ___awdiv@sign:	
  1229                           ; 1 bytes @ 0x8
  1230                           
  1231  0028                     ___lldiv@quotient:	
  1232                           ; 1 bytes @ 0x8
  1233                           
  1234  0028                     __div_to_l_@quot:	
  1235                           ; 4 bytes @ 0x8
  1236                           
  1237  0028                     __tdiv_to_l_@quot:	
  1238                           ; 4 bytes @ 0x8
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0x8
  1242  0028                     	ds	1
  1243  0029                     ___aldiv@sign:
  1244  0029                     ___awdiv@quotient:	
  1245                           ; 1 bytes @ 0x9
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x9
  1249  0029                     	ds	1
  1250  002A                     ___aldiv@quotient:
  1251                           
  1252                           ; 4 bytes @ 0xA
  1253  002A                     	ds	1
  1254  002B                     ?___flmul:
  1255  002B                     ___flmul@b:	
  1256                           ; 4 bytes @ 0xB
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0xB
  1260  002B                     	ds	1
  1261  002C                     ___lldiv@counter:
  1262  002C                     __div_to_l_@cntr:	
  1263                           ; 1 bytes @ 0xC
  1264                           
  1265  002C                     __tdiv_to_l_@cntr:	
  1266                           ; 1 bytes @ 0xC
  1267                           
  1268                           
  1269                           ; 1 bytes @ 0xC
  1270  002C                     	ds	1
  1271  002D                     ?___llmod:
  1272  002D                     __div_to_l_@exp1:	
  1273                           ; 4 bytes @ 0xD
  1274                           
  1275  002D                     __tdiv_to_l_@exp1:	
  1276                           ; 1 bytes @ 0xD
  1277                           
  1278  002D                     ___llmod@divisor:	
  1279                           ; 1 bytes @ 0xD
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0xD
  1283  002D                     	ds	1
  1284  002E                     ?_USART_Init:
  1285  002E                     USART_Init@baudrate:	
  1286                           ; 1 bytes @ 0xE
  1287                           
  1288                           
  1289                           ; 4 bytes @ 0xE
  1290  002E                     	ds	1
  1291  002F                     ___flmul@a:
  1292                           
  1293                           ; 4 bytes @ 0xF
  1294  002F                     	ds	2
  1295  0031                     ___llmod@dividend:
  1296                           
  1297                           ; 4 bytes @ 0x11
  1298  0031                     	ds	1
  1299  0032                     ??_USART_Init:
  1300                           
  1301                           ; 1 bytes @ 0x12
  1302  0032                     	ds	1
  1303  0033                     ??___flmul:
  1304                           
  1305                           ; 1 bytes @ 0x13
  1306  0033                     	ds	5
  1307  0038                     ___flmul@sign:
  1308                           
  1309                           ; 1 bytes @ 0x18
  1310  0038                     	ds	1
  1311  0039                     ___flmul@grs:
  1312                           
  1313                           ; 4 bytes @ 0x19
  1314  0039                     	ds	4
  1315  003D                     ___flmul@aexp:
  1316                           
  1317                           ; 1 bytes @ 0x1D
  1318  003D                     	ds	1
  1319  003E                     ___flmul@bexp:
  1320                           
  1321                           ; 1 bytes @ 0x1E
  1322  003E                     	ds	1
  1323  003F                     ___flmul@prod:
  1324                           
  1325                           ; 4 bytes @ 0x1F
  1326  003F                     	ds	4
  1327  0043                     ___flmul@temp:
  1328                           
  1329                           ; 2 bytes @ 0x23
  1330  0043                     	ds	2
  1331  0045                     ?_conversion:
  1332  0045                     ?_fround:	
  1333                           ; 4 bytes @ 0x25
  1334                           
  1335  0045                     ?_scale:	
  1336                           ; 4 bytes @ 0x25
  1337                           
  1338                           
  1339                           ; 4 bytes @ 0x25
  1340  0045                     	ds	4
  1341  0049                     ??_conversion:
  1342  0049                     ??_fround:	
  1343                           ; 1 bytes @ 0x29
  1344                           
  1345  0049                     ??_scale:	
  1346                           ; 1 bytes @ 0x29
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x29
  1350  0049                     	ds	4
  1351  004D                     conversion@x:
  1352                           
  1353                           ; 1 bytes @ 0x2D
  1354  004D                     	ds	3
  1355  0050                     _fround$1108:
  1356                           
  1357                           ; 4 bytes @ 0x30
  1358  0050                     	ds	3
  1359  0053                     _scale$1109:
  1360                           
  1361                           ; 4 bytes @ 0x33
  1362  0053                     	ds	1
  1363  0054                     _fround$1107:
  1364                           
  1365                           ; 4 bytes @ 0x34
  1366  0054                     	ds	3
  1367  0057                     scale@scl:
  1368                           
  1369                           ; 1 bytes @ 0x37
  1370  0057                     	ds	1
  1371  0058                     ?___fltol:
  1372  0058                     fround@prec:	
  1373                           ; 4 bytes @ 0x38
  1374                           
  1375  0058                     ___fltol@f1:	
  1376                           ; 1 bytes @ 0x38
  1377                           
  1378                           
  1379                           ; 4 bytes @ 0x38
  1380  0058                     	ds	1
  1381  0059                     ?___fladd:
  1382  0059                     ___fladd@b:	
  1383                           ; 4 bytes @ 0x39
  1384                           
  1385                           
  1386                           ; 4 bytes @ 0x39
  1387  0059                     	ds	3
  1388  005C                     ??___fltol:
  1389                           
  1390                           ; 1 bytes @ 0x3C
  1391  005C                     	ds	1
  1392  005D                     ___fladd@a:
  1393                           
  1394                           ; 4 bytes @ 0x3D
  1395  005D                     	ds	4
  1396  0061                     ??___fladd:
  1397  0061                     ___fltol@sign1:	
  1398                           ; 1 bytes @ 0x41
  1399                           
  1400                           
  1401                           ; 1 bytes @ 0x41
  1402  0061                     	ds	1
  1403  0062                     ___fltol@exp1:
  1404                           
  1405                           ; 1 bytes @ 0x42
  1406  0062                     	ds	7
  1407  0069                     ___fladd@signs:
  1408                           
  1409                           ; 1 bytes @ 0x49
  1410  0069                     	ds	1
  1411  006A                     ___fladd@aexp:
  1412                           
  1413                           ; 1 bytes @ 0x4A
  1414  006A                     	ds	1
  1415  006B                     ___fladd@bexp:
  1416                           
  1417                           ; 1 bytes @ 0x4B
  1418  006B                     	ds	1
  1419  006C                     ___fladd@grs:
  1420                           
  1421                           ; 1 bytes @ 0x4C
  1422  006C                     	ds	1
  1423                           
  1424                           	psect	maintext
  1425  084F                     __pmaintext:	
  1426 ;;
  1427 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1428 ;;
  1429 ;; *************** function _main *****************
  1430 ;; Defined at:
  1431 ;;		line 72 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : B00/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       0       3       0       0
  1448 ;;      Totals:         0       0       3       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels required when called:    6
  1451 ;; This function calls:
  1452 ;;		_ADCmed
  1453 ;;		_LCD_init
  1454 ;;		_USART_Init
  1455 ;;		_Write_USART
  1456 ;;		_Write_USART_String
  1457 ;;		_clear_LCD
  1458 ;;		_conversion
  1459 ;;		_set_cursor
  1460 ;;		_setup
  1461 ;;		_sprintf
  1462 ;;		_write_string
  1463 ;; This function is called by:
  1464 ;;		Startup code after reset
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           
  1469                           ;psect for function _main
  1470  084F                     _main:
  1471  084F                     l4512:	
  1472                           ;incstack = 0
  1473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1474                           
  1475                           
  1476                           ;main.c: 73: 
  1477  084F  120A  118A  27EA  120A  158A  	fcall	_setup
  1478  0854                     l4514:
  1479                           
  1480                           ;main.c: 74: void setup(void) {
  1481  0854  3000               	movlw	0
  1482  0855  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0856  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0857  00B1               	movwf	USART_Init@baudrate+3
  1485  0858  3000               	movlw	0
  1486  0859  00B0               	movwf	USART_Init@baudrate+2
  1487  085A  3025               	movlw	37
  1488  085B  00AF               	movwf	USART_Init@baudrate+1
  1489  085C  3080               	movlw	128
  1490  085D  00AE               	movwf	USART_Init@baudrate
  1491  085E  160A  118A  21A5  120A  158A  	fcall	_USART_Init
  1492  0863                     l4516:
  1493                           
  1494                           ;main.c: 75:     ANSEL = 0;
  1495  0863  160A  158A  2182  120A  158A  	fcall	_LCD_init
  1496  0868                     l4518:
  1497                           
  1498                           ;main.c: 76:     ANSELH = 0;
  1499  0868  160A  118A  20DA  120A  158A  	fcall	_clear_LCD
  1500  086D                     l4520:
  1501                           
  1502                           ;main.c: 78:     PORTE = 0;
  1503  086D  3000               	movlw	0
  1504  086E  160A  118A  2281  120A  158A  	fcall	_ADCmed
  1505  0873  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0874  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0875  00D1               	movwf	??_main^(0+128)
  1508  0876  0851               	movf	??_main^(0+128),w
  1509  0877  00FA               	movwf	_ADC0
  1510  0878                     l4522:
  1511                           
  1512                           ;main.c: 79: 
  1513  0878  3001               	movlw	1
  1514  0879  160A  118A  2281  120A  158A  	fcall	_ADCmed
  1515  087E  1683               	bsf	3,5	;RP0=1, select bank1
  1516  087F  1303               	bcf	3,6	;RP1=0, select bank1
  1517  0880  00D1               	movwf	??_main^(0+128)
  1518  0881  0851               	movf	??_main^(0+128),w
  1519  0882  00F9               	movwf	_ADC1
  1520  0883                     l4524:
  1521                           
  1522                           ;main.c: 80:     TRISD = 0;
  1523  0883  087A               	movf	_ADC0,w
  1524  0884  160A  158A  21B0  120A  158A  	fcall	_conversion
  1525  0889  1283               	bcf	3,5	;RP0=0, select bank0
  1526  088A  1303               	bcf	3,6	;RP1=0, select bank0
  1527  088B  0848               	movf	?_conversion+3,w
  1528  088C  1683               	bsf	3,5	;RP0=1, select bank1
  1529  088D  1303               	bcf	3,6	;RP1=0, select bank1
  1530  088E  00DB               	movwf	(_V1+3)^(0+128)
  1531  088F  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0890  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0891  0847               	movf	?_conversion+2,w
  1534  0892  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0893  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0894  00DA               	movwf	(_V1+2)^(0+128)
  1537  0895  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0896  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0897  0846               	movf	?_conversion+1,w
  1540  0898  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0899  1303               	bcf	3,6	;RP1=0, select bank1
  1542  089A  00D9               	movwf	(_V1+1)^(0+128)
  1543  089B  1283               	bcf	3,5	;RP0=0, select bank0
  1544  089C  1303               	bcf	3,6	;RP1=0, select bank0
  1545  089D  0845               	movf	?_conversion,w
  1546  089E  1683               	bsf	3,5	;RP0=1, select bank1
  1547  089F  1303               	bcf	3,6	;RP1=0, select bank1
  1548  08A0  00D8               	movwf	_V1^(0+128)
  1549  08A1                     l4526:
  1550                           
  1551                           ;main.c: 81:     TRISE = 0;
  1552  08A1  0879               	movf	_ADC1,w
  1553  08A2  160A  158A  21B0  120A  158A  	fcall	_conversion
  1554  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  1555  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  1556  08A9  0848               	movf	?_conversion+3,w
  1557  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  1558  08AB  1303               	bcf	3,6	;RP1=0, select bank1
  1559  08AC  00D7               	movwf	(_V2+3)^(0+128)
  1560  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  1561  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  1562  08AF  0847               	movf	?_conversion+2,w
  1563  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  1564  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  1565  08B2  00D6               	movwf	(_V2+2)^(0+128)
  1566  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  1567  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  1568  08B5  0846               	movf	?_conversion+1,w
  1569  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  1570  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  1571  08B8  00D5               	movwf	(_V2+1)^(0+128)
  1572  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1573  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  1574  08BB  0845               	movf	?_conversion,w
  1575  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  1576  08BD  1303               	bcf	3,6	;RP1=0, select bank1
  1577  08BE  00D4               	movwf	_V2^(0+128)
  1578  08BF                     l4528:
  1579                           
  1580                           ;main.c: 83:     INTCONbits.PEIE = 1;
  1581  08BF  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1582  08C0  00F4               	movwf	Write_USART_String@a
  1583  08C1  3080               	movlw	128
  1584  08C2  00F5               	movwf	Write_USART_String@a+1
  1585  08C3  160A  158A  20FF  120A  158A  	fcall	_Write_USART_String
  1586  08C8                     l4530:
  1587                           
  1588                           ;main.c: 85:     PIR1bits.RCIF = 0;
  1589  08C8  30B5               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1590  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1591  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1592  08CB  00D1               	movwf	??_main^(0+128)
  1593  08CC  0851               	movf	??_main^(0+128),w
  1594  08CD  00A8               	movwf	sprintf@f^(0+128)
  1595  08CE  085B               	movf	(_V1+3)^(0+128),w
  1596  08CF  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1597  08D0  085A               	movf	(_V1+2)^(0+128),w
  1598  08D1  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1599  08D2  0859               	movf	(_V1+1)^(0+128),w
  1600  08D3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1601  08D4  0858               	movf	_V1^(0+128),w
  1602  08D5  00A9               	movwf	(?_sprintf^(0+128)+1)
  1603  08D6  0857               	movf	(_V2+3)^(0+128),w
  1604  08D7  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1605  08D8  0856               	movf	(_V2+2)^(0+128),w
  1606  08D9  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1607  08DA  0855               	movf	(_V2+1)^(0+128),w
  1608  08DB  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1609  08DC  0854               	movf	_V2^(0+128),w
  1610  08DD  00AD               	movwf	(?_sprintf^(0+128)+5)
  1611  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  1612  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  1613  08E0  086D               	movf	_contador,w
  1614  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  1615  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  1616  08E3  00D2               	movwf	(??_main+1)^(0+128)
  1617  08E4  01D3               	clrf	((??_main+1)^(0+128)+1)
  1618  08E5  0852               	movf	(??_main+1)^(0+128),w
  1619  08E6  00B1               	movwf	(?_sprintf^(0+128)+9)
  1620  08E7  0853               	movf	(??_main+2)^(0+128),w
  1621  08E8  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1622  08E9  30DC               	movlw	(low (_BUFFER| 0))& (0+255)
  1623  08EA  120A  118A  2022  120A  158A  	fcall	_sprintf
  1624  08EF                     l4532:
  1625                           
  1626                           ;main.c: 86:     INTCONbits.GIE = 1;
  1627  08EF  30DC               	movlw	(low (_BUFFER| 0))& (0+255)
  1628  08F0  00F4               	movwf	Write_USART_String@a
  1629  08F1  3000               	movlw	0
  1630  08F2  00F5               	movwf	Write_USART_String@a+1
  1631  08F3  160A  158A  20FF  120A  158A  	fcall	_Write_USART_String
  1632  08F8                     l4534:
  1633                           
  1634                           ;main.c: 87: 
  1635  08F8  300D               	movlw	13
  1636  08F9  160A  118A  20CE  120A  158A  	fcall	_Write_USART
  1637  08FE                     l4536:
  1638                           
  1639                           ;main.c: 88: 
  1640  08FE  300A               	movlw	10
  1641  08FF  160A  118A  20CE  120A  158A  	fcall	_Write_USART
  1642  0904                     l4538:
  1643                           
  1644                           ;main.c: 89: 
  1645  0904  160A  118A  20DA  120A  158A  	fcall	_clear_LCD
  1646  0909                     l4540:
  1647                           
  1648                           ;main.c: 90: 
  1649  0909  01F7               	clrf	set_cursor@b
  1650  090A  0AF7               	incf	set_cursor@b,f
  1651  090B  3001               	movlw	1
  1652  090C  160A  158A  20B0  120A  158A  	fcall	_set_cursor
  1653  0911                     l4542:
  1654                           
  1655                           ;main.c: 91:     }
  1656  0911  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1657  0912  00F6               	movwf	write_string@a
  1658  0913  3080               	movlw	128
  1659  0914  00F7               	movwf	write_string@a+1
  1660  0915  120A  158A  2009  120A  158A  	fcall	_write_string
  1661  091A                     l4544:
  1662  091A  01F7               	clrf	set_cursor@b
  1663  091B  3002               	movlw	2
  1664  091C  160A  158A  20B0  120A  158A  	fcall	_set_cursor
  1665  0921                     l4546:
  1666  0921  30DC               	movlw	(low (_BUFFER| 0))& (0+255)
  1667  0922  00F6               	movwf	write_string@a
  1668  0923  3000               	movlw	0
  1669  0924  00F7               	movwf	write_string@a+1
  1670  0925  120A  158A  2009  120A  158A  	fcall	_write_string
  1671  092A                     l4548:
  1672  092A  3003               	movlw	3
  1673  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1674  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1675  092D  00D3               	movwf	(??_main^(0+128)+2)
  1676  092E  308A               	movlw	138
  1677  092F  00D2               	movwf	(??_main^(0+128)+1)
  1678  0930  3055               	movlw	85
  1679  0931  00D1               	movwf	??_main^(0+128)
  1680  0932                     u7737:
  1681  0932  0BD1               	decfsz	??_main^(0+128),f
  1682  0933  2932               	goto	u7737
  1683  0934  0BD2               	decfsz	(??_main^(0+128)+1),f
  1684  0935  2932               	goto	u7737
  1685  0936  0BD3               	decfsz	(??_main^(0+128)+2),f
  1686  0937  2932               	goto	u7737
  1687  0938  286D               	goto	l4520
  1688  0939  120A  118A  280C   	ljmp	start
  1689  093C                     __end_of_main:
  1690                           
  1691                           	psect	text1
  1692  0809                     __ptext1:	
  1693 ;; *************** function _write_string *****************
  1694 ;; Defined at:
  1695 ;;		line 90 in file "LCD.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  a               2    6[COMMON] PTR unsigned char 
  1698 ;;		 -> STR_3(15), BUFFER(20), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  i               2    3[BANK0 ] int 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         2       0       0       0       0
  1711 ;;      Locals:         0       2       0       0       0
  1712 ;;      Temps:          0       3       0       0       0
  1713 ;;      Totals:         2       5       0       0       0
  1714 ;;Total ram usage:        7 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    4
  1717 ;; This function calls:
  1718 ;;		_write_char
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _write_string
  1726  0809                     _write_string:
  1727  0809                     l4504:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1730                           
  1731                           
  1732                           ;LCD.c: 91:     int i;;LCD.c: 92:  for(i=0;a[i]!='\0';i++)
  1733  0809  1283               	bcf	3,5	;RP0=0, select bank0
  1734  080A  1303               	bcf	3,6	;RP1=0, select bank0
  1735  080B  01A3               	clrf	write_string@i
  1736  080C  01A4               	clrf	write_string@i+1
  1737  080D  2832               	goto	l4510
  1738  080E                     l4506:
  1739                           
  1740                           ;LCD.c: 93:  write_char(a[i]);
  1741  080E  0823               	movf	write_string@i,w
  1742  080F  0776               	addwf	write_string@a,w
  1743  0810  00A1               	movwf	??_write_string+1
  1744  0811  0877               	movf	write_string@a+1,w
  1745  0812  00A0               	movwf	??_write_string
  1746  0813  1803               	skipnc
  1747  0814  0AA0               	incf	??_write_string,f
  1748  0815  1FA3               	btfss	write_string@i,7
  1749  0816  2818               	goto	u7700
  1750  0817  03A0               	decf	??_write_string,f
  1751  0818                     u7700:
  1752  0818  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0819  1303               	bcf	3,6	;RP1=0, select bank0
  1754  081A  0820               	movf	??_write_string,w
  1755  081B  00A2               	movwf	??_write_string+2
  1756  081C  0822               	movf	??_write_string+2,w
  1757  081D  00FF               	movwf	btemp+1
  1758  081E  0821               	movf	??_write_string+1,w
  1759  081F  0084               	movwf	4
  1760  0820  160A  118A  2000  120A  158A  	fcall	stringtab
  1761  0825  160A  158A  2074  120A  158A  	fcall	_write_char
  1762  082A                     l4508:
  1763  082A  3001               	movlw	1
  1764  082B  1283               	bcf	3,5	;RP0=0, select bank0
  1765  082C  1303               	bcf	3,6	;RP1=0, select bank0
  1766  082D  07A3               	addwf	write_string@i,f
  1767  082E  1803               	skipnc
  1768  082F  0AA4               	incf	write_string@i+1,f
  1769  0830  3000               	movlw	0
  1770  0831  07A4               	addwf	write_string@i+1,f
  1771  0832                     l4510:
  1772  0832  0823               	movf	write_string@i,w
  1773  0833  0776               	addwf	write_string@a,w
  1774  0834  00A1               	movwf	??_write_string+1
  1775  0835  0877               	movf	write_string@a+1,w
  1776  0836  00A0               	movwf	??_write_string
  1777  0837  1803               	skipnc
  1778  0838  0AA0               	incf	??_write_string,f
  1779  0839  1FA3               	btfss	write_string@i,7
  1780  083A  283C               	goto	u7710
  1781  083B  03A0               	decf	??_write_string,f
  1782  083C                     u7710:
  1783  083C  1283               	bcf	3,5	;RP0=0, select bank0
  1784  083D  1303               	bcf	3,6	;RP1=0, select bank0
  1785  083E  0820               	movf	??_write_string,w
  1786  083F  00A2               	movwf	??_write_string+2
  1787  0840  0822               	movf	??_write_string+2,w
  1788  0841  00FF               	movwf	btemp+1
  1789  0842  0821               	movf	??_write_string+1,w
  1790  0843  0084               	movwf	4
  1791  0844  160A  118A  2000  120A  158A  	fcall	stringtab
  1792  0849  3A00               	xorlw	0
  1793  084A  1D03               	skipz
  1794  084B  284D               	goto	u7721
  1795  084C  284E               	goto	u7720
  1796  084D                     u7721:
  1797  084D  280E               	goto	l4506
  1798  084E                     u7720:
  1799  084E                     l148:
  1800  084E  0008               	return
  1801  084F                     __end_of_write_string:
  1802                           
  1803                           	psect	text2
  1804  1874                     __ptext2:	
  1805 ;; *************** function _write_char *****************
  1806 ;; Defined at:
  1807 ;;		line 80 in file "LCD.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  a               1    wreg     unsigned char 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  a               1    5[COMMON] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       0       0       0       0
  1822 ;;      Locals:         1       0       0       0       0
  1823 ;;      Temps:          1       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    3
  1828 ;; This function calls:
  1829 ;;		_port
  1830 ;; This function is called by:
  1831 ;;		_write_string
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _write_char
  1837  1874                     _write_char:
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1841                           ;write_char@a stored from wreg
  1842  1874  00F5               	movwf	write_char@a
  1843  1875                     l3894:
  1844                           
  1845                           ;LCD.c: 81:     RE0 = 1;
  1846  1875  1283               	bcf	3,5	;RP0=0, select bank0
  1847  1876  1303               	bcf	3,6	;RP1=0, select bank0
  1848  1877  1409               	bsf	9,0	;volatile
  1849  1878                     l3896:
  1850                           
  1851                           ;LCD.c: 82:     port(a);
  1852  1878  0875               	movf	write_char@a,w
  1853  1879  160A  158A  2224  160A  158A  	fcall	_port
  1854  187E                     l3898:
  1855                           
  1856                           ;LCD.c: 83:     RE1 = 1;
  1857  187E  1283               	bcf	3,5	;RP0=0, select bank0
  1858  187F  1303               	bcf	3,6	;RP1=0, select bank0
  1859  1880  1489               	bsf	9,1	;volatile
  1860  1881                     l3900:
  1861                           
  1862                           ;LCD.c: 84:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1863  1881  2882               	nop2	;2 cycle nop
  1864  1882  2883               	nop2	;2 cycle nop
  1865  1883  0000               	nop
  1866  1884                     l3902:
  1867                           
  1868                           ;LCD.c: 85:     RE1 = 0;
  1869  1884  1283               	bcf	3,5	;RP0=0, select bank0
  1870  1885  1303               	bcf	3,6	;RP1=0, select bank0
  1871  1886  1089               	bcf	9,1	;volatile
  1872  1887                     l3904:
  1873                           
  1874                           ;LCD.c: 86:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1875  1887  2888               	nop2	;2 cycle nop
  1876  1888  2889               	nop2	;2 cycle nop
  1877  1889  0000               	nop
  1878  188A                     l3906:
  1879                           
  1880                           ;LCD.c: 87:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1881  188A  3010               	movlw	16
  1882  188B  00F4               	movwf	??_write_char
  1883  188C                     u7747:
  1884  188C  0BF4               	decfsz	??_write_char,f
  1885  188D  288C               	goto	u7747
  1886  188E  0000               	nop
  1887  188F                     l142:
  1888  188F  0008               	return
  1889  1890                     __end_of_write_char:
  1890                           
  1891                           	psect	text3
  1892  0022                     __ptext3:	
  1893 ;; *************** function _sprintf *****************
  1894 ;; Defined at:
  1895 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  sp              1    wreg     PTR unsigned char 
  1898 ;;		 -> BUFFER(20), 
  1899 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1900 ;;		 -> STR_2(10), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  sp              1   43[BANK1 ] PTR unsigned char 
  1903 ;;		 -> BUFFER(20), 
  1904 ;;  fval            4   44[BANK1 ] PTR unsigned char 
  1905 ;;  tmpval          4   39[BANK1 ] struct .
  1906 ;;  val             4   33[BANK1 ] unsigned long 
  1907 ;;  eexp            2   37[BANK1 ] int 
  1908 ;;  prec            2   31[BANK1 ] int 
  1909 ;;  flag            2   29[BANK1 ] unsigned short 
  1910 ;;  cp              2    0        PTR const unsigned char 
  1911 ;;  len             2    0        unsigned int 
  1912 ;;  width           2    0        int 
  1913 ;;  c               1   48[BANK1 ] unsigned char 
  1914 ;;  ap              1   28[BANK1 ] PTR void [1]
  1915 ;;		 -> ?_sprintf(2), 
  1916 ;;  d               1    0        unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2    8[BANK1 ] int 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       0      11       0       0
  1927 ;;      Locals:         0       0      25       0       0
  1928 ;;      Temps:          0       0       5       0       0
  1929 ;;      Totals:         0       0      41       0       0
  1930 ;;Total ram usage:       41 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    5
  1933 ;; This function calls:
  1934 ;;		___awdiv
  1935 ;;		___fladd
  1936 ;;		___fleq
  1937 ;;		___flge
  1938 ;;		___flmul
  1939 ;;		___flneg
  1940 ;;		___flsub
  1941 ;;		___fltol
  1942 ;;		___lldiv
  1943 ;;		___llmod
  1944 ;;		___wmul
  1945 ;;		___xxtofl
  1946 ;;		__div_to_l_
  1947 ;;		__tdiv_to_l_
  1948 ;;		_fround
  1949 ;;		_scale
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _sprintf
  1957  0022                     _sprintf:
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1961                           ;sprintf@sp stored from wreg
  1962  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0024  00CB               	movwf	sprintf@sp^(0+128)
  1965  0025                     l4290:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1968  0025  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1969  0026  00B3               	movwf	??_sprintf^(0+128)
  1970  0027  0833               	movf	??_sprintf^(0+128),w
  1971  0028  00BC               	movwf	sprintf@ap^(0+128)
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1974  0029  2FD3               	goto	l4482
  1975  002A                     l4292:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1978  002A  3025               	movlw	37
  1979  002B  0650               	xorwf	sprintf@c^(0+128),w
  1980  002C  1903               	btfsc	3,2
  1981  002D  282F               	goto	u7351
  1982  002E  2830               	goto	u7350
  1983  002F                     u7351:
  1984  002F  283C               	goto	l4298
  1985  0030                     u7350:
  1986  0030                     l4294:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1989  0030  0850               	movf	sprintf@c^(0+128),w
  1990  0031  00B3               	movwf	??_sprintf^(0+128)
  1991  0032  084B               	movf	sprintf@sp^(0+128),w
  1992  0033  0084               	movwf	4
  1993  0034  0833               	movf	??_sprintf^(0+128),w
  1994  0035  1383               	bcf	3,7	;select IRP bank0
  1995  0036  0080               	movwf	0
  1996  0037                     l4296:
  1997  0037  3001               	movlw	1
  1998  0038  00B3               	movwf	??_sprintf^(0+128)
  1999  0039  0833               	movf	??_sprintf^(0+128),w
  2000  003A  07CB               	addwf	sprintf@sp^(0+128),f
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2003  003B  2FD3               	goto	l4482
  2004  003C                     l4298:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2007  003C  01BD               	clrf	sprintf@flag^(0+128)
  2008  003D  01BE               	clrf	(sprintf@flag+1)^(0+128)
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2011  003E  2841               	goto	l4302
  2012  003F                     l357:	
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2014                           
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2017  003F  153E               	bsf	(sprintf@flag^(0+128)+1),2
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2020  0040  2861               	goto	l4304
  2021  0041                     l4302:
  2022  0041  3001               	movlw	1
  2023  0042  07A8               	addwf	sprintf@f^(0+128),f
  2024  0043  30FF               	movlw	-1
  2025  0044  0728               	addwf	sprintf@f^(0+128),w
  2026  0045  0084               	movwf	4
  2027  0046  160A  118A  200A  120A  118A  	fcall	stringdir
  2028  004B  00D0               	movwf	sprintf@c^(0+128)
  2029  004C  00B3               	movwf	??_sprintf^(0+128)
  2030  004D  01B4               	clrf	(??_sprintf^(0+128)+1)
  2031                           
  2032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2033                           ; Switch size 1, requested type "simple"
  2034                           ; Number of cases is 1, Range of values is 0 to 0
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte            4     3 (average)
  2038                           ; direct_byte           11     8 (fixed)
  2039                           ; jumptable            260     6 (fixed)
  2040                           ;	Chosen strategy is simple_byte
  2041  004E  0834               	movf	(??_sprintf+1)^(0+128),w
  2042  004F  3A00               	xorlw	0	; case 0
  2043  0050  1903               	skipnz
  2044  0051  2853               	goto	l4600
  2045  0052  2FD3               	goto	l4482
  2046  0053                     l4600:
  2047                           
  2048                           ; Switch size 1, requested type "simple"
  2049                           ; Number of cases is 4, Range of values is 0 to 105
  2050                           ; switch strategies available:
  2051                           ; Name         Instructions Cycles
  2052                           ; simple_byte           13     7 (average)
  2053                           ; jumptable            260     6 (fixed)
  2054                           ;	Chosen strategy is simple_byte
  2055  0053  0833               	movf	??_sprintf^(0+128),w
  2056  0054  3A00               	xorlw	0	; case 0
  2057  0055  1903               	skipnz
  2058  0056  2FE5               	goto	l4484
  2059  0057  3A64               	xorlw	100	; case 100
  2060  0058  1903               	skipnz
  2061  0059  2861               	goto	l4304
  2062  005A  3A02               	xorlw	2	; case 102
  2063  005B  1903               	skipnz
  2064  005C  283F               	goto	l357
  2065  005D  3A0F               	xorlw	15	; case 105
  2066  005E  1903               	skipnz
  2067  005F  2861               	goto	l4304
  2068  0060  2FD3               	goto	l4482
  2069  0061                     l4304:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2072  0061  3000               	movlw	0
  2073  0062  053D               	andwf	sprintf@flag^(0+128),w
  2074  0063  00B3               	movwf	??_sprintf^(0+128)
  2075  0064  3007               	movlw	7
  2076  0065  053E               	andwf	(sprintf@flag+1)^(0+128),w
  2077  0066  00B4               	movwf	(??_sprintf+1)^(0+128)
  2078  0067  0833               	movf	??_sprintf^(0+128),w
  2079  0068  0434               	iorwf	(??_sprintf^(0+128)+1),w
  2080  0069  1903               	btfsc	3,2
  2081  006A  286C               	goto	u7361
  2082  006B  286D               	goto	u7360
  2083  006C                     u7361:
  2084  006C  2EC9               	goto	l4444
  2085  006D                     u7360:
  2086  006D                     l4306:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2089  006D  3006               	movlw	6
  2090  006E  00BF               	movwf	sprintf@prec^(0+128)
  2091  006F  3000               	movlw	0
  2092  0070  00C0               	movwf	(sprintf@prec^(0+128)+1)
  2093  0071                     l4308:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2096  0071  083C               	movf	sprintf@ap^(0+128),w
  2097  0072  0084               	movwf	4
  2098  0073  1383               	bcf	3,7	;select IRP bank0
  2099  0074  0800               	movf	0,w
  2100  0075  00CC               	movwf	sprintf@fval^(0+128)
  2101  0076  0A84               	incf	4,f
  2102  0077  0800               	movf	0,w
  2103  0078  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2104  0079  0A84               	incf	4,f
  2105  007A  0800               	movf	0,w
  2106  007B  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2107  007C  0A84               	incf	4,f
  2108  007D  0800               	movf	0,w
  2109  007E  00CF               	movwf	(sprintf@fval+3)^(0+128)
  2110  007F                     l4310:
  2111  007F  3004               	movlw	4
  2112  0080  00B3               	movwf	??_sprintf^(0+128)
  2113  0081  0833               	movf	??_sprintf^(0+128),w
  2114  0082  07BC               	addwf	sprintf@ap^(0+128),f
  2115  0083                     l4312:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2118  0083  084F               	movf	(sprintf@fval+3)^(0+128),w
  2119  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0086  00A3               	movwf	___flge@ff1+3
  2122  0087  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0088  1303               	bcf	3,6	;RP1=0, select bank1
  2124  0089  084E               	movf	(sprintf@fval+2)^(0+128),w
  2125  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2126  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2127  008C  00A2               	movwf	___flge@ff1+2
  2128  008D  1683               	bsf	3,5	;RP0=1, select bank1
  2129  008E  1303               	bcf	3,6	;RP1=0, select bank1
  2130  008F  084D               	movf	(sprintf@fval+1)^(0+128),w
  2131  0090  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0091  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0092  00A1               	movwf	___flge@ff1+1
  2134  0093  1683               	bsf	3,5	;RP0=1, select bank1
  2135  0094  1303               	bcf	3,6	;RP1=0, select bank1
  2136  0095  084C               	movf	sprintf@fval^(0+128),w
  2137  0096  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0097  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0098  00A0               	movwf	___flge@ff1
  2140  0099  3000               	movlw	0
  2141  009A  00A7               	movwf	___flge@ff2+3
  2142  009B  3000               	movlw	0
  2143  009C  00A6               	movwf	___flge@ff2+2
  2144  009D  3000               	movlw	0
  2145  009E  00A5               	movwf	___flge@ff2+1
  2146  009F  3000               	movlw	0
  2147  00A0  00A4               	movwf	___flge@ff2
  2148  00A1  160A  158A  25E3  120A  118A  	fcall	___flge
  2149  00A6  1803               	btfsc	3,0
  2150  00A7  28A9               	goto	u7371
  2151  00A8  28AA               	goto	u7370
  2152  00A9                     u7371:
  2153  00A9  28C7               	goto	l4318
  2154  00AA                     u7370:
  2155  00AA                     l4314:
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2158  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  2159  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  2160  00AC  084F               	movf	(sprintf@fval+3)^(0+128),w
  2161  00AD  00F6               	movwf	___flneg@f1+3
  2162  00AE  084E               	movf	(sprintf@fval+2)^(0+128),w
  2163  00AF  00F5               	movwf	___flneg@f1+2
  2164  00B0  084D               	movf	(sprintf@fval+1)^(0+128),w
  2165  00B1  00F4               	movwf	___flneg@f1+1
  2166  00B2  084C               	movf	sprintf@fval^(0+128),w
  2167  00B3  00F3               	movwf	___flneg@f1
  2168  00B4  160A  158A  2069  120A  118A  	fcall	___flneg
  2169  00B9  0876               	movf	?___flneg+3,w
  2170  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2171  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2172  00BC  00CF               	movwf	(sprintf@fval+3)^(0+128)
  2173  00BD  0875               	movf	?___flneg+2,w
  2174  00BE  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2175  00BF  0874               	movf	?___flneg+1,w
  2176  00C0  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2177  00C1  0873               	movf	?___flneg,w
  2178  00C2  00CC               	movwf	sprintf@fval^(0+128)
  2179  00C3                     l4316:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2182  00C3  3003               	movlw	3
  2183  00C4  04BD               	iorwf	sprintf@flag^(0+128),f
  2184  00C5  3000               	movlw	0
  2185  00C6  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  2186  00C7                     l4318:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2189  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  2190  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  2191  00C9  01C5               	clrf	sprintf@eexp^(0+128)
  2192  00CA  01C6               	clrf	(sprintf@eexp+1)^(0+128)
  2193  00CB                     l4320:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2196  00CB  084F               	movf	(sprintf@fval+3)^(0+128),w
  2197  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2198  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2199  00CE  00A3               	movwf	___fleq@ff1+3
  2200  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  2201  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  2202  00D1  084E               	movf	(sprintf@fval+2)^(0+128),w
  2203  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2204  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2205  00D4  00A2               	movwf	___fleq@ff1+2
  2206  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  2207  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  2208  00D7  084D               	movf	(sprintf@fval+1)^(0+128),w
  2209  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2210  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2211  00DA  00A1               	movwf	___fleq@ff1+1
  2212  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  2213  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  2214  00DD  084C               	movf	sprintf@fval^(0+128),w
  2215  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2216  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2217  00E0  00A0               	movwf	___fleq@ff1
  2218  00E1  3000               	movlw	0
  2219  00E2  00A7               	movwf	___fleq@ff2+3
  2220  00E3  3000               	movlw	0
  2221  00E4  00A6               	movwf	___fleq@ff2+2
  2222  00E5  3000               	movlw	0
  2223  00E6  00A5               	movwf	___fleq@ff2+1
  2224  00E7  3000               	movlw	0
  2225  00E8  00A4               	movwf	___fleq@ff2
  2226  00E9  160A  158A  22A8  120A  118A  	fcall	___fleq
  2227  00EE  1803               	btfsc	3,0
  2228  00EF  28F1               	goto	u7381
  2229  00F0  28F2               	goto	u7380
  2230  00F1                     u7381:
  2231  00F1  2A0E               	goto	l4346
  2232  00F2                     u7380:
  2233  00F2                     l4322:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2236  00F2  1003               	clrc
  2237  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  2238  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  2239  00F5  0D4E               	rlf	(sprintf@fval+2)^(0+128),w
  2240  00F6  0D4F               	rlf	(sprintf@fval+3)^(0+128),w
  2241  00F7  3E82               	addlw	130
  2242  00F8  00C5               	movwf	sprintf@eexp^(0+128)
  2243  00F9  30FF               	movlw	255
  2244  00FA  1803               	skipnc
  2245  00FB  3000               	movlw	0
  2246  00FC  00C6               	movwf	(sprintf@eexp^(0+128)+1)
  2247  00FD                     l4324:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2250  00FD  30FF               	movlw	255
  2251  00FE  07C5               	addwf	sprintf@eexp^(0+128),f
  2252  00FF  1803               	skipnc
  2253  0100  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  2254  0101  30FF               	movlw	255
  2255  0102  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  2256  0103                     l4326:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2259  0103  3003               	movlw	3
  2260  0104  00F3               	movwf	___wmul@multiplier
  2261  0105  3000               	movlw	0
  2262  0106  00F4               	movwf	___wmul@multiplier+1
  2263  0107  0846               	movf	(sprintf@eexp+1)^(0+128),w
  2264  0108  00F6               	movwf	___wmul@multiplicand+1
  2265  0109  0845               	movf	sprintf@eexp^(0+128),w
  2266  010A  00F5               	movwf	___wmul@multiplicand
  2267  010B  160A  158A  212A  120A  118A  	fcall	___wmul
  2268  0110  0874               	movf	?___wmul+1,w
  2269  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0112  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0113  00C6               	movwf	(sprintf@eexp+1)^(0+128)
  2272  0114  0873               	movf	?___wmul,w
  2273  0115  00C5               	movwf	sprintf@eexp^(0+128)
  2274  0116                     l4328:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2277  0116  300A               	movlw	10
  2278  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0119  00A2               	movwf	___awdiv@divisor
  2281  011A  3000               	movlw	0
  2282  011B  00A3               	movwf	___awdiv@divisor+1
  2283  011C  1683               	bsf	3,5	;RP0=1, select bank1
  2284  011D  1303               	bcf	3,6	;RP1=0, select bank1
  2285  011E  0846               	movf	(sprintf@eexp+1)^(0+128),w
  2286  011F  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0120  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0121  00A5               	movwf	___awdiv@dividend+1
  2289  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0123  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0124  0845               	movf	sprintf@eexp^(0+128),w
  2292  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0127  00A4               	movwf	___awdiv@dividend
  2295  0128  160A  158A  2461  120A  118A  	fcall	___awdiv
  2296  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2297  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2298  012F  0823               	movf	?___awdiv+1,w
  2299  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2300  0131  1303               	bcf	3,6	;RP1=0, select bank1
  2301  0132  00C6               	movwf	(sprintf@eexp+1)^(0+128)
  2302  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0135  0822               	movf	?___awdiv,w
  2305  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0137  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0138  00C5               	movwf	sprintf@eexp^(0+128)
  2308  0139                     l4330:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2311  0139  1FC6               	btfss	(sprintf@eexp+1)^(0+128),7
  2312  013A  293C               	goto	u7391
  2313  013B  293D               	goto	u7390
  2314  013C                     u7391:
  2315  013C  2943               	goto	l4334
  2316  013D                     u7390:
  2317  013D                     l4332:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2320  013D  30FF               	movlw	255
  2321  013E  07C5               	addwf	sprintf@eexp^(0+128),f
  2322  013F  1803               	skipnc
  2323  0140  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  2324  0141  30FF               	movlw	255
  2325  0142  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  2326  0143                     l4334:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2329  0143  0345               	decf	sprintf@eexp^(0+128),w
  2330  0144  3AFF               	xorlw	255
  2331  0145  120A  158A  249D  120A  118A  	fcall	_scale
  2332  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2333  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2334  014C  0848               	movf	?_scale+3,w
  2335  014D  1683               	bsf	3,5	;RP0=1, select bank1
  2336  014E  1303               	bcf	3,6	;RP1=0, select bank1
  2337  014F  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2338  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0152  0847               	movf	?_scale+2,w
  2341  0153  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0154  1303               	bcf	3,6	;RP1=0, select bank1
  2343  0155  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2344  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2345  0157  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0158  0846               	movf	?_scale+1,w
  2347  0159  1683               	bsf	3,5	;RP0=1, select bank1
  2348  015A  1303               	bcf	3,6	;RP1=0, select bank1
  2349  015B  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2350  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2351  015D  1303               	bcf	3,6	;RP1=0, select bank0
  2352  015E  0845               	movf	?_scale,w
  2353  015F  1683               	bsf	3,5	;RP0=1, select bank1
  2354  0160  1303               	bcf	3,6	;RP1=0, select bank1
  2355  0161  00C7               	movwf	sprintf@tmpval^(0+128)
  2356  0162                     l4336:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2359  0162  084F               	movf	(sprintf@fval+3)^(0+128),w
  2360  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0165  00AE               	movwf	___flmul@b+3
  2363  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2365  0168  084E               	movf	(sprintf@fval+2)^(0+128),w
  2366  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2367  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2368  016B  00AD               	movwf	___flmul@b+2
  2369  016C  1683               	bsf	3,5	;RP0=1, select bank1
  2370  016D  1303               	bcf	3,6	;RP1=0, select bank1
  2371  016E  084D               	movf	(sprintf@fval+1)^(0+128),w
  2372  016F  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0170  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0171  00AC               	movwf	___flmul@b+1
  2375  0172  1683               	bsf	3,5	;RP0=1, select bank1
  2376  0173  1303               	bcf	3,6	;RP1=0, select bank1
  2377  0174  084C               	movf	sprintf@fval^(0+128),w
  2378  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0177  00AB               	movwf	___flmul@b
  2381  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2382  0179  1303               	bcf	3,6	;RP1=0, select bank1
  2383  017A  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2384  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2385  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2386  017D  00B2               	movwf	___flmul@a+3
  2387  017E  1683               	bsf	3,5	;RP0=1, select bank1
  2388  017F  1303               	bcf	3,6	;RP1=0, select bank1
  2389  0180  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2390  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0183  00B1               	movwf	___flmul@a+2
  2393  0184  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0185  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0186  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2396  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0189  00B0               	movwf	___flmul@a+1
  2399  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2400  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2401  018C  0847               	movf	sprintf@tmpval^(0+128),w
  2402  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2403  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2404  018F  00AF               	movwf	___flmul@a
  2405  0190  120A  158A  213C  120A  118A  	fcall	___flmul
  2406  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0197  082E               	movf	?___flmul+3,w
  2409  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2411  019A  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2412  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2413  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2414  019D  082D               	movf	?___flmul+2,w
  2415  019E  1683               	bsf	3,5	;RP0=1, select bank1
  2416  019F  1303               	bcf	3,6	;RP1=0, select bank1
  2417  01A0  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2418  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2419  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2420  01A3  082C               	movf	?___flmul+1,w
  2421  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2422  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  2423  01A6  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2424  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2425  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2426  01A9  082B               	movf	?___flmul,w
  2427  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2428  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2429  01AC  00C7               	movwf	sprintf@tmpval^(0+128)
  2430  01AD                     l4338:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2433  01AD  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2434  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2435  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2436  01B0  00A3               	movwf	___flge@ff1+3
  2437  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2438  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2439  01B3  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2440  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2441  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2442  01B6  00A2               	movwf	___flge@ff1+2
  2443  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2444  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2445  01B9  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2446  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2447  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2448  01BC  00A1               	movwf	___flge@ff1+1
  2449  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2450  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2451  01BF  0847               	movf	sprintf@tmpval^(0+128),w
  2452  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2453  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2454  01C2  00A0               	movwf	___flge@ff1
  2455  01C3  303F               	movlw	63
  2456  01C4  00A7               	movwf	___flge@ff2+3
  2457  01C5  3080               	movlw	128
  2458  01C6  00A6               	movwf	___flge@ff2+2
  2459  01C7  3000               	movlw	0
  2460  01C8  00A5               	movwf	___flge@ff2+1
  2461  01C9  3000               	movlw	0
  2462  01CA  00A4               	movwf	___flge@ff2
  2463  01CB  160A  158A  25E3  120A  118A  	fcall	___flge
  2464  01D0  1803               	btfsc	3,0
  2465  01D1  29D3               	goto	u7401
  2466  01D2  29D4               	goto	u7400
  2467  01D3                     u7401:
  2468  01D3  29DD               	goto	l4342
  2469  01D4                     u7400:
  2470  01D4                     l4340:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2473  01D4  30FF               	movlw	255
  2474  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2475  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2476  01D7  07C5               	addwf	sprintf@eexp^(0+128),f
  2477  01D8  1803               	skipnc
  2478  01D9  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  2479  01DA  30FF               	movlw	255
  2480  01DB  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  2481  01DC  2A0E               	goto	l4346
  2482  01DD                     l4342:
  2483  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2484  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2485  01DF  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2486  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2487  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2488  01E2  00A3               	movwf	___flge@ff1+3
  2489  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2490  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2491  01E5  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2492  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2493  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2494  01E8  00A2               	movwf	___flge@ff1+2
  2495  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2496  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  2497  01EB  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2498  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2499  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2500  01EE  00A1               	movwf	___flge@ff1+1
  2501  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2502  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2503  01F1  0847               	movf	sprintf@tmpval^(0+128),w
  2504  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2505  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2506  01F4  00A0               	movwf	___flge@ff1
  2507  01F5  3041               	movlw	65
  2508  01F6  00A7               	movwf	___flge@ff2+3
  2509  01F7  3020               	movlw	32
  2510  01F8  00A6               	movwf	___flge@ff2+2
  2511  01F9  3000               	movlw	0
  2512  01FA  00A5               	movwf	___flge@ff2+1
  2513  01FB  3000               	movlw	0
  2514  01FC  00A4               	movwf	___flge@ff2
  2515  01FD  160A  158A  25E3  120A  118A  	fcall	___flge
  2516  0202  1C03               	btfss	3,0
  2517  0203  2A05               	goto	u7411
  2518  0204  2A06               	goto	u7410
  2519  0205                     u7411:
  2520  0205  2A0E               	goto	l4346
  2521  0206                     u7410:
  2522  0206                     l4344:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2525  0206  3001               	movlw	1
  2526  0207  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0208  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0209  07C5               	addwf	sprintf@eexp^(0+128),f
  2529  020A  1803               	skipnc
  2530  020B  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  2531  020C  3000               	movlw	0
  2532  020D  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  2533  020E                     l4346:
  2534  020E                     l4348:	
  2535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2536                           
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2539  020E  3006               	movlw	6
  2540  020F  160A  118A  236B  120A  118A  	fcall	_fround
  2541  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0216  0848               	movf	?_fround+3,w
  2544  0217  00DC               	movwf	___fladd@b+3
  2545  0218  0847               	movf	?_fround+2,w
  2546  0219  00DB               	movwf	___fladd@b+2
  2547  021A  0846               	movf	?_fround+1,w
  2548  021B  00DA               	movwf	___fladd@b+1
  2549  021C  0845               	movf	?_fround,w
  2550  021D  00D9               	movwf	___fladd@b
  2551  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2552  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0220  084F               	movf	(sprintf@fval+3)^(0+128),w
  2554  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0223  00E0               	movwf	___fladd@a+3
  2557  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0226  084E               	movf	(sprintf@fval+2)^(0+128),w
  2560  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0229  00DF               	movwf	___fladd@a+2
  2563  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2564  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2565  022C  084D               	movf	(sprintf@fval+1)^(0+128),w
  2566  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2567  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2568  022F  00DE               	movwf	___fladd@a+1
  2569  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0232  084C               	movf	sprintf@fval^(0+128),w
  2572  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0235  00DD               	movwf	___fladd@a
  2575  0236  160A  118A  2578  120A  118A  	fcall	___fladd
  2576  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2577  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2578  023D  085C               	movf	?___fladd+3,w
  2579  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2580  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2581  0240  00CF               	movwf	(sprintf@fval+3)^(0+128)
  2582  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0243  085B               	movf	?___fladd+2,w
  2585  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2586  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2587  0246  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2588  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0249  085A               	movf	?___fladd+1,w
  2591  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2592  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2593  024C  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2594  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2595  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2596  024F  0859               	movf	?___fladd,w
  2597  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0252  00CC               	movwf	sprintf@fval^(0+128)
  2600  0253                     l4350:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2603  0253  0846               	movf	(sprintf@eexp+1)^(0+128),w
  2604  0254  3A80               	xorlw	128
  2605  0255  00FF               	movwf	btemp+1
  2606  0256  3080               	movlw	128
  2607  0257  027F               	subwf	btemp+1,w
  2608  0258  1D03               	skipz
  2609  0259  2A5C               	goto	u7425
  2610  025A  300A               	movlw	10
  2611  025B  0245               	subwf	sprintf@eexp^(0+128),w
  2612  025C                     u7425:
  2613  025C  1803               	skipnc
  2614  025D  2A5F               	goto	u7421
  2615  025E  2A60               	goto	u7420
  2616  025F                     u7421:
  2617  025F  2ABF               	goto	l4358
  2618  0260                     u7420:
  2619  0260                     l4352:
  2620  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2621  0261  1303               	bcf	3,6	;RP1=0, select bank1
  2622  0262  084F               	movf	(sprintf@fval+3)^(0+128),w
  2623  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0265  00A3               	movwf	___fleq@ff1+3
  2626  0266  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0267  1303               	bcf	3,6	;RP1=0, select bank1
  2628  0268  084E               	movf	(sprintf@fval+2)^(0+128),w
  2629  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2630  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2631  026B  00A2               	movwf	___fleq@ff1+2
  2632  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2633  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2634  026E  084D               	movf	(sprintf@fval+1)^(0+128),w
  2635  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0271  00A1               	movwf	___fleq@ff1+1
  2638  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2639  0273  1303               	bcf	3,6	;RP1=0, select bank1
  2640  0274  084C               	movf	sprintf@fval^(0+128),w
  2641  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0277  00A0               	movwf	___fleq@ff1
  2644  0278  3000               	movlw	0
  2645  0279  00A7               	movwf	___fleq@ff2+3
  2646  027A  3000               	movlw	0
  2647  027B  00A6               	movwf	___fleq@ff2+2
  2648  027C  3000               	movlw	0
  2649  027D  00A5               	movwf	___fleq@ff2+1
  2650  027E  3000               	movlw	0
  2651  027F  00A4               	movwf	___fleq@ff2
  2652  0280  160A  158A  22A8  120A  118A  	fcall	___fleq
  2653  0285  1803               	btfsc	3,0
  2654  0286  2A88               	goto	u7431
  2655  0287  2A89               	goto	u7430
  2656  0288                     u7431:
  2657  0288  2B6B               	goto	l4372
  2658  0289                     u7430:
  2659  0289                     l4354:
  2660  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2661  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2662  028B  084F               	movf	(sprintf@fval+3)^(0+128),w
  2663  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2664  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2665  028E  00DB               	movwf	___fltol@f1+3
  2666  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0291  084E               	movf	(sprintf@fval+2)^(0+128),w
  2669  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0294  00DA               	movwf	___fltol@f1+2
  2672  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2674  0297  084D               	movf	(sprintf@fval+1)^(0+128),w
  2675  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2677  029A  00D9               	movwf	___fltol@f1+1
  2678  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2679  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2680  029D  084C               	movf	sprintf@fval^(0+128),w
  2681  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2682  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2683  02A0  00D8               	movwf	___fltol@f1
  2684  02A1  160A  158A  24CA  120A  118A  	fcall	___fltol
  2685  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2686  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2687  02A8  085B               	movf	?___fltol+3,w
  2688  02A9  045A               	iorwf	?___fltol+2,w
  2689  02AA  0459               	iorwf	?___fltol+1,w
  2690  02AB  0458               	iorwf	?___fltol,w
  2691  02AC  1D03               	skipz
  2692  02AD  2AAF               	goto	u7441
  2693  02AE  2AB0               	goto	u7440
  2694  02AF                     u7441:
  2695  02AF  2B6B               	goto	l4372
  2696  02B0                     u7440:
  2697  02B0                     l4356:
  2698  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2699  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2700  02B2  0846               	movf	(sprintf@eexp+1)^(0+128),w
  2701  02B3  3A80               	xorlw	128
  2702  02B4  00FF               	movwf	btemp+1
  2703  02B5  3080               	movlw	128
  2704  02B6  027F               	subwf	btemp+1,w
  2705  02B7  1D03               	skipz
  2706  02B8  2ABB               	goto	u7455
  2707  02B9  3002               	movlw	2
  2708  02BA  0245               	subwf	sprintf@eexp^(0+128),w
  2709  02BB                     u7455:
  2710  02BB  1C03               	skipc
  2711  02BC  2ABE               	goto	u7451
  2712  02BD  2ABF               	goto	u7450
  2713  02BE                     u7451:
  2714  02BE  2B6B               	goto	l4372
  2715  02BF                     u7450:
  2716  02BF                     l4358:
  2717                           
  2718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2719  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2720  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2721  02C1  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2722  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2723  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2724  02C4  00A3               	movwf	___flge@ff1+3
  2725  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2726  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2727  02C7  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2728  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2729  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2730  02CA  00A2               	movwf	___flge@ff1+2
  2731  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2732  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2733  02CD  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2734  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2735  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2736  02D0  00A1               	movwf	___flge@ff1+1
  2737  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2738  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2739  02D3  0847               	movf	sprintf@tmpval^(0+128),w
  2740  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2741  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2742  02D6  00A0               	movwf	___flge@ff1
  2743  02D7  3040               	movlw	64
  2744  02D8  00A7               	movwf	___flge@ff2+3
  2745  02D9  3089               	movlw	137
  2746  02DA  00A6               	movwf	___flge@ff2+2
  2747  02DB  3070               	movlw	112
  2748  02DC  00A5               	movwf	___flge@ff2+1
  2749  02DD  305F               	movlw	95
  2750  02DE  00A4               	movwf	___flge@ff2
  2751  02DF  160A  158A  25E3  120A  118A  	fcall	___flge
  2752  02E4  1803               	btfsc	3,0
  2753  02E5  2AE7               	goto	u7461
  2754  02E6  2AE8               	goto	u7460
  2755  02E7                     u7461:
  2756  02E7  2AF1               	goto	l4362
  2757  02E8                     u7460:
  2758  02E8                     l4360:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2761  02E8  30F7               	movlw	247
  2762  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  2763  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  2764  02EB  07C5               	addwf	sprintf@eexp^(0+128),f
  2765  02EC  1803               	skipnc
  2766  02ED  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  2767  02EE  30FF               	movlw	255
  2768  02EF  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2771  02F0  2AF9               	goto	l4364
  2772  02F1                     l4362:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2775  02F1  30F8               	movlw	248
  2776  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2777  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2778  02F4  07C5               	addwf	sprintf@eexp^(0+128),f
  2779  02F5  1803               	skipnc
  2780  02F6  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  2781  02F7  30FF               	movlw	255
  2782  02F8  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  2783  02F9                     l4364:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2786  02F9  0845               	movf	sprintf@eexp^(0+128),w
  2787  02FA  120A  158A  249D  120A  118A  	fcall	_scale
  2788  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0301  0848               	movf	?_scale+3,w
  2791  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2792  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2793  0304  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2794  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0307  0847               	movf	?_scale+2,w
  2797  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2798  0309  1303               	bcf	3,6	;RP1=0, select bank1
  2799  030A  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2800  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2801  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2802  030D  0846               	movf	?_scale+1,w
  2803  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2804  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0310  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2806  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0313  0845               	movf	?_scale,w
  2809  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2810  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2811  0316  00C7               	movwf	sprintf@tmpval^(0+128)
  2812  0317                     l4366:
  2813  0317  084F               	movf	(sprintf@fval+3)^(0+128),w
  2814  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2816  031A  00A3               	movwf	__div_to_l_@f1+3
  2817  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2818  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2819  031D  084E               	movf	(sprintf@fval+2)^(0+128),w
  2820  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2821  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0320  00A2               	movwf	__div_to_l_@f1+2
  2823  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2824  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2825  0323  084D               	movf	(sprintf@fval+1)^(0+128),w
  2826  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0326  00A1               	movwf	__div_to_l_@f1+1
  2829  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2831  0329  084C               	movf	sprintf@fval^(0+128),w
  2832  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2833  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2834  032C  00A0               	movwf	__div_to_l_@f1
  2835  032D  1683               	bsf	3,5	;RP0=1, select bank1
  2836  032E  1303               	bcf	3,6	;RP1=0, select bank1
  2837  032F  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2838  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0332  00A7               	movwf	__div_to_l_@f2+3
  2841  0333  1683               	bsf	3,5	;RP0=1, select bank1
  2842  0334  1303               	bcf	3,6	;RP1=0, select bank1
  2843  0335  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2844  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0338  00A6               	movwf	__div_to_l_@f2+2
  2847  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2848  033A  1303               	bcf	3,6	;RP1=0, select bank1
  2849  033B  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2850  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2851  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2852  033E  00A5               	movwf	__div_to_l_@f2+1
  2853  033F  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0340  1303               	bcf	3,6	;RP1=0, select bank1
  2855  0341  0847               	movf	sprintf@tmpval^(0+128),w
  2856  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0344  00A4               	movwf	__div_to_l_@f2
  2859  0345  160A  118A  20E7  120A  118A  	fcall	__div_to_l_
  2860  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2861  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2862  034C  0823               	movf	?__div_to_l_+3,w
  2863  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2864  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2865  034F  00C4               	movwf	(sprintf@val+3)^(0+128)
  2866  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0352  0822               	movf	?__div_to_l_+2,w
  2869  0353  1683               	bsf	3,5	;RP0=1, select bank1
  2870  0354  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0355  00C3               	movwf	(sprintf@val+2)^(0+128)
  2872  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0358  0821               	movf	?__div_to_l_+1,w
  2875  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2876  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2877  035B  00C2               	movwf	(sprintf@val+1)^(0+128)
  2878  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2879  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2880  035E  0820               	movf	?__div_to_l_,w
  2881  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2882  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2883  0361  00C1               	movwf	sprintf@val^(0+128)
  2884  0362                     l4370:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2887  0362  3000               	movlw	0
  2888  0363  00CF               	movwf	(sprintf@fval+3)^(0+128)
  2889  0364  3000               	movlw	0
  2890  0365  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2891  0366  3000               	movlw	0
  2892  0367  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2893  0368  3000               	movlw	0
  2894  0369  00CC               	movwf	sprintf@fval^(0+128)
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2897  036A  2BD1               	goto	l4378
  2898  036B                     l4372:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2901  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2902  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2903  036D  084F               	movf	(sprintf@fval+3)^(0+128),w
  2904  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2905  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0370  00DB               	movwf	___fltol@f1+3
  2907  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2908  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2909  0373  084E               	movf	(sprintf@fval+2)^(0+128),w
  2910  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0376  00DA               	movwf	___fltol@f1+2
  2913  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2914  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2915  0379  084D               	movf	(sprintf@fval+1)^(0+128),w
  2916  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2917  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2918  037C  00D9               	movwf	___fltol@f1+1
  2919  037D  1683               	bsf	3,5	;RP0=1, select bank1
  2920  037E  1303               	bcf	3,6	;RP1=0, select bank1
  2921  037F  084C               	movf	sprintf@fval^(0+128),w
  2922  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0382  00D8               	movwf	___fltol@f1
  2925  0383  160A  158A  24CA  120A  118A  	fcall	___fltol
  2926  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2928  038A  085B               	movf	?___fltol+3,w
  2929  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2930  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2931  038D  00C4               	movwf	(sprintf@val+3)^(0+128)
  2932  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2933  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0390  085A               	movf	?___fltol+2,w
  2935  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0393  00C3               	movwf	(sprintf@val+2)^(0+128)
  2938  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0396  0859               	movf	?___fltol+1,w
  2941  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2942  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0399  00C2               	movwf	(sprintf@val+1)^(0+128)
  2944  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2945  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2946  039C  0858               	movf	?___fltol,w
  2947  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2948  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2949  039F  00C1               	movwf	sprintf@val^(0+128)
  2950  03A0                     l4374:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2953  03A0  0844               	movf	(sprintf@val+3)^(0+128),w
  2954  03A1  00F6               	movwf	___xxtofl@val+3
  2955  03A2  0843               	movf	(sprintf@val+2)^(0+128),w
  2956  03A3  00F5               	movwf	___xxtofl@val+2
  2957  03A4  0842               	movf	(sprintf@val+1)^(0+128),w
  2958  03A5  00F4               	movwf	___xxtofl@val+1
  2959  03A6  0841               	movf	sprintf@val^(0+128),w
  2960  03A7  00F3               	movwf	___xxtofl@val
  2961  03A8  3000               	movlw	0
  2962  03A9  160A  158A  2687  120A  118A  	fcall	___xxtofl
  2963  03AE  0876               	movf	?___xxtofl+3,w
  2964  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2965  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2966  03B1  00A3               	movwf	(___flsub@a+3)^(0+128)
  2967  03B2  0875               	movf	?___xxtofl+2,w
  2968  03B3  00A2               	movwf	(___flsub@a+2)^(0+128)
  2969  03B4  0874               	movf	?___xxtofl+1,w
  2970  03B5  00A1               	movwf	(___flsub@a+1)^(0+128)
  2971  03B6  0873               	movf	?___xxtofl,w
  2972  03B7  00A0               	movwf	___flsub@a^(0+128)
  2973  03B8  084F               	movf	(sprintf@fval+3)^(0+128),w
  2974  03B9  00A7               	movwf	(___flsub@b+3)^(0+128)
  2975  03BA  084E               	movf	(sprintf@fval+2)^(0+128),w
  2976  03BB  00A6               	movwf	(___flsub@b+2)^(0+128)
  2977  03BC  084D               	movf	(sprintf@fval+1)^(0+128),w
  2978  03BD  00A5               	movwf	(___flsub@b+1)^(0+128)
  2979  03BE  084C               	movf	sprintf@fval^(0+128),w
  2980  03BF  00A4               	movwf	___flsub@b^(0+128)
  2981  03C0  160A  158A  22F8  120A  118A  	fcall	___flsub
  2982  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2983  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2984  03C7  0823               	movf	(?___flsub+3)^(0+128),w
  2985  03C8  00CF               	movwf	(sprintf@fval+3)^(0+128)
  2986  03C9  0822               	movf	(?___flsub+2)^(0+128),w
  2987  03CA  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2988  03CB  0821               	movf	(?___flsub+1)^(0+128),w
  2989  03CC  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2990  03CD  0820               	movf	?___flsub^(0+128),w
  2991  03CE  00CC               	movwf	sprintf@fval^(0+128)
  2992  03CF                     l4376:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2995  03CF  01C5               	clrf	sprintf@eexp^(0+128)
  2996  03D0  01C6               	clrf	(sprintf@eexp+1)^(0+128)
  2997  03D1                     l4378:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3000  03D1  01D0               	clrf	sprintf@c^(0+128)
  3001  03D2  0AD0               	incf	sprintf@c^(0+128),f
  3002  03D3                     l4384:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3005  03D3  0850               	movf	sprintf@c^(0+128),w
  3006  03D4  00B3               	movwf	??_sprintf^(0+128)
  3007  03D5  3001               	movlw	1
  3008  03D6                     u7475:
  3009  03D6  1003               	clrc
  3010  03D7  0DB3               	rlf	??_sprintf^(0+128),f
  3011  03D8  3EFF               	addlw	-1
  3012  03D9  1D03               	skipz
  3013  03DA  2BD6               	goto	u7475
  3014  03DB  1003               	clrc
  3015  03DC  0D33               	rlf	??_sprintf^(0+128),w
  3016  03DD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3017  03DE  0084               	movwf	4
  3018  03DF  160A  118A  200A  120A  118A  	fcall	stringdir
  3019  03E4  00B4               	movwf	(??_sprintf+1)^(0+128)
  3020  03E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3021  03EA  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
  3022  03EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3023  03F0  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
  3024  03F1  160A  118A  200A  120A  118A  	fcall	stringdir
  3025  03F6  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
  3026  03F7  0837               	movf	(??_sprintf+4)^(0+128),w
  3027  03F8  0244               	subwf	(sprintf@val+3)^(0+128),w
  3028  03F9  1D03               	skipz
  3029  03FA  2C05               	goto	u7485
  3030  03FB  0836               	movf	(??_sprintf+3)^(0+128),w
  3031  03FC  0243               	subwf	(sprintf@val+2)^(0+128),w
  3032  03FD  1D03               	skipz
  3033  03FE  2C05               	goto	u7485
  3034  03FF  0835               	movf	(??_sprintf+2)^(0+128),w
  3035  0400  0242               	subwf	(sprintf@val+1)^(0+128),w
  3036  0401  1D03               	skipz
  3037  0402  2C05               	goto	u7485
  3038  0403  0834               	movf	(??_sprintf+1)^(0+128),w
  3039  0404  0241               	subwf	sprintf@val^(0+128),w
  3040  0405                     u7485:
  3041  0405  1803               	skipnc
  3042  0406  2C08               	goto	u7481
  3043  0407  2C09               	goto	u7480
  3044  0408                     u7481:
  3045  0408  2C0A               	goto	l4388
  3046  0409                     u7480:
  3047  0409  2C14               	goto	l4390
  3048  040A                     l4388:
  3049  040A  3001               	movlw	1
  3050  040B  00B3               	movwf	??_sprintf^(0+128)
  3051  040C  0833               	movf	??_sprintf^(0+128),w
  3052  040D  07D0               	addwf	sprintf@c^(0+128),f
  3053  040E  300A               	movlw	10
  3054  040F  0650               	xorwf	sprintf@c^(0+128),w
  3055  0410  1D03               	btfss	3,2
  3056  0411  2C13               	goto	u7491
  3057  0412  2C14               	goto	u7490
  3058  0413                     u7491:
  3059  0413  2BD3               	goto	l4384
  3060  0414                     u7490:
  3061  0414                     l4390:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3064  0414  3003               	movlw	3
  3065  0415  053D               	andwf	sprintf@flag^(0+128),w
  3066  0416  00B3               	movwf	??_sprintf^(0+128)
  3067  0417  3000               	movlw	0
  3068  0418  053E               	andwf	(sprintf@flag+1)^(0+128),w
  3069  0419  00B4               	movwf	(??_sprintf+1)^(0+128)
  3070  041A  0833               	movf	??_sprintf^(0+128),w
  3071  041B  0434               	iorwf	(??_sprintf^(0+128)+1),w
  3072  041C  1903               	btfsc	3,2
  3073  041D  2C1F               	goto	u7501
  3074  041E  2C20               	goto	u7500
  3075  041F                     u7501:
  3076  041F  2CD2               	goto	l384
  3077  0420                     u7500:
  3078  0420                     l4392:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3081  0420  302D               	movlw	45
  3082  0421  00B3               	movwf	??_sprintf^(0+128)
  3083  0422  084B               	movf	sprintf@sp^(0+128),w
  3084  0423  0084               	movwf	4
  3085  0424  0833               	movf	??_sprintf^(0+128),w
  3086  0425  1383               	bcf	3,7	;select IRP bank0
  3087  0426  0080               	movwf	0
  3088  0427                     l4394:
  3089  0427  3001               	movlw	1
  3090  0428  00B3               	movwf	??_sprintf^(0+128)
  3091  0429  0833               	movf	??_sprintf^(0+128),w
  3092  042A  07CB               	addwf	sprintf@sp^(0+128),f
  3093  042B  2CD2               	goto	l384
  3094  042C                     l4396:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3097  042C  0850               	movf	sprintf@c^(0+128),w
  3098  042D  00B3               	movwf	??_sprintf^(0+128)
  3099  042E  3001               	movlw	1
  3100  042F                     u7515:
  3101  042F  1003               	clrc
  3102  0430  0DB3               	rlf	??_sprintf^(0+128),f
  3103  0431  3EFF               	addlw	-1
  3104  0432  1D03               	skipz
  3105  0433  2C2F               	goto	u7515
  3106  0434  1003               	clrc
  3107  0435  0D33               	rlf	??_sprintf^(0+128),w
  3108  0436  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3109  0437  0084               	movwf	4
  3110  0438  160A  118A  200A  120A  118A  	fcall	stringdir
  3111  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3112  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3113  043F  00A0               	movwf	___lldiv@divisor
  3114  0440  160A  118A  200A  120A  118A  	fcall	stringdir
  3115  0445  00A1               	movwf	___lldiv@divisor+1
  3116  0446  160A  118A  200A  120A  118A  	fcall	stringdir
  3117  044B  00A2               	movwf	___lldiv@divisor+2
  3118  044C  160A  118A  200A  120A  118A  	fcall	stringdir
  3119  0451  00A3               	movwf	___lldiv@divisor+3
  3120  0452  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0453  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0454  0844               	movf	(sprintf@val+3)^(0+128),w
  3123  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0457  00A7               	movwf	___lldiv@dividend+3
  3126  0458  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0459  1303               	bcf	3,6	;RP1=0, select bank1
  3128  045A  0843               	movf	(sprintf@val+2)^(0+128),w
  3129  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3130  045C  1303               	bcf	3,6	;RP1=0, select bank0
  3131  045D  00A6               	movwf	___lldiv@dividend+2
  3132  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3133  045F  1303               	bcf	3,6	;RP1=0, select bank1
  3134  0460  0842               	movf	(sprintf@val+1)^(0+128),w
  3135  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0463  00A5               	movwf	___lldiv@dividend+1
  3138  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3139  0465  1303               	bcf	3,6	;RP1=0, select bank1
  3140  0466  0841               	movf	sprintf@val^(0+128),w
  3141  0467  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0468  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0469  00A4               	movwf	___lldiv@dividend
  3144  046A  160A  158A  23F9  120A  118A  	fcall	___lldiv
  3145  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0471  0823               	movf	?___lldiv+3,w
  3148  0472  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0473  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0474  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  3151  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0477  0822               	movf	?___lldiv+2,w
  3154  0478  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0479  1303               	bcf	3,6	;RP1=0, select bank1
  3156  047A  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  3157  047B  1283               	bcf	3,5	;RP0=0, select bank0
  3158  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3159  047D  0821               	movf	?___lldiv+1,w
  3160  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3161  047F  1303               	bcf	3,6	;RP1=0, select bank1
  3162  0480  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  3163  0481  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0482  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0483  0820               	movf	?___lldiv,w
  3166  0484  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0485  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0486  00C7               	movwf	sprintf@tmpval^(0+128)
  3169  0487                     l4398:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3172  0487  3000               	movlw	0
  3173  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0489  1303               	bcf	3,6	;RP1=0, select bank0
  3175  048A  00B0               	movwf	___llmod@divisor+3
  3176  048B  3000               	movlw	0
  3177  048C  00AF               	movwf	___llmod@divisor+2
  3178  048D  3000               	movlw	0
  3179  048E  00AE               	movwf	___llmod@divisor+1
  3180  048F  300A               	movlw	10
  3181  0490  00AD               	movwf	___llmod@divisor
  3182  0491  1683               	bsf	3,5	;RP0=1, select bank1
  3183  0492  1303               	bcf	3,6	;RP1=0, select bank1
  3184  0493  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  3185  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0496  00B4               	movwf	___llmod@dividend+3
  3188  0497  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0498  1303               	bcf	3,6	;RP1=0, select bank1
  3190  0499  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  3191  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3192  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3193  049C  00B3               	movwf	___llmod@dividend+2
  3194  049D  1683               	bsf	3,5	;RP0=1, select bank1
  3195  049E  1303               	bcf	3,6	;RP1=0, select bank1
  3196  049F  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  3197  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3198  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3199  04A2  00B2               	movwf	___llmod@dividend+1
  3200  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  3201  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  3202  04A5  0847               	movf	sprintf@tmpval^(0+128),w
  3203  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3204  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3205  04A8  00B1               	movwf	___llmod@dividend
  3206  04A9  160A  158A  2348  120A  118A  	fcall	___llmod
  3207  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3208  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3209  04B0  0830               	movf	?___llmod+3,w
  3210  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  3211  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  3212  04B3  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  3213  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  3214  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  3215  04B6  082F               	movf	?___llmod+2,w
  3216  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  3217  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  3218  04B9  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  3219  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3220  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3221  04BC  082E               	movf	?___llmod+1,w
  3222  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  3223  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  3224  04BF  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  3225  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3226  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3227  04C2  082D               	movf	?___llmod,w
  3228  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3229  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  3230  04C5  00C7               	movwf	sprintf@tmpval^(0+128)
  3231  04C6                     l4400:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3234  04C6  0847               	movf	sprintf@tmpval^(0+128),w
  3235  04C7  3E30               	addlw	48
  3236  04C8  00B3               	movwf	??_sprintf^(0+128)
  3237  04C9  084B               	movf	sprintf@sp^(0+128),w
  3238  04CA  0084               	movwf	4
  3239  04CB  0833               	movf	??_sprintf^(0+128),w
  3240  04CC  1383               	bcf	3,7	;select IRP bank0
  3241  04CD  0080               	movwf	0
  3242  04CE  3001               	movlw	1
  3243  04CF  00B3               	movwf	??_sprintf^(0+128)
  3244  04D0  0833               	movf	??_sprintf^(0+128),w
  3245  04D1  07CB               	addwf	sprintf@sp^(0+128),f
  3246  04D2                     l384:	
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3248                           
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3251  04D2  3001               	movlw	1
  3252  04D3  02D0               	subwf	sprintf@c^(0+128),f
  3253  04D4  0A50               	incf	sprintf@c^(0+128),w
  3254  04D5  1D03               	btfss	3,2
  3255  04D6  2CD8               	goto	u7521
  3256  04D7  2CD9               	goto	u7520
  3257  04D8                     u7521:
  3258  04D8  2C2C               	goto	l4396
  3259  04D9                     u7520:
  3260  04D9  2CED               	goto	l4408
  3261  04DA                     l4402:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3264  04DA  3030               	movlw	48
  3265  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3266  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3267  04DD  00B3               	movwf	??_sprintf^(0+128)
  3268  04DE  084B               	movf	sprintf@sp^(0+128),w
  3269  04DF  0084               	movwf	4
  3270  04E0  0833               	movf	??_sprintf^(0+128),w
  3271  04E1  1383               	bcf	3,7	;select IRP bank0
  3272  04E2  0080               	movwf	0
  3273  04E3                     l4404:
  3274  04E3  3001               	movlw	1
  3275  04E4  00B3               	movwf	??_sprintf^(0+128)
  3276  04E5  0833               	movf	??_sprintf^(0+128),w
  3277  04E6  07CB               	addwf	sprintf@sp^(0+128),f
  3278  04E7                     l4406:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3281  04E7  30FF               	movlw	255
  3282  04E8  07C5               	addwf	sprintf@eexp^(0+128),f
  3283  04E9  1803               	skipnc
  3284  04EA  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  3285  04EB  30FF               	movlw	255
  3286  04EC  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  3287  04ED                     l4408:
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3290  04ED  0846               	movf	(sprintf@eexp+1)^(0+128),w
  3291  04EE  3A80               	xorlw	128
  3292  04EF  00FF               	movwf	btemp+1
  3293  04F0  3080               	movlw	128
  3294  04F1  027F               	subwf	btemp+1,w
  3295  04F2  1D03               	skipz
  3296  04F3  2CF6               	goto	u7535
  3297  04F4  3001               	movlw	1
  3298  04F5  0245               	subwf	sprintf@eexp^(0+128),w
  3299  04F6                     u7535:
  3300  04F6  1803               	skipnc
  3301  04F7  2CF9               	goto	u7531
  3302  04F8  2CFA               	goto	u7530
  3303  04F9                     u7531:
  3304  04F9  2CDA               	goto	l4402
  3305  04FA                     u7530:
  3306  04FA                     l4410:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3309  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  3310  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  3311  04FC  0840               	movf	(sprintf@prec+1)^(0+128),w
  3312  04FD  3A80               	xorlw	128
  3313  04FE  00FF               	movwf	btemp+1
  3314  04FF  3080               	movlw	128
  3315  0500  027F               	subwf	btemp+1,w
  3316  0501  1D03               	skipz
  3317  0502  2D05               	goto	u7545
  3318  0503  3009               	movlw	9
  3319  0504  023F               	subwf	sprintf@prec^(0+128),w
  3320  0505                     u7545:
  3321  0505  1C03               	skipc
  3322  0506  2D08               	goto	u7541
  3323  0507  2D09               	goto	u7540
  3324  0508                     u7541:
  3325  0508  2D10               	goto	l4414
  3326  0509                     u7540:
  3327  0509                     l4412:
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3330  0509  3008               	movlw	8
  3331  050A  1683               	bsf	3,5	;RP0=1, select bank1
  3332  050B  1303               	bcf	3,6	;RP1=0, select bank1
  3333  050C  00B3               	movwf	??_sprintf^(0+128)
  3334  050D  0833               	movf	??_sprintf^(0+128),w
  3335  050E  00D0               	movwf	sprintf@c^(0+128)
  3336  050F  2D16               	goto	l391
  3337  0510                     l4414:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3340  0510  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0511  1303               	bcf	3,6	;RP1=0, select bank1
  3342  0512  083F               	movf	sprintf@prec^(0+128),w
  3343  0513  00B3               	movwf	??_sprintf^(0+128)
  3344  0514  0833               	movf	??_sprintf^(0+128),w
  3345  0515  00D0               	movwf	sprintf@c^(0+128)
  3346  0516                     l391:
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3349  0516  0850               	movf	sprintf@c^(0+128),w
  3350  0517  00B3               	movwf	??_sprintf^(0+128)
  3351  0518  01B4               	clrf	(??_sprintf^(0+128)+1)
  3352  0519  0833               	movf	??_sprintf^(0+128),w
  3353  051A  02BF               	subwf	sprintf@prec^(0+128),f
  3354  051B  0834               	movf	(??_sprintf+1)^(0+128),w
  3355  051C  1C03               	skipc
  3356  051D  03C0               	decf	(sprintf@prec+1)^(0+128),f
  3357  051E  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  3358  051F                     l4416:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3361  051F  0850               	movf	sprintf@c^(0+128),w
  3362  0520  1903               	btfsc	3,2
  3363  0521  2D23               	goto	u7551
  3364  0522  2D24               	goto	u7550
  3365  0523                     u7551:
  3366  0523  2D2F               	goto	l4422
  3367  0524                     u7550:
  3368  0524                     l4418:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3371  0524  302E               	movlw	46
  3372  0525  00B3               	movwf	??_sprintf^(0+128)
  3373  0526  084B               	movf	sprintf@sp^(0+128),w
  3374  0527  0084               	movwf	4
  3375  0528  0833               	movf	??_sprintf^(0+128),w
  3376  0529  1383               	bcf	3,7	;select IRP bank0
  3377  052A  0080               	movwf	0
  3378  052B                     l4420:
  3379  052B  3001               	movlw	1
  3380  052C  00B3               	movwf	??_sprintf^(0+128)
  3381  052D  0833               	movf	??_sprintf^(0+128),w
  3382  052E  07CB               	addwf	sprintf@sp^(0+128),f
  3383  052F                     l4422:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3386  052F  0850               	movf	sprintf@c^(0+128),w
  3387  0530  120A  158A  249D  120A  118A  	fcall	_scale
  3388  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0537  0848               	movf	?_scale+3,w
  3391  0538  1683               	bsf	3,5	;RP0=1, select bank1
  3392  0539  1303               	bcf	3,6	;RP1=0, select bank1
  3393  053A  00BB               	movwf	(_sprintf$1110+3)^(0+128)
  3394  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3395  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3396  053D  0847               	movf	?_scale+2,w
  3397  053E  1683               	bsf	3,5	;RP0=1, select bank1
  3398  053F  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0540  00BA               	movwf	(_sprintf$1110+2)^(0+128)
  3400  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0543  0846               	movf	?_scale+1,w
  3403  0544  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0545  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0546  00B9               	movwf	(_sprintf$1110+1)^(0+128)
  3406  0547  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0548  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0549  0845               	movf	?_scale,w
  3409  054A  1683               	bsf	3,5	;RP0=1, select bank1
  3410  054B  1303               	bcf	3,6	;RP1=0, select bank1
  3411  054C  00B8               	movwf	_sprintf$1110^(0+128)
  3412  054D                     l4424:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3415  054D  083B               	movf	(_sprintf$1110+3)^(0+128),w
  3416  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3417  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0550  00B2               	movwf	___flmul@a+3
  3419  0551  1683               	bsf	3,5	;RP0=1, select bank1
  3420  0552  1303               	bcf	3,6	;RP1=0, select bank1
  3421  0553  083A               	movf	(_sprintf$1110+2)^(0+128),w
  3422  0554  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0555  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0556  00B1               	movwf	___flmul@a+2
  3425  0557  1683               	bsf	3,5	;RP0=1, select bank1
  3426  0558  1303               	bcf	3,6	;RP1=0, select bank1
  3427  0559  0839               	movf	(_sprintf$1110+1)^(0+128),w
  3428  055A  1283               	bcf	3,5	;RP0=0, select bank0
  3429  055B  1303               	bcf	3,6	;RP1=0, select bank0
  3430  055C  00B0               	movwf	___flmul@a+1
  3431  055D  1683               	bsf	3,5	;RP0=1, select bank1
  3432  055E  1303               	bcf	3,6	;RP1=0, select bank1
  3433  055F  0838               	movf	_sprintf$1110^(0+128),w
  3434  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0562  00AF               	movwf	___flmul@a
  3437  0563  1683               	bsf	3,5	;RP0=1, select bank1
  3438  0564  1303               	bcf	3,6	;RP1=0, select bank1
  3439  0565  084F               	movf	(sprintf@fval+3)^(0+128),w
  3440  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0568  00AE               	movwf	___flmul@b+3
  3443  0569  1683               	bsf	3,5	;RP0=1, select bank1
  3444  056A  1303               	bcf	3,6	;RP1=0, select bank1
  3445  056B  084E               	movf	(sprintf@fval+2)^(0+128),w
  3446  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3447  056D  1303               	bcf	3,6	;RP1=0, select bank0
  3448  056E  00AD               	movwf	___flmul@b+2
  3449  056F  1683               	bsf	3,5	;RP0=1, select bank1
  3450  0570  1303               	bcf	3,6	;RP1=0, select bank1
  3451  0571  084D               	movf	(sprintf@fval+1)^(0+128),w
  3452  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0574  00AC               	movwf	___flmul@b+1
  3455  0575  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0576  1303               	bcf	3,6	;RP1=0, select bank1
  3457  0577  084C               	movf	sprintf@fval^(0+128),w
  3458  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0579  1303               	bcf	3,6	;RP1=0, select bank0
  3460  057A  00AB               	movwf	___flmul@b
  3461  057B  120A  158A  213C  120A  118A  	fcall	___flmul
  3462  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0582  082E               	movf	?___flmul+3,w
  3465  0583  00DB               	movwf	___fltol@f1+3
  3466  0584  082D               	movf	?___flmul+2,w
  3467  0585  00DA               	movwf	___fltol@f1+2
  3468  0586  082C               	movf	?___flmul+1,w
  3469  0587  00D9               	movwf	___fltol@f1+1
  3470  0588  082B               	movf	?___flmul,w
  3471  0589  00D8               	movwf	___fltol@f1
  3472  058A  160A  158A  24CA  120A  118A  	fcall	___fltol
  3473  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0591  085B               	movf	?___fltol+3,w
  3476  0592  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0593  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0594  00C4               	movwf	(sprintf@val+3)^(0+128)
  3479  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0596  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0597  085A               	movf	?___fltol+2,w
  3482  0598  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0599  1303               	bcf	3,6	;RP1=0, select bank1
  3484  059A  00C3               	movwf	(sprintf@val+2)^(0+128)
  3485  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3486  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3487  059D  0859               	movf	?___fltol+1,w
  3488  059E  1683               	bsf	3,5	;RP0=1, select bank1
  3489  059F  1303               	bcf	3,6	;RP1=0, select bank1
  3490  05A0  00C2               	movwf	(sprintf@val+1)^(0+128)
  3491  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3492  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3493  05A3  0858               	movf	?___fltol,w
  3494  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  3495  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  3496  05A6  00C1               	movwf	sprintf@val^(0+128)
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3499  05A7  2EA9               	goto	l4434
  3500  05A8                     l4426:
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3503  05A8  0850               	movf	sprintf@c^(0+128),w
  3504  05A9  00B3               	movwf	??_sprintf^(0+128)
  3505  05AA  3001               	movlw	1
  3506  05AB                     u7565:
  3507  05AB  1003               	clrc
  3508  05AC  0DB3               	rlf	??_sprintf^(0+128),f
  3509  05AD  3EFF               	addlw	-1
  3510  05AE  1D03               	skipz
  3511  05AF  2DAB               	goto	u7565
  3512  05B0  1003               	clrc
  3513  05B1  0D33               	rlf	??_sprintf^(0+128),w
  3514  05B2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3515  05B3  0084               	movwf	4
  3516  05B4  160A  118A  200A  120A  118A  	fcall	stringdir
  3517  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3518  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3519  05BB  00A0               	movwf	___lldiv@divisor
  3520  05BC  160A  118A  200A  120A  118A  	fcall	stringdir
  3521  05C1  00A1               	movwf	___lldiv@divisor+1
  3522  05C2  160A  118A  200A  120A  118A  	fcall	stringdir
  3523  05C7  00A2               	movwf	___lldiv@divisor+2
  3524  05C8  160A  118A  200A  120A  118A  	fcall	stringdir
  3525  05CD  00A3               	movwf	___lldiv@divisor+3
  3526  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3527  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3528  05D0  0844               	movf	(sprintf@val+3)^(0+128),w
  3529  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3530  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3531  05D3  00A7               	movwf	___lldiv@dividend+3
  3532  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3533  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3534  05D6  0843               	movf	(sprintf@val+2)^(0+128),w
  3535  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3536  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3537  05D9  00A6               	movwf	___lldiv@dividend+2
  3538  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3539  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3540  05DC  0842               	movf	(sprintf@val+1)^(0+128),w
  3541  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3542  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3543  05DF  00A5               	movwf	___lldiv@dividend+1
  3544  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3545  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3546  05E2  0841               	movf	sprintf@val^(0+128),w
  3547  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3548  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3549  05E5  00A4               	movwf	___lldiv@dividend
  3550  05E6  160A  158A  23F9  120A  118A  	fcall	___lldiv
  3551  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3552  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3553  05ED  0823               	movf	?___lldiv+3,w
  3554  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3555  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3556  05F0  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  3557  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3558  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3559  05F3  0822               	movf	?___lldiv+2,w
  3560  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3561  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3562  05F6  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  3563  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3564  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3565  05F9  0821               	movf	?___lldiv+1,w
  3566  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3567  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3568  05FC  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  3569  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3570  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3571  05FF  0820               	movf	?___lldiv,w
  3572  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3573  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3574  0602  00C7               	movwf	sprintf@tmpval^(0+128)
  3575  0603                     l4428:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3578  0603  3000               	movlw	0
  3579  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0606  00B0               	movwf	___llmod@divisor+3
  3582  0607  3000               	movlw	0
  3583  0608  00AF               	movwf	___llmod@divisor+2
  3584  0609  3000               	movlw	0
  3585  060A  00AE               	movwf	___llmod@divisor+1
  3586  060B  300A               	movlw	10
  3587  060C  00AD               	movwf	___llmod@divisor
  3588  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3589  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3590  060F  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  3591  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0612  00B4               	movwf	___llmod@dividend+3
  3594  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3596  0615  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  3597  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0618  00B3               	movwf	___llmod@dividend+2
  3600  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3601  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3602  061B  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  3603  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3604  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3605  061E  00B2               	movwf	___llmod@dividend+1
  3606  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3608  0621  0847               	movf	sprintf@tmpval^(0+128),w
  3609  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0624  00B1               	movwf	___llmod@dividend
  3612  0625  160A  158A  2348  120A  118A  	fcall	___llmod
  3613  062A  1283               	bcf	3,5	;RP0=0, select bank0
  3614  062B  1303               	bcf	3,6	;RP1=0, select bank0
  3615  062C  0830               	movf	?___llmod+3,w
  3616  062D  1683               	bsf	3,5	;RP0=1, select bank1
  3617  062E  1303               	bcf	3,6	;RP1=0, select bank1
  3618  062F  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  3619  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0632  082F               	movf	?___llmod+2,w
  3622  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3623  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3624  0635  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  3625  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0638  082E               	movf	?___llmod+1,w
  3628  0639  1683               	bsf	3,5	;RP0=1, select bank1
  3629  063A  1303               	bcf	3,6	;RP1=0, select bank1
  3630  063B  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  3631  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3632  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3633  063E  082D               	movf	?___llmod,w
  3634  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0641  00C7               	movwf	sprintf@tmpval^(0+128)
  3637  0642                     l4430:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3640  0642  0847               	movf	sprintf@tmpval^(0+128),w
  3641  0643  3E30               	addlw	48
  3642  0644  00B3               	movwf	??_sprintf^(0+128)
  3643  0645  084B               	movf	sprintf@sp^(0+128),w
  3644  0646  0084               	movwf	4
  3645  0647  0833               	movf	??_sprintf^(0+128),w
  3646  0648  1383               	bcf	3,7	;select IRP bank0
  3647  0649  0080               	movwf	0
  3648  064A  3001               	movlw	1
  3649  064B  00B3               	movwf	??_sprintf^(0+128)
  3650  064C  0833               	movf	??_sprintf^(0+128),w
  3651  064D  07CB               	addwf	sprintf@sp^(0+128),f
  3652  064E                     l4432:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3655  064E  0850               	movf	sprintf@c^(0+128),w
  3656  064F  00B3               	movwf	??_sprintf^(0+128)
  3657  0650  3001               	movlw	1
  3658  0651                     u7575:
  3659  0651  1003               	clrc
  3660  0652  0DB3               	rlf	??_sprintf^(0+128),f
  3661  0653  3EFF               	addlw	-1
  3662  0654  1D03               	skipz
  3663  0655  2E51               	goto	u7575
  3664  0656  1003               	clrc
  3665  0657  0D33               	rlf	??_sprintf^(0+128),w
  3666  0658  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3667  0659  0084               	movwf	4
  3668  065A  160A  118A  200A  120A  118A  	fcall	stringdir
  3669  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3671  0661  00AD               	movwf	___llmod@divisor
  3672  0662  160A  118A  200A  120A  118A  	fcall	stringdir
  3673  0667  00AE               	movwf	___llmod@divisor+1
  3674  0668  160A  118A  200A  120A  118A  	fcall	stringdir
  3675  066D  00AF               	movwf	___llmod@divisor+2
  3676  066E  160A  118A  200A  120A  118A  	fcall	stringdir
  3677  0673  00B0               	movwf	___llmod@divisor+3
  3678  0674  1683               	bsf	3,5	;RP0=1, select bank1
  3679  0675  1303               	bcf	3,6	;RP1=0, select bank1
  3680  0676  0844               	movf	(sprintf@val+3)^(0+128),w
  3681  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0679  00B4               	movwf	___llmod@dividend+3
  3684  067A  1683               	bsf	3,5	;RP0=1, select bank1
  3685  067B  1303               	bcf	3,6	;RP1=0, select bank1
  3686  067C  0843               	movf	(sprintf@val+2)^(0+128),w
  3687  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3688  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3689  067F  00B3               	movwf	___llmod@dividend+2
  3690  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3692  0682  0842               	movf	(sprintf@val+1)^(0+128),w
  3693  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0685  00B2               	movwf	___llmod@dividend+1
  3696  0686  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0687  1303               	bcf	3,6	;RP1=0, select bank1
  3698  0688  0841               	movf	sprintf@val^(0+128),w
  3699  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3700  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3701  068B  00B1               	movwf	___llmod@dividend
  3702  068C  160A  158A  2348  120A  118A  	fcall	___llmod
  3703  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0693  0830               	movf	?___llmod+3,w
  3706  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3707  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3708  0696  00C4               	movwf	(sprintf@val+3)^(0+128)
  3709  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0698  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0699  082F               	movf	?___llmod+2,w
  3712  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3713  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3714  069C  00C3               	movwf	(sprintf@val+2)^(0+128)
  3715  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3716  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3717  069F  082E               	movf	?___llmod+1,w
  3718  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3719  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  3720  06A2  00C2               	movwf	(sprintf@val+1)^(0+128)
  3721  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3722  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3723  06A5  082D               	movf	?___llmod,w
  3724  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  3725  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  3726  06A8  00C1               	movwf	sprintf@val^(0+128)
  3727  06A9                     l4434:
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3730  06A9  3001               	movlw	1
  3731  06AA  02D0               	subwf	sprintf@c^(0+128),f
  3732  06AB  0A50               	incf	sprintf@c^(0+128),w
  3733  06AC  1D03               	btfss	3,2
  3734  06AD  2EAF               	goto	u7581
  3735  06AE  2EB0               	goto	u7580
  3736  06AF                     u7581:
  3737  06AF  2DA8               	goto	l4426
  3738  06B0                     u7580:
  3739  06B0  2EC2               	goto	l4442
  3740  06B1                     l4436:
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3743  06B1  3030               	movlw	48
  3744  06B2  00B3               	movwf	??_sprintf^(0+128)
  3745  06B3  084B               	movf	sprintf@sp^(0+128),w
  3746  06B4  0084               	movwf	4
  3747  06B5  0833               	movf	??_sprintf^(0+128),w
  3748  06B6  1383               	bcf	3,7	;select IRP bank0
  3749  06B7  0080               	movwf	0
  3750  06B8                     l4438:
  3751  06B8  3001               	movlw	1
  3752  06B9  00B3               	movwf	??_sprintf^(0+128)
  3753  06BA  0833               	movf	??_sprintf^(0+128),w
  3754  06BB  07CB               	addwf	sprintf@sp^(0+128),f
  3755  06BC                     l4440:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3758  06BC  30FF               	movlw	255
  3759  06BD  07BF               	addwf	sprintf@prec^(0+128),f
  3760  06BE  1803               	skipnc
  3761  06BF  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3762  06C0  30FF               	movlw	255
  3763  06C1  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3764  06C2                     l4442:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3767  06C2  083F               	movf	sprintf@prec^(0+128),w
  3768  06C3  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3769  06C4  1D03               	btfss	3,2
  3770  06C5  2EC7               	goto	u7591
  3771  06C6  2EC8               	goto	u7590
  3772  06C7                     u7591:
  3773  06C7  2EB1               	goto	l4436
  3774  06C8                     u7590:
  3775  06C8  2FD3               	goto	l4482
  3776  06C9                     l4444:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3779  06C9  083C               	movf	sprintf@ap^(0+128),w
  3780  06CA  0084               	movwf	4
  3781  06CB  1383               	bcf	3,7	;select IRP bank0
  3782  06CC  0800               	movf	0,w
  3783  06CD  00B3               	movwf	??_sprintf^(0+128)
  3784  06CE  0A84               	incf	4,f
  3785  06CF  0800               	movf	0,w
  3786  06D0  00B4               	movwf	(??_sprintf^(0+128)+1)
  3787  06D1  0833               	movf	??_sprintf^(0+128),w
  3788  06D2  00C1               	movwf	sprintf@val^(0+128)
  3789  06D3  0834               	movf	(??_sprintf+1)^(0+128),w
  3790  06D4  00C2               	movwf	(sprintf@val+1)^(0+128)
  3791  06D5  3000               	movlw	0
  3792  06D6  1BC2               	btfsc	(sprintf@val+1)^(0+128),7
  3793  06D7  30FF               	movlw	255
  3794  06D8  00C3               	movwf	(sprintf@val+2)^(0+128)
  3795  06D9  00C4               	movwf	(sprintf@val+3)^(0+128)
  3796  06DA                     l4446:
  3797  06DA  3002               	movlw	2
  3798  06DB  00B3               	movwf	??_sprintf^(0+128)
  3799  06DC  0833               	movf	??_sprintf^(0+128),w
  3800  06DD  07BC               	addwf	sprintf@ap^(0+128),f
  3801  06DE                     l4448:
  3802                           
  3803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3804  06DE  1FC4               	btfss	(sprintf@val+3)^(0+128),7
  3805  06DF  2EE1               	goto	u7601
  3806  06E0  2EE2               	goto	u7600
  3807  06E1                     u7601:
  3808  06E1  2EF1               	goto	l4454
  3809  06E2                     u7600:
  3810  06E2                     l4450:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3813  06E2  3003               	movlw	3
  3814  06E3  04BD               	iorwf	sprintf@flag^(0+128),f
  3815  06E4  3000               	movlw	0
  3816  06E5  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  3817  06E6                     l4452:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3820  06E6  09C1               	comf	sprintf@val^(0+128),f
  3821  06E7  09C2               	comf	(sprintf@val+1)^(0+128),f
  3822  06E8  09C3               	comf	(sprintf@val+2)^(0+128),f
  3823  06E9  09C4               	comf	(sprintf@val+3)^(0+128),f
  3824  06EA  0AC1               	incf	sprintf@val^(0+128),f
  3825  06EB  1903               	skipnz
  3826  06EC  0AC2               	incf	(sprintf@val+1)^(0+128),f
  3827  06ED  1903               	skipnz
  3828  06EE  0AC3               	incf	(sprintf@val+2)^(0+128),f
  3829  06EF  1903               	skipnz
  3830  06F0  0AC4               	incf	(sprintf@val+3)^(0+128),f
  3831  06F1                     l4454:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3834  06F1  01D0               	clrf	sprintf@c^(0+128)
  3835  06F2  0AD0               	incf	sprintf@c^(0+128),f
  3836  06F3                     l4460:
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3839  06F3  0850               	movf	sprintf@c^(0+128),w
  3840  06F4  00B3               	movwf	??_sprintf^(0+128)
  3841  06F5  3001               	movlw	1
  3842  06F6                     u7615:
  3843  06F6  1003               	clrc
  3844  06F7  0DB3               	rlf	??_sprintf^(0+128),f
  3845  06F8  3EFF               	addlw	-1
  3846  06F9  1D03               	skipz
  3847  06FA  2EF6               	goto	u7615
  3848  06FB  1003               	clrc
  3849  06FC  0D33               	rlf	??_sprintf^(0+128),w
  3850  06FD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3851  06FE  0084               	movwf	4
  3852  06FF  160A  118A  200A  120A  118A  	fcall	stringdir
  3853  0704  00B4               	movwf	(??_sprintf+1)^(0+128)
  3854  0705  160A  118A  200A  120A  118A  	fcall	stringdir
  3855  070A  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
  3856  070B  160A  118A  200A  120A  118A  	fcall	stringdir
  3857  0710  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
  3858  0711  160A  118A  200A  120A  118A  	fcall	stringdir
  3859  0716  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
  3860  0717  0837               	movf	(??_sprintf+4)^(0+128),w
  3861  0718  0244               	subwf	(sprintf@val+3)^(0+128),w
  3862  0719  1D03               	skipz
  3863  071A  2F25               	goto	u7625
  3864  071B  0836               	movf	(??_sprintf+3)^(0+128),w
  3865  071C  0243               	subwf	(sprintf@val+2)^(0+128),w
  3866  071D  1D03               	skipz
  3867  071E  2F25               	goto	u7625
  3868  071F  0835               	movf	(??_sprintf+2)^(0+128),w
  3869  0720  0242               	subwf	(sprintf@val+1)^(0+128),w
  3870  0721  1D03               	skipz
  3871  0722  2F25               	goto	u7625
  3872  0723  0834               	movf	(??_sprintf+1)^(0+128),w
  3873  0724  0241               	subwf	sprintf@val^(0+128),w
  3874  0725                     u7625:
  3875  0725  1803               	skipnc
  3876  0726  2F28               	goto	u7621
  3877  0727  2F29               	goto	u7620
  3878  0728                     u7621:
  3879  0728  2F2A               	goto	l4464
  3880  0729                     u7620:
  3881  0729  2F34               	goto	l4466
  3882  072A                     l4464:
  3883  072A  3001               	movlw	1
  3884  072B  00B3               	movwf	??_sprintf^(0+128)
  3885  072C  0833               	movf	??_sprintf^(0+128),w
  3886  072D  07D0               	addwf	sprintf@c^(0+128),f
  3887  072E  300A               	movlw	10
  3888  072F  0650               	xorwf	sprintf@c^(0+128),w
  3889  0730  1D03               	btfss	3,2
  3890  0731  2F33               	goto	u7631
  3891  0732  2F34               	goto	u7630
  3892  0733                     u7631:
  3893  0733  2EF3               	goto	l4460
  3894  0734                     u7630:
  3895  0734                     l4466:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3898  0734  3003               	movlw	3
  3899  0735  053D               	andwf	sprintf@flag^(0+128),w
  3900  0736  00B3               	movwf	??_sprintf^(0+128)
  3901  0737  3000               	movlw	0
  3902  0738  053E               	andwf	(sprintf@flag+1)^(0+128),w
  3903  0739  00B4               	movwf	(??_sprintf+1)^(0+128)
  3904  073A  0833               	movf	??_sprintf^(0+128),w
  3905  073B  0434               	iorwf	(??_sprintf^(0+128)+1),w
  3906  073C  1903               	btfsc	3,2
  3907  073D  2F3F               	goto	u7641
  3908  073E  2F40               	goto	u7640
  3909  073F                     u7641:
  3910  073F  2F4B               	goto	l4472
  3911  0740                     u7640:
  3912  0740                     l4468:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3915  0740  302D               	movlw	45
  3916  0741  00B3               	movwf	??_sprintf^(0+128)
  3917  0742  084B               	movf	sprintf@sp^(0+128),w
  3918  0743  0084               	movwf	4
  3919  0744  0833               	movf	??_sprintf^(0+128),w
  3920  0745  1383               	bcf	3,7	;select IRP bank0
  3921  0746  0080               	movwf	0
  3922  0747                     l4470:
  3923  0747  3001               	movlw	1
  3924  0748  00B3               	movwf	??_sprintf^(0+128)
  3925  0749  0833               	movf	??_sprintf^(0+128),w
  3926  074A  07CB               	addwf	sprintf@sp^(0+128),f
  3927  074B                     l4472:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3930  074B  0850               	movf	sprintf@c^(0+128),w
  3931  074C  00B3               	movwf	??_sprintf^(0+128)
  3932  074D  01B4               	clrf	(??_sprintf^(0+128)+1)
  3933  074E  0833               	movf	??_sprintf^(0+128),w
  3934  074F  00BF               	movwf	sprintf@prec^(0+128)
  3935  0750  0834               	movf	(??_sprintf+1)^(0+128),w
  3936  0751  00C0               	movwf	(sprintf@prec+1)^(0+128)
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3939  0752  2FC5               	goto	l4480
  3940  0753                     l4474:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3943  0753  3000               	movlw	0
  3944  0754  1283               	bcf	3,5	;RP0=0, select bank0
  3945  0755  1303               	bcf	3,6	;RP1=0, select bank0
  3946  0756  00B0               	movwf	___llmod@divisor+3
  3947  0757  3000               	movlw	0
  3948  0758  00AF               	movwf	___llmod@divisor+2
  3949  0759  3000               	movlw	0
  3950  075A  00AE               	movwf	___llmod@divisor+1
  3951  075B  300A               	movlw	10
  3952  075C  00AD               	movwf	___llmod@divisor
  3953  075D  1683               	bsf	3,5	;RP0=1, select bank1
  3954  075E  1303               	bcf	3,6	;RP1=0, select bank1
  3955  075F  083F               	movf	sprintf@prec^(0+128),w
  3956  0760  00B3               	movwf	??_sprintf^(0+128)
  3957  0761  3001               	movlw	1
  3958  0762                     u7655:
  3959  0762  1003               	clrc
  3960  0763  0DB3               	rlf	??_sprintf^(0+128),f
  3961  0764  3EFF               	addlw	-1
  3962  0765  1D03               	skipz
  3963  0766  2F62               	goto	u7655
  3964  0767  1003               	clrc
  3965  0768  0D33               	rlf	??_sprintf^(0+128),w
  3966  0769  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3967  076A  0084               	movwf	4
  3968  076B  160A  118A  200A  120A  118A  	fcall	stringdir
  3969  0770  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0771  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0772  00A0               	movwf	___lldiv@divisor
  3972  0773  160A  118A  200A  120A  118A  	fcall	stringdir
  3973  0778  00A1               	movwf	___lldiv@divisor+1
  3974  0779  160A  118A  200A  120A  118A  	fcall	stringdir
  3975  077E  00A2               	movwf	___lldiv@divisor+2
  3976  077F  160A  118A  200A  120A  118A  	fcall	stringdir
  3977  0784  00A3               	movwf	___lldiv@divisor+3
  3978  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3979  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3980  0787  0844               	movf	(sprintf@val+3)^(0+128),w
  3981  0788  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0789  1303               	bcf	3,6	;RP1=0, select bank0
  3983  078A  00A7               	movwf	___lldiv@dividend+3
  3984  078B  1683               	bsf	3,5	;RP0=1, select bank1
  3985  078C  1303               	bcf	3,6	;RP1=0, select bank1
  3986  078D  0843               	movf	(sprintf@val+2)^(0+128),w
  3987  078E  1283               	bcf	3,5	;RP0=0, select bank0
  3988  078F  1303               	bcf	3,6	;RP1=0, select bank0
  3989  0790  00A6               	movwf	___lldiv@dividend+2
  3990  0791  1683               	bsf	3,5	;RP0=1, select bank1
  3991  0792  1303               	bcf	3,6	;RP1=0, select bank1
  3992  0793  0842               	movf	(sprintf@val+1)^(0+128),w
  3993  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0795  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0796  00A5               	movwf	___lldiv@dividend+1
  3996  0797  1683               	bsf	3,5	;RP0=1, select bank1
  3997  0798  1303               	bcf	3,6	;RP1=0, select bank1
  3998  0799  0841               	movf	sprintf@val^(0+128),w
  3999  079A  1283               	bcf	3,5	;RP0=0, select bank0
  4000  079B  1303               	bcf	3,6	;RP1=0, select bank0
  4001  079C  00A4               	movwf	___lldiv@dividend
  4002  079D  160A  158A  23F9  120A  118A  	fcall	___lldiv
  4003  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  4004  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  4005  07A4  0823               	movf	?___lldiv+3,w
  4006  07A5  00B4               	movwf	___llmod@dividend+3
  4007  07A6  0822               	movf	?___lldiv+2,w
  4008  07A7  00B3               	movwf	___llmod@dividend+2
  4009  07A8  0821               	movf	?___lldiv+1,w
  4010  07A9  00B2               	movwf	___llmod@dividend+1
  4011  07AA  0820               	movf	?___lldiv,w
  4012  07AB  00B1               	movwf	___llmod@dividend
  4013  07AC  160A  158A  2348  120A  118A  	fcall	___llmod
  4014  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4015  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4016  07B3  082D               	movf	?___llmod,w
  4017  07B4  3E30               	addlw	48
  4018  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  4019  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  4020  07B7  00B4               	movwf	(??_sprintf+1)^(0+128)
  4021  07B8  0834               	movf	(??_sprintf+1)^(0+128),w
  4022  07B9  00D0               	movwf	sprintf@c^(0+128)
  4023  07BA                     l4476:
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4026  07BA  0850               	movf	sprintf@c^(0+128),w
  4027  07BB  00B3               	movwf	??_sprintf^(0+128)
  4028  07BC  084B               	movf	sprintf@sp^(0+128),w
  4029  07BD  0084               	movwf	4
  4030  07BE  0833               	movf	??_sprintf^(0+128),w
  4031  07BF  1383               	bcf	3,7	;select IRP bank0
  4032  07C0  0080               	movwf	0
  4033  07C1                     l4478:
  4034  07C1  3001               	movlw	1
  4035  07C2  00B3               	movwf	??_sprintf^(0+128)
  4036  07C3  0833               	movf	??_sprintf^(0+128),w
  4037  07C4  07CB               	addwf	sprintf@sp^(0+128),f
  4038  07C5                     l4480:
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4041  07C5  30FF               	movlw	255
  4042  07C6  07BF               	addwf	sprintf@prec^(0+128),f
  4043  07C7  1803               	skipnc
  4044  07C8  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  4045  07C9  30FF               	movlw	255
  4046  07CA  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  4047  07CB  0A3F               	incf	sprintf@prec^(0+128),w
  4048  07CC  1D03               	skipz
  4049  07CD  2FD2               	goto	u7661
  4050  07CE  0A40               	incf	(sprintf@prec+1)^(0+128),w
  4051  07CF  1D03               	btfss	3,2
  4052  07D0  2FD2               	goto	u7661
  4053  07D1  2FD3               	goto	u7660
  4054  07D2                     u7661:
  4055  07D2  2F53               	goto	l4474
  4056  07D3                     u7660:
  4057  07D3                     l4482:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4060  07D3  3001               	movlw	1
  4061  07D4  07A8               	addwf	sprintf@f^(0+128),f
  4062  07D5  30FF               	movlw	-1
  4063  07D6  0728               	addwf	sprintf@f^(0+128),w
  4064  07D7  0084               	movwf	4
  4065  07D8  160A  118A  200A  120A  118A  	fcall	stringdir
  4066  07DD  00B3               	movwf	??_sprintf^(0+128)
  4067  07DE  0833               	movf	??_sprintf^(0+128),w
  4068  07DF  00D0               	movwf	sprintf@c^(0+128)
  4069  07E0  0850               	movf	sprintf@c^(0+128),w
  4070  07E1  1D03               	btfss	3,2
  4071  07E2  2FE4               	goto	u7671
  4072  07E3  2FE5               	goto	u7670
  4073  07E4                     u7671:
  4074  07E4  282A               	goto	l4292
  4075  07E5                     u7670:
  4076  07E5                     l4484:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4079  07E5  084B               	movf	sprintf@sp^(0+128),w
  4080  07E6  0084               	movwf	4
  4081  07E7  1383               	bcf	3,7	;select IRP bank0
  4082  07E8  0180               	clrf	0
  4083  07E9                     l408:
  4084  07E9  0008               	return
  4085  07EA                     __end_of_sprintf:
  4086                           
  4087                           	psect	text4
  4088  0C9D                     __ptext4:	
  4089 ;; *************** function _scale *****************
  4090 ;; Defined at:
  4091 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  scl             1    wreg     char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  scl             1   55[BANK0 ] char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  4   37[BANK0 ] char 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       4       0       0       0
  4106 ;;      Locals:         0       5       0       0       0
  4107 ;;      Temps:          0      10       0       0       0
  4108 ;;      Totals:         0      19       0       0       0
  4109 ;;Total ram usage:       19 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    4
  4112 ;; This function calls:
  4113 ;;		___awdiv
  4114 ;;		___awmod
  4115 ;;		___flmul
  4116 ;; This function is called by:
  4117 ;;		_sprintf
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _scale
  4123  0C9D                     _scale:
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4127                           ;scale@scl stored from wreg
  4128  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0C9F  00D7               	movwf	scale@scl
  4131  0CA0                     l3926:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4134  0CA0  1FD7               	btfss	scale@scl,7
  4135  0CA1  2CA3               	goto	u6331
  4136  0CA2  2CA4               	goto	u6330
  4137  0CA3                     u6331:
  4138  0CA3  2E53               	goto	l3948
  4139  0CA4                     u6330:
  4140  0CA4                     l3928:
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4143  0CA4  09D7               	comf	scale@scl,f
  4144  0CA5  0AD7               	incf	scale@scl,f
  4145  0CA6                     l3930:
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4148  0CA6  0857               	movf	scale@scl,w
  4149  0CA7  3A80               	xorlw	128
  4150  0CA8  3E12               	addlw	-238
  4151  0CA9  1C03               	skipc
  4152  0CAA  2CAC               	goto	u6341
  4153  0CAB  2CAD               	goto	u6340
  4154  0CAC                     u6341:
  4155  0CAC  2D97               	goto	l3938
  4156  0CAD                     u6340:
  4157  0CAD                     l3932:
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4160  0CAD  300A               	movlw	10
  4161  0CAE  00A2               	movwf	___awdiv@divisor
  4162  0CAF  3000               	movlw	0
  4163  0CB0  00A3               	movwf	___awdiv@divisor+1
  4164  0CB1  0857               	movf	scale@scl,w
  4165  0CB2  00F5               	movwf	___awmod@dividend
  4166  0CB3  01F6               	clrf	___awmod@dividend+1
  4167  0CB4  1BF5               	btfsc	___awmod@dividend,7
  4168  0CB5  03F6               	decf	___awmod@dividend+1,f
  4169  0CB6  3064               	movlw	100
  4170  0CB7  00F3               	movwf	___awmod@divisor
  4171  0CB8  3000               	movlw	0
  4172  0CB9  00F4               	movwf	___awmod@divisor+1
  4173  0CBA  160A  158A  239E  120A  158A  	fcall	___awmod
  4174  0CBF  0874               	movf	?___awmod+1,w
  4175  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4177  0CC2  00A5               	movwf	___awdiv@dividend+1
  4178  0CC3  0873               	movf	?___awmod,w
  4179  0CC4  00A4               	movwf	___awdiv@dividend
  4180  0CC5  160A  158A  2461  120A  158A  	fcall	___awdiv
  4181  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0CCC  0822               	movf	?___awdiv,w
  4184  0CCD  00C9               	movwf	??_scale
  4185  0CCE  3001               	movlw	1
  4186  0CCF                     u6355:
  4187  0CCF  1003               	clrc
  4188  0CD0  0DC9               	rlf	??_scale,f
  4189  0CD1  3EFF               	addlw	-1
  4190  0CD2  1D03               	skipz
  4191  0CD3  2CCF               	goto	u6355
  4192  0CD4  1003               	clrc
  4193  0CD5  0D49               	rlf	??_scale,w
  4194  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4195  0CD7  0084               	movwf	4
  4196  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  4197  0CDD  00CA               	movwf	??_scale+1
  4198  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  4199  0CE3  00CB               	movwf	??_scale+2
  4200  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  4201  0CE9  00CC               	movwf	??_scale+3
  4202  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  4203  0CEF  00CD               	movwf	??_scale+4
  4204  0CF0  084D               	movf	??_scale+4,w
  4205  0CF1  00AE               	movwf	___flmul@b+3
  4206  0CF2  084C               	movf	??_scale+3,w
  4207  0CF3  00AD               	movwf	___flmul@b+2
  4208  0CF4  084B               	movf	??_scale+2,w
  4209  0CF5  00AC               	movwf	___flmul@b+1
  4210  0CF6  084A               	movf	??_scale+1,w
  4211  0CF7  00AB               	movwf	___flmul@b
  4212  0CF8  3064               	movlw	100
  4213  0CF9  00A2               	movwf	___awdiv@divisor
  4214  0CFA  3000               	movlw	0
  4215  0CFB  00A3               	movwf	___awdiv@divisor+1
  4216  0CFC  0857               	movf	scale@scl,w
  4217  0CFD  00A4               	movwf	___awdiv@dividend
  4218  0CFE  01A5               	clrf	___awdiv@dividend+1
  4219  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  4220  0D00  03A5               	decf	___awdiv@dividend+1,f
  4221  0D01  160A  158A  2461  120A  158A  	fcall	___awdiv
  4222  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0D08  0822               	movf	?___awdiv,w
  4225  0D09  00CE               	movwf	??_scale+5
  4226  0D0A  3001               	movlw	1
  4227  0D0B                     u6365:
  4228  0D0B  1003               	clrc
  4229  0D0C  0DCE               	rlf	??_scale+5,f
  4230  0D0D  3EFF               	addlw	-1
  4231  0D0E  1D03               	skipz
  4232  0D0F  2D0B               	goto	u6365
  4233  0D10  1003               	clrc
  4234  0D11  0D4E               	rlf	??_scale+5,w
  4235  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4236  0D13  0084               	movwf	4
  4237  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  4238  0D19  00CF               	movwf	??_scale+6
  4239  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  4240  0D1F  00D0               	movwf	??_scale+7
  4241  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  4242  0D25  00D1               	movwf	??_scale+8
  4243  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  4244  0D2B  00D2               	movwf	??_scale+9
  4245  0D2C  0852               	movf	??_scale+9,w
  4246  0D2D  00B2               	movwf	___flmul@a+3
  4247  0D2E  0851               	movf	??_scale+8,w
  4248  0D2F  00B1               	movwf	___flmul@a+2
  4249  0D30  0850               	movf	??_scale+7,w
  4250  0D31  00B0               	movwf	___flmul@a+1
  4251  0D32  084F               	movf	??_scale+6,w
  4252  0D33  00AF               	movwf	___flmul@a
  4253  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4254  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4255  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4256  0D3B  082E               	movf	?___flmul+3,w
  4257  0D3C  00D6               	movwf	_scale$1109+3
  4258  0D3D  082D               	movf	?___flmul+2,w
  4259  0D3E  00D5               	movwf	_scale$1109+2
  4260  0D3F  082C               	movf	?___flmul+1,w
  4261  0D40  00D4               	movwf	_scale$1109+1
  4262  0D41  082B               	movf	?___flmul,w
  4263  0D42  00D3               	movwf	_scale$1109
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4266  0D43  300A               	movlw	10
  4267  0D44  00F3               	movwf	___awmod@divisor
  4268  0D45  3000               	movlw	0
  4269  0D46  00F4               	movwf	___awmod@divisor+1
  4270  0D47  0857               	movf	scale@scl,w
  4271  0D48  00F5               	movwf	___awmod@dividend
  4272  0D49  01F6               	clrf	___awmod@dividend+1
  4273  0D4A  1BF5               	btfsc	___awmod@dividend,7
  4274  0D4B  03F6               	decf	___awmod@dividend+1,f
  4275  0D4C  160A  158A  239E  120A  158A  	fcall	___awmod
  4276  0D51  0873               	movf	?___awmod,w
  4277  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4279  0D54  00C9               	movwf	??_scale
  4280  0D55  3001               	movlw	1
  4281  0D56                     u6375:
  4282  0D56  1003               	clrc
  4283  0D57  0DC9               	rlf	??_scale,f
  4284  0D58  3EFF               	addlw	-1
  4285  0D59  1D03               	skipz
  4286  0D5A  2D56               	goto	u6375
  4287  0D5B  1003               	clrc
  4288  0D5C  0D49               	rlf	??_scale,w
  4289  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4290  0D5E  0084               	movwf	4
  4291  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  4292  0D64  00CA               	movwf	??_scale+1
  4293  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  4294  0D6A  00CB               	movwf	??_scale+2
  4295  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4296  0D70  00CC               	movwf	??_scale+3
  4297  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  4298  0D76  00CD               	movwf	??_scale+4
  4299  0D77  084D               	movf	??_scale+4,w
  4300  0D78  00AE               	movwf	___flmul@b+3
  4301  0D79  084C               	movf	??_scale+3,w
  4302  0D7A  00AD               	movwf	___flmul@b+2
  4303  0D7B  084B               	movf	??_scale+2,w
  4304  0D7C  00AC               	movwf	___flmul@b+1
  4305  0D7D  084A               	movf	??_scale+1,w
  4306  0D7E  00AB               	movwf	___flmul@b
  4307  0D7F  0856               	movf	_scale$1109+3,w
  4308  0D80  00B2               	movwf	___flmul@a+3
  4309  0D81  0855               	movf	_scale$1109+2,w
  4310  0D82  00B1               	movwf	___flmul@a+2
  4311  0D83  0854               	movf	_scale$1109+1,w
  4312  0D84  00B0               	movwf	___flmul@a+1
  4313  0D85  0853               	movf	_scale$1109,w
  4314  0D86  00AF               	movwf	___flmul@a
  4315  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4316  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0D8E  082E               	movf	?___flmul+3,w
  4319  0D8F  00C8               	movwf	?_scale+3
  4320  0D90  082D               	movf	?___flmul+2,w
  4321  0D91  00C7               	movwf	?_scale+2
  4322  0D92  082C               	movf	?___flmul+1,w
  4323  0D93  00C6               	movwf	?_scale+1
  4324  0D94  082B               	movf	?___flmul,w
  4325  0D95  00C5               	movwf	?_scale
  4326  0D96  2FFF               	goto	l343
  4327  0D97                     l3938:
  4328  0D97  0857               	movf	scale@scl,w
  4329  0D98  3A80               	xorlw	128
  4330  0D99  3E75               	addlw	-139
  4331  0D9A  1C03               	skipc
  4332  0D9B  2D9D               	goto	u6381
  4333  0D9C  2D9E               	goto	u6380
  4334  0D9D                     u6381:
  4335  0D9D  2E26               	goto	l3944
  4336  0D9E                     u6380:
  4337  0D9E                     l3940:
  4338                           
  4339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4340  0D9E  300A               	movlw	10
  4341  0D9F  00F3               	movwf	___awmod@divisor
  4342  0DA0  3000               	movlw	0
  4343  0DA1  00F4               	movwf	___awmod@divisor+1
  4344  0DA2  0857               	movf	scale@scl,w
  4345  0DA3  00F5               	movwf	___awmod@dividend
  4346  0DA4  01F6               	clrf	___awmod@dividend+1
  4347  0DA5  1BF5               	btfsc	___awmod@dividend,7
  4348  0DA6  03F6               	decf	___awmod@dividend+1,f
  4349  0DA7  160A  158A  239E  120A  158A  	fcall	___awmod
  4350  0DAC  0873               	movf	?___awmod,w
  4351  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4352  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4353  0DAF  00C9               	movwf	??_scale
  4354  0DB0  3001               	movlw	1
  4355  0DB1                     u6395:
  4356  0DB1  1003               	clrc
  4357  0DB2  0DC9               	rlf	??_scale,f
  4358  0DB3  3EFF               	addlw	-1
  4359  0DB4  1D03               	skipz
  4360  0DB5  2DB1               	goto	u6395
  4361  0DB6  1003               	clrc
  4362  0DB7  0D49               	rlf	??_scale,w
  4363  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4364  0DB9  0084               	movwf	4
  4365  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  4366  0DBF  00CA               	movwf	??_scale+1
  4367  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  4368  0DC5  00CB               	movwf	??_scale+2
  4369  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  4370  0DCB  00CC               	movwf	??_scale+3
  4371  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  4372  0DD1  00CD               	movwf	??_scale+4
  4373  0DD2  084D               	movf	??_scale+4,w
  4374  0DD3  00AE               	movwf	___flmul@b+3
  4375  0DD4  084C               	movf	??_scale+3,w
  4376  0DD5  00AD               	movwf	___flmul@b+2
  4377  0DD6  084B               	movf	??_scale+2,w
  4378  0DD7  00AC               	movwf	___flmul@b+1
  4379  0DD8  084A               	movf	??_scale+1,w
  4380  0DD9  00AB               	movwf	___flmul@b
  4381  0DDA  300A               	movlw	10
  4382  0DDB  00A2               	movwf	___awdiv@divisor
  4383  0DDC  3000               	movlw	0
  4384  0DDD  00A3               	movwf	___awdiv@divisor+1
  4385  0DDE  0857               	movf	scale@scl,w
  4386  0DDF  00A4               	movwf	___awdiv@dividend
  4387  0DE0  01A5               	clrf	___awdiv@dividend+1
  4388  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  4389  0DE2  03A5               	decf	___awdiv@dividend+1,f
  4390  0DE3  160A  158A  2461  120A  158A  	fcall	___awdiv
  4391  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0DEA  0822               	movf	?___awdiv,w
  4394  0DEB  00CE               	movwf	??_scale+5
  4395  0DEC  3001               	movlw	1
  4396  0DED                     u6405:
  4397  0DED  1003               	clrc
  4398  0DEE  0DCE               	rlf	??_scale+5,f
  4399  0DEF  3EFF               	addlw	-1
  4400  0DF0  1D03               	skipz
  4401  0DF1  2DED               	goto	u6405
  4402  0DF2  1003               	clrc
  4403  0DF3  0D4E               	rlf	??_scale+5,w
  4404  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4405  0DF5  0084               	movwf	4
  4406  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4407  0DFB  00CF               	movwf	??_scale+6
  4408  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4409  0E01  00D0               	movwf	??_scale+7
  4410  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4411  0E07  00D1               	movwf	??_scale+8
  4412  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4413  0E0D  00D2               	movwf	??_scale+9
  4414  0E0E  0852               	movf	??_scale+9,w
  4415  0E0F  00B2               	movwf	___flmul@a+3
  4416  0E10  0851               	movf	??_scale+8,w
  4417  0E11  00B1               	movwf	___flmul@a+2
  4418  0E12  0850               	movf	??_scale+7,w
  4419  0E13  00B0               	movwf	___flmul@a+1
  4420  0E14  084F               	movf	??_scale+6,w
  4421  0E15  00AF               	movwf	___flmul@a
  4422  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4423  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4424  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4425  0E1D  082E               	movf	?___flmul+3,w
  4426  0E1E  00C8               	movwf	?_scale+3
  4427  0E1F  082D               	movf	?___flmul+2,w
  4428  0E20  00C7               	movwf	?_scale+2
  4429  0E21  082C               	movf	?___flmul+1,w
  4430  0E22  00C6               	movwf	?_scale+1
  4431  0E23  082B               	movf	?___flmul,w
  4432  0E24  00C5               	movwf	?_scale
  4433  0E25  2FFF               	goto	l343
  4434  0E26                     l3944:
  4435                           
  4436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4437  0E26  0857               	movf	scale@scl,w
  4438  0E27  00C9               	movwf	??_scale
  4439  0E28  3001               	movlw	1
  4440  0E29                     u6415:
  4441  0E29  1003               	clrc
  4442  0E2A  0DC9               	rlf	??_scale,f
  4443  0E2B  3EFF               	addlw	-1
  4444  0E2C  1D03               	skipz
  4445  0E2D  2E29               	goto	u6415
  4446  0E2E  1003               	clrc
  4447  0E2F  0D49               	rlf	??_scale,w
  4448  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4449  0E31  0084               	movwf	4
  4450  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4451  0E37  00CA               	movwf	??_scale+1
  4452  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4453  0E3D  00CB               	movwf	??_scale+2
  4454  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4455  0E43  00CC               	movwf	??_scale+3
  4456  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4457  0E49  00CD               	movwf	??_scale+4
  4458  0E4A  084D               	movf	??_scale+4,w
  4459  0E4B  00C8               	movwf	?_scale+3
  4460  0E4C  084C               	movf	??_scale+3,w
  4461  0E4D  00C7               	movwf	?_scale+2
  4462  0E4E  084B               	movf	??_scale+2,w
  4463  0E4F  00C6               	movwf	?_scale+1
  4464  0E50  084A               	movf	??_scale+1,w
  4465  0E51  00C5               	movwf	?_scale
  4466  0E52  2FFF               	goto	l343
  4467  0E53                     l3948:
  4468                           
  4469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4470  0E53  0857               	movf	scale@scl,w
  4471  0E54  3A80               	xorlw	128
  4472  0E55  3E12               	addlw	-238
  4473  0E56  1C03               	skipc
  4474  0E57  2E59               	goto	u6421
  4475  0E58  2E5A               	goto	u6420
  4476  0E59                     u6421:
  4477  0E59  2F44               	goto	l3956
  4478  0E5A                     u6420:
  4479  0E5A                     l3950:
  4480                           
  4481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4482  0E5A  300A               	movlw	10
  4483  0E5B  00A2               	movwf	___awdiv@divisor
  4484  0E5C  3000               	movlw	0
  4485  0E5D  00A3               	movwf	___awdiv@divisor+1
  4486  0E5E  0857               	movf	scale@scl,w
  4487  0E5F  00F5               	movwf	___awmod@dividend
  4488  0E60  01F6               	clrf	___awmod@dividend+1
  4489  0E61  1BF5               	btfsc	___awmod@dividend,7
  4490  0E62  03F6               	decf	___awmod@dividend+1,f
  4491  0E63  3064               	movlw	100
  4492  0E64  00F3               	movwf	___awmod@divisor
  4493  0E65  3000               	movlw	0
  4494  0E66  00F4               	movwf	___awmod@divisor+1
  4495  0E67  160A  158A  239E  120A  158A  	fcall	___awmod
  4496  0E6C  0874               	movf	?___awmod+1,w
  4497  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4498  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4499  0E6F  00A5               	movwf	___awdiv@dividend+1
  4500  0E70  0873               	movf	?___awmod,w
  4501  0E71  00A4               	movwf	___awdiv@dividend
  4502  0E72  160A  158A  2461  120A  158A  	fcall	___awdiv
  4503  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0E79  0822               	movf	?___awdiv,w
  4506  0E7A  00C9               	movwf	??_scale
  4507  0E7B  3001               	movlw	1
  4508  0E7C                     u6435:
  4509  0E7C  1003               	clrc
  4510  0E7D  0DC9               	rlf	??_scale,f
  4511  0E7E  3EFF               	addlw	-1
  4512  0E7F  1D03               	skipz
  4513  0E80  2E7C               	goto	u6435
  4514  0E81  1003               	clrc
  4515  0E82  0D49               	rlf	??_scale,w
  4516  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4517  0E84  0084               	movwf	4
  4518  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4519  0E8A  00CA               	movwf	??_scale+1
  4520  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4521  0E90  00CB               	movwf	??_scale+2
  4522  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4523  0E96  00CC               	movwf	??_scale+3
  4524  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4525  0E9C  00CD               	movwf	??_scale+4
  4526  0E9D  084D               	movf	??_scale+4,w
  4527  0E9E  00AE               	movwf	___flmul@b+3
  4528  0E9F  084C               	movf	??_scale+3,w
  4529  0EA0  00AD               	movwf	___flmul@b+2
  4530  0EA1  084B               	movf	??_scale+2,w
  4531  0EA2  00AC               	movwf	___flmul@b+1
  4532  0EA3  084A               	movf	??_scale+1,w
  4533  0EA4  00AB               	movwf	___flmul@b
  4534  0EA5  3064               	movlw	100
  4535  0EA6  00A2               	movwf	___awdiv@divisor
  4536  0EA7  3000               	movlw	0
  4537  0EA8  00A3               	movwf	___awdiv@divisor+1
  4538  0EA9  0857               	movf	scale@scl,w
  4539  0EAA  00A4               	movwf	___awdiv@dividend
  4540  0EAB  01A5               	clrf	___awdiv@dividend+1
  4541  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  4542  0EAD  03A5               	decf	___awdiv@dividend+1,f
  4543  0EAE  160A  158A  2461  120A  158A  	fcall	___awdiv
  4544  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4546  0EB5  0822               	movf	?___awdiv,w
  4547  0EB6  00CE               	movwf	??_scale+5
  4548  0EB7  3001               	movlw	1
  4549  0EB8                     u6445:
  4550  0EB8  1003               	clrc
  4551  0EB9  0DCE               	rlf	??_scale+5,f
  4552  0EBA  3EFF               	addlw	-1
  4553  0EBB  1D03               	skipz
  4554  0EBC  2EB8               	goto	u6445
  4555  0EBD  1003               	clrc
  4556  0EBE  0D4E               	rlf	??_scale+5,w
  4557  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4558  0EC0  0084               	movwf	4
  4559  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4560  0EC6  00CF               	movwf	??_scale+6
  4561  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4562  0ECC  00D0               	movwf	??_scale+7
  4563  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4564  0ED2  00D1               	movwf	??_scale+8
  4565  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4566  0ED8  00D2               	movwf	??_scale+9
  4567  0ED9  0852               	movf	??_scale+9,w
  4568  0EDA  00B2               	movwf	___flmul@a+3
  4569  0EDB  0851               	movf	??_scale+8,w
  4570  0EDC  00B1               	movwf	___flmul@a+2
  4571  0EDD  0850               	movf	??_scale+7,w
  4572  0EDE  00B0               	movwf	___flmul@a+1
  4573  0EDF  084F               	movf	??_scale+6,w
  4574  0EE0  00AF               	movwf	___flmul@a
  4575  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4576  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0EE8  082E               	movf	?___flmul+3,w
  4579  0EE9  00D6               	movwf	_scale$1109+3
  4580  0EEA  082D               	movf	?___flmul+2,w
  4581  0EEB  00D5               	movwf	_scale$1109+2
  4582  0EEC  082C               	movf	?___flmul+1,w
  4583  0EED  00D4               	movwf	_scale$1109+1
  4584  0EEE  082B               	movf	?___flmul,w
  4585  0EEF  00D3               	movwf	_scale$1109
  4586                           
  4587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4588  0EF0  300A               	movlw	10
  4589  0EF1  00F3               	movwf	___awmod@divisor
  4590  0EF2  3000               	movlw	0
  4591  0EF3  00F4               	movwf	___awmod@divisor+1
  4592  0EF4  0857               	movf	scale@scl,w
  4593  0EF5  00F5               	movwf	___awmod@dividend
  4594  0EF6  01F6               	clrf	___awmod@dividend+1
  4595  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4596  0EF8  03F6               	decf	___awmod@dividend+1,f
  4597  0EF9  160A  158A  239E  120A  158A  	fcall	___awmod
  4598  0EFE  0873               	movf	?___awmod,w
  4599  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0F01  00C9               	movwf	??_scale
  4602  0F02  3001               	movlw	1
  4603  0F03                     u6455:
  4604  0F03  1003               	clrc
  4605  0F04  0DC9               	rlf	??_scale,f
  4606  0F05  3EFF               	addlw	-1
  4607  0F06  1D03               	skipz
  4608  0F07  2F03               	goto	u6455
  4609  0F08  1003               	clrc
  4610  0F09  0D49               	rlf	??_scale,w
  4611  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4612  0F0B  0084               	movwf	4
  4613  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4614  0F11  00CA               	movwf	??_scale+1
  4615  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4616  0F17  00CB               	movwf	??_scale+2
  4617  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4618  0F1D  00CC               	movwf	??_scale+3
  4619  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4620  0F23  00CD               	movwf	??_scale+4
  4621  0F24  084D               	movf	??_scale+4,w
  4622  0F25  00AE               	movwf	___flmul@b+3
  4623  0F26  084C               	movf	??_scale+3,w
  4624  0F27  00AD               	movwf	___flmul@b+2
  4625  0F28  084B               	movf	??_scale+2,w
  4626  0F29  00AC               	movwf	___flmul@b+1
  4627  0F2A  084A               	movf	??_scale+1,w
  4628  0F2B  00AB               	movwf	___flmul@b
  4629  0F2C  0856               	movf	_scale$1109+3,w
  4630  0F2D  00B2               	movwf	___flmul@a+3
  4631  0F2E  0855               	movf	_scale$1109+2,w
  4632  0F2F  00B1               	movwf	___flmul@a+2
  4633  0F30  0854               	movf	_scale$1109+1,w
  4634  0F31  00B0               	movwf	___flmul@a+1
  4635  0F32  0853               	movf	_scale$1109,w
  4636  0F33  00AF               	movwf	___flmul@a
  4637  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4638  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0F3B  082E               	movf	?___flmul+3,w
  4641  0F3C  00C8               	movwf	?_scale+3
  4642  0F3D  082D               	movf	?___flmul+2,w
  4643  0F3E  00C7               	movwf	?_scale+2
  4644  0F3F  082C               	movf	?___flmul+1,w
  4645  0F40  00C6               	movwf	?_scale+1
  4646  0F41  082B               	movf	?___flmul,w
  4647  0F42  00C5               	movwf	?_scale
  4648  0F43  2FFF               	goto	l343
  4649  0F44                     l3956:
  4650  0F44  0857               	movf	scale@scl,w
  4651  0F45  3A80               	xorlw	128
  4652  0F46  3E75               	addlw	-139
  4653  0F47  1C03               	skipc
  4654  0F48  2F4A               	goto	u6461
  4655  0F49  2F4B               	goto	u6460
  4656  0F4A                     u6461:
  4657  0F4A  2FD3               	goto	l3962
  4658  0F4B                     u6460:
  4659  0F4B                     l3958:
  4660                           
  4661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4662  0F4B  300A               	movlw	10
  4663  0F4C  00F3               	movwf	___awmod@divisor
  4664  0F4D  3000               	movlw	0
  4665  0F4E  00F4               	movwf	___awmod@divisor+1
  4666  0F4F  0857               	movf	scale@scl,w
  4667  0F50  00F5               	movwf	___awmod@dividend
  4668  0F51  01F6               	clrf	___awmod@dividend+1
  4669  0F52  1BF5               	btfsc	___awmod@dividend,7
  4670  0F53  03F6               	decf	___awmod@dividend+1,f
  4671  0F54  160A  158A  239E  120A  158A  	fcall	___awmod
  4672  0F59  0873               	movf	?___awmod,w
  4673  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0F5C  00C9               	movwf	??_scale
  4676  0F5D  3001               	movlw	1
  4677  0F5E                     u6475:
  4678  0F5E  1003               	clrc
  4679  0F5F  0DC9               	rlf	??_scale,f
  4680  0F60  3EFF               	addlw	-1
  4681  0F61  1D03               	skipz
  4682  0F62  2F5E               	goto	u6475
  4683  0F63  1003               	clrc
  4684  0F64  0D49               	rlf	??_scale,w
  4685  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4686  0F66  0084               	movwf	4
  4687  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4688  0F6C  00CA               	movwf	??_scale+1
  4689  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4690  0F72  00CB               	movwf	??_scale+2
  4691  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4692  0F78  00CC               	movwf	??_scale+3
  4693  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4694  0F7E  00CD               	movwf	??_scale+4
  4695  0F7F  084D               	movf	??_scale+4,w
  4696  0F80  00AE               	movwf	___flmul@b+3
  4697  0F81  084C               	movf	??_scale+3,w
  4698  0F82  00AD               	movwf	___flmul@b+2
  4699  0F83  084B               	movf	??_scale+2,w
  4700  0F84  00AC               	movwf	___flmul@b+1
  4701  0F85  084A               	movf	??_scale+1,w
  4702  0F86  00AB               	movwf	___flmul@b
  4703  0F87  300A               	movlw	10
  4704  0F88  00A2               	movwf	___awdiv@divisor
  4705  0F89  3000               	movlw	0
  4706  0F8A  00A3               	movwf	___awdiv@divisor+1
  4707  0F8B  0857               	movf	scale@scl,w
  4708  0F8C  00A4               	movwf	___awdiv@dividend
  4709  0F8D  01A5               	clrf	___awdiv@dividend+1
  4710  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  4711  0F8F  03A5               	decf	___awdiv@dividend+1,f
  4712  0F90  160A  158A  2461  120A  158A  	fcall	___awdiv
  4713  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4714  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4715  0F97  0822               	movf	?___awdiv,w
  4716  0F98  00CE               	movwf	??_scale+5
  4717  0F99  3001               	movlw	1
  4718  0F9A                     u6485:
  4719  0F9A  1003               	clrc
  4720  0F9B  0DCE               	rlf	??_scale+5,f
  4721  0F9C  3EFF               	addlw	-1
  4722  0F9D  1D03               	skipz
  4723  0F9E  2F9A               	goto	u6485
  4724  0F9F  1003               	clrc
  4725  0FA0  0D4E               	rlf	??_scale+5,w
  4726  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4727  0FA2  0084               	movwf	4
  4728  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4729  0FA8  00CF               	movwf	??_scale+6
  4730  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4731  0FAE  00D0               	movwf	??_scale+7
  4732  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4733  0FB4  00D1               	movwf	??_scale+8
  4734  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4735  0FBA  00D2               	movwf	??_scale+9
  4736  0FBB  0852               	movf	??_scale+9,w
  4737  0FBC  00B2               	movwf	___flmul@a+3
  4738  0FBD  0851               	movf	??_scale+8,w
  4739  0FBE  00B1               	movwf	___flmul@a+2
  4740  0FBF  0850               	movf	??_scale+7,w
  4741  0FC0  00B0               	movwf	___flmul@a+1
  4742  0FC1  084F               	movf	??_scale+6,w
  4743  0FC2  00AF               	movwf	___flmul@a
  4744  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4745  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0FCA  082E               	movf	?___flmul+3,w
  4748  0FCB  00C8               	movwf	?_scale+3
  4749  0FCC  082D               	movf	?___flmul+2,w
  4750  0FCD  00C7               	movwf	?_scale+2
  4751  0FCE  082C               	movf	?___flmul+1,w
  4752  0FCF  00C6               	movwf	?_scale+1
  4753  0FD0  082B               	movf	?___flmul,w
  4754  0FD1  00C5               	movwf	?_scale
  4755  0FD2  2FFF               	goto	l343
  4756  0FD3                     l3962:
  4757                           
  4758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4759  0FD3  0857               	movf	scale@scl,w
  4760  0FD4  00C9               	movwf	??_scale
  4761  0FD5  3001               	movlw	1
  4762  0FD6                     u6495:
  4763  0FD6  1003               	clrc
  4764  0FD7  0DC9               	rlf	??_scale,f
  4765  0FD8  3EFF               	addlw	-1
  4766  0FD9  1D03               	skipz
  4767  0FDA  2FD6               	goto	u6495
  4768  0FDB  1003               	clrc
  4769  0FDC  0D49               	rlf	??_scale,w
  4770  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4771  0FDE  0084               	movwf	4
  4772  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4773  0FE4  00CA               	movwf	??_scale+1
  4774  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4775  0FEA  00CB               	movwf	??_scale+2
  4776  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4777  0FF0  00CC               	movwf	??_scale+3
  4778  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4779  0FF6  00CD               	movwf	??_scale+4
  4780  0FF7  084D               	movf	??_scale+4,w
  4781  0FF8  00C8               	movwf	?_scale+3
  4782  0FF9  084C               	movf	??_scale+3,w
  4783  0FFA  00C7               	movwf	?_scale+2
  4784  0FFB  084B               	movf	??_scale+2,w
  4785  0FFC  00C6               	movwf	?_scale+1
  4786  0FFD  084A               	movf	??_scale+1,w
  4787  0FFE  00C5               	movwf	?_scale
  4788  0FFF                     l343:
  4789  0FFF  0008               	return
  4790  1000                     __end_of_scale:
  4791                           
  4792                           	psect	text5
  4793  1B9E                     __ptext5:	
  4794 ;; *************** function ___awmod *****************
  4795 ;; Defined at:
  4796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  divisor         2    3[COMMON] int 
  4799 ;;  dividend        2    5[COMMON] int 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  sign            1    1[BANK0 ] unsigned char 
  4802 ;;  counter         1    0[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    3[COMMON] int 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4812 ;;      Params:         4       0       0       0       0
  4813 ;;      Locals:         0       2       0       0       0
  4814 ;;      Temps:          1       0       0       0       0
  4815 ;;      Totals:         5       2       0       0       0
  4816 ;;Total ram usage:        7 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    2
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_scale
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function ___awmod
  4828  1B9E                     ___awmod:
  4829  1B9E                     l3794:	
  4830                           ;incstack = 0
  4831                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4832                           
  4833  1B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4834  1B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4835  1BA0  01A1               	clrf	___awmod@sign
  4836  1BA1                     l3796:
  4837  1BA1  1FF6               	btfss	___awmod@dividend+1,7
  4838  1BA2  2BA4               	goto	u6031
  4839  1BA3  2BA5               	goto	u6030
  4840  1BA4                     u6031:
  4841  1BA4  2BAC               	goto	l3802
  4842  1BA5                     u6030:
  4843  1BA5                     l3798:
  4844  1BA5  09F5               	comf	___awmod@dividend,f
  4845  1BA6  09F6               	comf	___awmod@dividend+1,f
  4846  1BA7  0AF5               	incf	___awmod@dividend,f
  4847  1BA8  1903               	skipnz
  4848  1BA9  0AF6               	incf	___awmod@dividend+1,f
  4849  1BAA                     l3800:
  4850  1BAA  01A1               	clrf	___awmod@sign
  4851  1BAB  0AA1               	incf	___awmod@sign,f
  4852  1BAC                     l3802:
  4853  1BAC  1FF4               	btfss	___awmod@divisor+1,7
  4854  1BAD  2BAF               	goto	u6041
  4855  1BAE  2BB0               	goto	u6040
  4856  1BAF                     u6041:
  4857  1BAF  2BB5               	goto	l3806
  4858  1BB0                     u6040:
  4859  1BB0                     l3804:
  4860  1BB0  09F3               	comf	___awmod@divisor,f
  4861  1BB1  09F4               	comf	___awmod@divisor+1,f
  4862  1BB2  0AF3               	incf	___awmod@divisor,f
  4863  1BB3  1903               	skipnz
  4864  1BB4  0AF4               	incf	___awmod@divisor+1,f
  4865  1BB5                     l3806:
  4866  1BB5  0873               	movf	___awmod@divisor,w
  4867  1BB6  0474               	iorwf	___awmod@divisor+1,w
  4868  1BB7  1903               	btfsc	3,2
  4869  1BB8  2BBA               	goto	u6051
  4870  1BB9  2BBB               	goto	u6050
  4871  1BBA                     u6051:
  4872  1BBA  2BEA               	goto	l3824
  4873  1BBB                     u6050:
  4874  1BBB                     l3808:
  4875  1BBB  01A0               	clrf	___awmod@counter
  4876  1BBC  0AA0               	incf	___awmod@counter,f
  4877  1BBD  2BC9               	goto	l3814
  4878  1BBE                     l3810:
  4879  1BBE  3001               	movlw	1
  4880  1BBF                     u6065:
  4881  1BBF  1003               	clrc
  4882  1BC0  0DF3               	rlf	___awmod@divisor,f
  4883  1BC1  0DF4               	rlf	___awmod@divisor+1,f
  4884  1BC2  3EFF               	addlw	-1
  4885  1BC3  1D03               	skipz
  4886  1BC4  2BBF               	goto	u6065
  4887  1BC5                     l3812:
  4888  1BC5  3001               	movlw	1
  4889  1BC6  00F7               	movwf	??___awmod
  4890  1BC7  0877               	movf	??___awmod,w
  4891  1BC8  07A0               	addwf	___awmod@counter,f
  4892  1BC9                     l3814:
  4893  1BC9  1FF4               	btfss	___awmod@divisor+1,7
  4894  1BCA  2BCC               	goto	u6071
  4895  1BCB  2BCD               	goto	u6070
  4896  1BCC                     u6071:
  4897  1BCC  2BBE               	goto	l3810
  4898  1BCD                     u6070:
  4899  1BCD                     l3816:
  4900  1BCD  0874               	movf	___awmod@divisor+1,w
  4901  1BCE  0276               	subwf	___awmod@dividend+1,w
  4902  1BCF  1D03               	skipz
  4903  1BD0  2BD3               	goto	u6085
  4904  1BD1  0873               	movf	___awmod@divisor,w
  4905  1BD2  0275               	subwf	___awmod@dividend,w
  4906  1BD3                     u6085:
  4907  1BD3  1C03               	skipc
  4908  1BD4  2BD6               	goto	u6081
  4909  1BD5  2BD7               	goto	u6080
  4910  1BD6                     u6081:
  4911  1BD6  2BDD               	goto	l3820
  4912  1BD7                     u6080:
  4913  1BD7                     l3818:
  4914  1BD7  0873               	movf	___awmod@divisor,w
  4915  1BD8  02F5               	subwf	___awmod@dividend,f
  4916  1BD9  0874               	movf	___awmod@divisor+1,w
  4917  1BDA  1C03               	skipc
  4918  1BDB  03F6               	decf	___awmod@dividend+1,f
  4919  1BDC  02F6               	subwf	___awmod@dividend+1,f
  4920  1BDD                     l3820:
  4921  1BDD  3001               	movlw	1
  4922  1BDE                     u6095:
  4923  1BDE  1003               	clrc
  4924  1BDF  0CF4               	rrf	___awmod@divisor+1,f
  4925  1BE0  0CF3               	rrf	___awmod@divisor,f
  4926  1BE1  3EFF               	addlw	-1
  4927  1BE2  1D03               	skipz
  4928  1BE3  2BDE               	goto	u6095
  4929  1BE4                     l3822:
  4930  1BE4  3001               	movlw	1
  4931  1BE5  02A0               	subwf	___awmod@counter,f
  4932  1BE6  1D03               	btfss	3,2
  4933  1BE7  2BE9               	goto	u6101
  4934  1BE8  2BEA               	goto	u6100
  4935  1BE9                     u6101:
  4936  1BE9  2BCD               	goto	l3816
  4937  1BEA                     u6100:
  4938  1BEA                     l3824:
  4939  1BEA  0821               	movf	___awmod@sign,w
  4940  1BEB  1903               	btfsc	3,2
  4941  1BEC  2BEE               	goto	u6111
  4942  1BED  2BEF               	goto	u6110
  4943  1BEE                     u6111:
  4944  1BEE  2BF4               	goto	l3828
  4945  1BEF                     u6110:
  4946  1BEF                     l3826:
  4947  1BEF  09F5               	comf	___awmod@dividend,f
  4948  1BF0  09F6               	comf	___awmod@dividend+1,f
  4949  1BF1  0AF5               	incf	___awmod@dividend,f
  4950  1BF2  1903               	skipnz
  4951  1BF3  0AF6               	incf	___awmod@dividend+1,f
  4952  1BF4                     l3828:
  4953  1BF4  0876               	movf	___awmod@dividend+1,w
  4954  1BF5  00F4               	movwf	?___awmod+1
  4955  1BF6  0875               	movf	___awmod@dividend,w
  4956  1BF7  00F3               	movwf	?___awmod
  4957  1BF8                     l578:
  4958  1BF8  0008               	return
  4959  1BF9                     __end_of___awmod:
  4960                           
  4961                           	psect	text6
  4962  1C61                     __ptext6:	
  4963 ;; *************** function ___awdiv *****************
  4964 ;; Defined at:
  4965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  divisor         2    2[BANK0 ] int 
  4968 ;;  dividend        2    4[BANK0 ] int 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  quotient        2    9[BANK0 ] int 
  4971 ;;  sign            1    8[BANK0 ] unsigned char 
  4972 ;;  counter         1    7[BANK0 ] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  2    2[BANK0 ] int 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4982 ;;      Params:         0       4       0       0       0
  4983 ;;      Locals:         0       4       0       0       0
  4984 ;;      Temps:          0       1       0       0       0
  4985 ;;      Totals:         0       9       0       0       0
  4986 ;;Total ram usage:        9 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    2
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_scale
  4993 ;;		_sprintf
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           
  4998                           ;psect for function ___awdiv
  4999  1C61                     ___awdiv:
  5000  1C61                     l3750:	
  5001                           ;incstack = 0
  5002                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5003                           
  5004  1C61  1283               	bcf	3,5	;RP0=0, select bank0
  5005  1C62  1303               	bcf	3,6	;RP1=0, select bank0
  5006  1C63  01A8               	clrf	___awdiv@sign
  5007  1C64                     l3752:
  5008  1C64  1FA3               	btfss	___awdiv@divisor+1,7
  5009  1C65  2C67               	goto	u5931
  5010  1C66  2C68               	goto	u5930
  5011  1C67                     u5931:
  5012  1C67  2C6F               	goto	l3758
  5013  1C68                     u5930:
  5014  1C68                     l3754:
  5015  1C68  09A2               	comf	___awdiv@divisor,f
  5016  1C69  09A3               	comf	___awdiv@divisor+1,f
  5017  1C6A  0AA2               	incf	___awdiv@divisor,f
  5018  1C6B  1903               	skipnz
  5019  1C6C  0AA3               	incf	___awdiv@divisor+1,f
  5020  1C6D                     l3756:
  5021  1C6D  01A8               	clrf	___awdiv@sign
  5022  1C6E  0AA8               	incf	___awdiv@sign,f
  5023  1C6F                     l3758:
  5024  1C6F  1FA5               	btfss	___awdiv@dividend+1,7
  5025  1C70  2C72               	goto	u5941
  5026  1C71  2C73               	goto	u5940
  5027  1C72                     u5941:
  5028  1C72  2C7C               	goto	l3764
  5029  1C73                     u5940:
  5030  1C73                     l3760:
  5031  1C73  09A4               	comf	___awdiv@dividend,f
  5032  1C74  09A5               	comf	___awdiv@dividend+1,f
  5033  1C75  0AA4               	incf	___awdiv@dividend,f
  5034  1C76  1903               	skipnz
  5035  1C77  0AA5               	incf	___awdiv@dividend+1,f
  5036  1C78                     l3762:
  5037  1C78  3001               	movlw	1
  5038  1C79  00A6               	movwf	??___awdiv
  5039  1C7A  0826               	movf	??___awdiv,w
  5040  1C7B  06A8               	xorwf	___awdiv@sign,f
  5041  1C7C                     l3764:
  5042  1C7C  01A9               	clrf	___awdiv@quotient
  5043  1C7D  01AA               	clrf	___awdiv@quotient+1
  5044  1C7E                     l3766:
  5045  1C7E  0822               	movf	___awdiv@divisor,w
  5046  1C7F  0423               	iorwf	___awdiv@divisor+1,w
  5047  1C80  1903               	btfsc	3,2
  5048  1C81  2C83               	goto	u5951
  5049  1C82  2C84               	goto	u5950
  5050  1C83                     u5951:
  5051  1C83  2CBB               	goto	l3786
  5052  1C84                     u5950:
  5053  1C84                     l3768:
  5054  1C84  01A7               	clrf	___awdiv@counter
  5055  1C85  0AA7               	incf	___awdiv@counter,f
  5056  1C86  2C92               	goto	l3774
  5057  1C87                     l3770:
  5058  1C87  3001               	movlw	1
  5059  1C88                     u5965:
  5060  1C88  1003               	clrc
  5061  1C89  0DA2               	rlf	___awdiv@divisor,f
  5062  1C8A  0DA3               	rlf	___awdiv@divisor+1,f
  5063  1C8B  3EFF               	addlw	-1
  5064  1C8C  1D03               	skipz
  5065  1C8D  2C88               	goto	u5965
  5066  1C8E                     l3772:
  5067  1C8E  3001               	movlw	1
  5068  1C8F  00A6               	movwf	??___awdiv
  5069  1C90  0826               	movf	??___awdiv,w
  5070  1C91  07A7               	addwf	___awdiv@counter,f
  5071  1C92                     l3774:
  5072  1C92  1FA3               	btfss	___awdiv@divisor+1,7
  5073  1C93  2C95               	goto	u5971
  5074  1C94  2C96               	goto	u5970
  5075  1C95                     u5971:
  5076  1C95  2C87               	goto	l3770
  5077  1C96                     u5970:
  5078  1C96                     l3776:
  5079  1C96  3001               	movlw	1
  5080  1C97                     u5985:
  5081  1C97  1003               	clrc
  5082  1C98  0DA9               	rlf	___awdiv@quotient,f
  5083  1C99  0DAA               	rlf	___awdiv@quotient+1,f
  5084  1C9A  3EFF               	addlw	-1
  5085  1C9B  1D03               	skipz
  5086  1C9C  2C97               	goto	u5985
  5087  1C9D  0823               	movf	___awdiv@divisor+1,w
  5088  1C9E  0225               	subwf	___awdiv@dividend+1,w
  5089  1C9F  1D03               	skipz
  5090  1CA0  2CA3               	goto	u5995
  5091  1CA1  0822               	movf	___awdiv@divisor,w
  5092  1CA2  0224               	subwf	___awdiv@dividend,w
  5093  1CA3                     u5995:
  5094  1CA3  1C03               	skipc
  5095  1CA4  2CA6               	goto	u5991
  5096  1CA5  2CA7               	goto	u5990
  5097  1CA6                     u5991:
  5098  1CA6  2CAE               	goto	l3782
  5099  1CA7                     u5990:
  5100  1CA7                     l3778:
  5101  1CA7  0822               	movf	___awdiv@divisor,w
  5102  1CA8  02A4               	subwf	___awdiv@dividend,f
  5103  1CA9  0823               	movf	___awdiv@divisor+1,w
  5104  1CAA  1C03               	skipc
  5105  1CAB  03A5               	decf	___awdiv@dividend+1,f
  5106  1CAC  02A5               	subwf	___awdiv@dividend+1,f
  5107  1CAD                     l3780:
  5108  1CAD  1429               	bsf	___awdiv@quotient,0
  5109  1CAE                     l3782:
  5110  1CAE  3001               	movlw	1
  5111  1CAF                     u6005:
  5112  1CAF  1003               	clrc
  5113  1CB0  0CA3               	rrf	___awdiv@divisor+1,f
  5114  1CB1  0CA2               	rrf	___awdiv@divisor,f
  5115  1CB2  3EFF               	addlw	-1
  5116  1CB3  1D03               	skipz
  5117  1CB4  2CAF               	goto	u6005
  5118  1CB5                     l3784:
  5119  1CB5  3001               	movlw	1
  5120  1CB6  02A7               	subwf	___awdiv@counter,f
  5121  1CB7  1D03               	btfss	3,2
  5122  1CB8  2CBA               	goto	u6011
  5123  1CB9  2CBB               	goto	u6010
  5124  1CBA                     u6011:
  5125  1CBA  2C96               	goto	l3776
  5126  1CBB                     u6010:
  5127  1CBB                     l3786:
  5128  1CBB  0828               	movf	___awdiv@sign,w
  5129  1CBC  1903               	btfsc	3,2
  5130  1CBD  2CBF               	goto	u6021
  5131  1CBE  2CC0               	goto	u6020
  5132  1CBF                     u6021:
  5133  1CBF  2CC5               	goto	l3790
  5134  1CC0                     u6020:
  5135  1CC0                     l3788:
  5136  1CC0  09A9               	comf	___awdiv@quotient,f
  5137  1CC1  09AA               	comf	___awdiv@quotient+1,f
  5138  1CC2  0AA9               	incf	___awdiv@quotient,f
  5139  1CC3  1903               	skipnz
  5140  1CC4  0AAA               	incf	___awdiv@quotient+1,f
  5141  1CC5                     l3790:
  5142  1CC5  082A               	movf	___awdiv@quotient+1,w
  5143  1CC6  00A3               	movwf	?___awdiv+1
  5144  1CC7  0829               	movf	___awdiv@quotient,w
  5145  1CC8  00A2               	movwf	?___awdiv
  5146  1CC9                     l565:
  5147  1CC9  0008               	return
  5148  1CCA                     __end_of___awdiv:
  5149                           
  5150                           	psect	text7
  5151  136B                     __ptext7:	
  5152 ;; *************** function _fround *****************
  5153 ;; Defined at:
  5154 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  prec            1    wreg     unsigned char 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  prec            1   56[BANK0 ] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  4   37[BANK0 ] unsigned char 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5168 ;;      Params:         0       4       0       0       0
  5169 ;;      Locals:         0       9       0       0       0
  5170 ;;      Temps:          0       7       0       0       0
  5171 ;;      Totals:         0      20       0       0       0
  5172 ;;Total ram usage:       20 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    4
  5175 ;; This function calls:
  5176 ;;		___flmul
  5177 ;;		___lwdiv
  5178 ;;		___lwmod
  5179 ;; This function is called by:
  5180 ;;		_sprintf
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           
  5185                           ;psect for function _fround
  5186  136B                     _fround:
  5187                           
  5188                           ;incstack = 0
  5189                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5190                           ;fround@prec stored from wreg
  5191  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5192  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5193  136D  00D8               	movwf	fround@prec
  5194  136E                     l3908:
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5197  136E  306E               	movlw	110
  5198  136F  0258               	subwf	fround@prec,w
  5199  1370  1C03               	skipc
  5200  1371  2B73               	goto	u6251
  5201  1372  2B74               	goto	u6250
  5202  1373                     u6251:
  5203  1373  2C83               	goto	l3916
  5204  1374                     u6250:
  5205  1374                     l3910:
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5208  1374  303F               	movlw	63
  5209  1375  00AE               	movwf	___flmul@b+3
  5210  1376  3000               	movlw	0
  5211  1377  00AD               	movwf	___flmul@b+2
  5212  1378  3000               	movlw	0
  5213  1379  00AC               	movwf	___flmul@b+1
  5214  137A  3000               	movlw	0
  5215  137B  00AB               	movwf	___flmul@b
  5216  137C  3064               	movlw	100
  5217  137D  00A1               	movwf	___lwdiv@divisor
  5218  137E  3000               	movlw	0
  5219  137F  00A2               	movwf	___lwdiv@divisor+1
  5220  1380  0858               	movf	fround@prec,w
  5221  1381  00C9               	movwf	??_fround
  5222  1382  01CA               	clrf	??_fround+1
  5223  1383  0849               	movf	??_fround,w
  5224  1384  00A3               	movwf	___lwdiv@dividend
  5225  1385  084A               	movf	??_fround+1,w
  5226  1386  00A4               	movwf	___lwdiv@dividend+1
  5227  1387  160A  158A  2262  160A  118A  	fcall	___lwdiv
  5228  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5229  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5230  138E  0821               	movf	?___lwdiv,w
  5231  138F  00CB               	movwf	??_fround+2
  5232  1390  3001               	movlw	1
  5233  1391                     u6265:
  5234  1391  1003               	clrc
  5235  1392  0DCB               	rlf	??_fround+2,f
  5236  1393  3EFF               	addlw	-1
  5237  1394  1D03               	skipz
  5238  1395  2B91               	goto	u6265
  5239  1396  1003               	clrc
  5240  1397  0D4B               	rlf	??_fround+2,w
  5241  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5242  1399  0084               	movwf	4
  5243  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  5244  139F  00CC               	movwf	??_fround+3
  5245  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  5246  13A5  00CD               	movwf	??_fround+4
  5247  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  5248  13AB  00CE               	movwf	??_fround+5
  5249  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  5250  13B1  00CF               	movwf	??_fround+6
  5251  13B2  084F               	movf	??_fround+6,w
  5252  13B3  00B2               	movwf	___flmul@a+3
  5253  13B4  084E               	movf	??_fround+5,w
  5254  13B5  00B1               	movwf	___flmul@a+2
  5255  13B6  084D               	movf	??_fround+4,w
  5256  13B7  00B0               	movwf	___flmul@a+1
  5257  13B8  084C               	movf	??_fround+3,w
  5258  13B9  00AF               	movwf	___flmul@a
  5259  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5260  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5261  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5262  13C1  082E               	movf	?___flmul+3,w
  5263  13C2  00D7               	movwf	_fround$1107+3
  5264  13C3  082D               	movf	?___flmul+2,w
  5265  13C4  00D6               	movwf	_fround$1107+2
  5266  13C5  082C               	movf	?___flmul+1,w
  5267  13C6  00D5               	movwf	_fround$1107+1
  5268  13C7  082B               	movf	?___flmul,w
  5269  13C8  00D4               	movwf	_fround$1107
  5270                           
  5271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5272  13C9  300A               	movlw	10
  5273  13CA  00A1               	movwf	___lwdiv@divisor
  5274  13CB  3000               	movlw	0
  5275  13CC  00A2               	movwf	___lwdiv@divisor+1
  5276  13CD  0858               	movf	fround@prec,w
  5277  13CE  00C9               	movwf	??_fround
  5278  13CF  01CA               	clrf	??_fround+1
  5279  13D0  0849               	movf	??_fround,w
  5280  13D1  00F5               	movwf	___lwmod@dividend
  5281  13D2  084A               	movf	??_fround+1,w
  5282  13D3  00F6               	movwf	___lwmod@dividend+1
  5283  13D4  3064               	movlw	100
  5284  13D5  00F3               	movwf	___lwmod@divisor
  5285  13D6  3000               	movlw	0
  5286  13D7  00F4               	movwf	___lwmod@divisor+1
  5287  13D8  160A  158A  21E8  160A  118A  	fcall	___lwmod
  5288  13DD  0874               	movf	?___lwmod+1,w
  5289  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5290  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5291  13E0  00A4               	movwf	___lwdiv@dividend+1
  5292  13E1  0873               	movf	?___lwmod,w
  5293  13E2  00A3               	movwf	___lwdiv@dividend
  5294  13E3  160A  158A  2262  160A  118A  	fcall	___lwdiv
  5295  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5296  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5297  13EA  0821               	movf	?___lwdiv,w
  5298  13EB  00CB               	movwf	??_fround+2
  5299  13EC  3001               	movlw	1
  5300  13ED                     u6275:
  5301  13ED  1003               	clrc
  5302  13EE  0DCB               	rlf	??_fround+2,f
  5303  13EF  3EFF               	addlw	-1
  5304  13F0  1D03               	skipz
  5305  13F1  2BED               	goto	u6275
  5306  13F2  1003               	clrc
  5307  13F3  0D4B               	rlf	??_fround+2,w
  5308  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5309  13F5  0084               	movwf	4
  5310  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5311  13FB  00CC               	movwf	??_fround+3
  5312  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5313  1401  00CD               	movwf	??_fround+4
  5314  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5315  1407  00CE               	movwf	??_fround+5
  5316  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5317  140D  00CF               	movwf	??_fround+6
  5318  140E  084F               	movf	??_fround+6,w
  5319  140F  00AE               	movwf	___flmul@b+3
  5320  1410  084E               	movf	??_fround+5,w
  5321  1411  00AD               	movwf	___flmul@b+2
  5322  1412  084D               	movf	??_fround+4,w
  5323  1413  00AC               	movwf	___flmul@b+1
  5324  1414  084C               	movf	??_fround+3,w
  5325  1415  00AB               	movwf	___flmul@b
  5326  1416  0857               	movf	_fround$1107+3,w
  5327  1417  00B2               	movwf	___flmul@a+3
  5328  1418  0856               	movf	_fround$1107+2,w
  5329  1419  00B1               	movwf	___flmul@a+2
  5330  141A  0855               	movf	_fround$1107+1,w
  5331  141B  00B0               	movwf	___flmul@a+1
  5332  141C  0854               	movf	_fround$1107,w
  5333  141D  00AF               	movwf	___flmul@a
  5334  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5335  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5336  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5337  1425  082E               	movf	?___flmul+3,w
  5338  1426  00D3               	movwf	_fround$1108+3
  5339  1427  082D               	movf	?___flmul+2,w
  5340  1428  00D2               	movwf	_fround$1108+2
  5341  1429  082C               	movf	?___flmul+1,w
  5342  142A  00D1               	movwf	_fround$1108+1
  5343  142B  082B               	movf	?___flmul,w
  5344  142C  00D0               	movwf	_fround$1108
  5345                           
  5346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5347  142D  300A               	movlw	10
  5348  142E  00F3               	movwf	___lwmod@divisor
  5349  142F  3000               	movlw	0
  5350  1430  00F4               	movwf	___lwmod@divisor+1
  5351  1431  0858               	movf	fround@prec,w
  5352  1432  00C9               	movwf	??_fround
  5353  1433  01CA               	clrf	??_fround+1
  5354  1434  0849               	movf	??_fround,w
  5355  1435  00F5               	movwf	___lwmod@dividend
  5356  1436  084A               	movf	??_fround+1,w
  5357  1437  00F6               	movwf	___lwmod@dividend+1
  5358  1438  160A  158A  21E8  160A  118A  	fcall	___lwmod
  5359  143D  0873               	movf	?___lwmod,w
  5360  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5361  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5362  1440  00CB               	movwf	??_fround+2
  5363  1441  3001               	movlw	1
  5364  1442                     u6285:
  5365  1442  1003               	clrc
  5366  1443  0DCB               	rlf	??_fround+2,f
  5367  1444  3EFF               	addlw	-1
  5368  1445  1D03               	skipz
  5369  1446  2C42               	goto	u6285
  5370  1447  1003               	clrc
  5371  1448  0D4B               	rlf	??_fround+2,w
  5372  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5373  144A  0084               	movwf	4
  5374  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5375  1450  00CC               	movwf	??_fround+3
  5376  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5377  1456  00CD               	movwf	??_fround+4
  5378  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5379  145C  00CE               	movwf	??_fround+5
  5380  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5381  1462  00CF               	movwf	??_fround+6
  5382  1463  084F               	movf	??_fround+6,w
  5383  1464  00AE               	movwf	___flmul@b+3
  5384  1465  084E               	movf	??_fround+5,w
  5385  1466  00AD               	movwf	___flmul@b+2
  5386  1467  084D               	movf	??_fround+4,w
  5387  1468  00AC               	movwf	___flmul@b+1
  5388  1469  084C               	movf	??_fround+3,w
  5389  146A  00AB               	movwf	___flmul@b
  5390  146B  0853               	movf	_fround$1108+3,w
  5391  146C  00B2               	movwf	___flmul@a+3
  5392  146D  0852               	movf	_fround$1108+2,w
  5393  146E  00B1               	movwf	___flmul@a+2
  5394  146F  0851               	movf	_fround$1108+1,w
  5395  1470  00B0               	movwf	___flmul@a+1
  5396  1471  0850               	movf	_fround$1108,w
  5397  1472  00AF               	movwf	___flmul@a
  5398  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5399  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5400  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5401  147A  082E               	movf	?___flmul+3,w
  5402  147B  00C8               	movwf	?_fround+3
  5403  147C  082D               	movf	?___flmul+2,w
  5404  147D  00C7               	movwf	?_fround+2
  5405  147E  082C               	movf	?___flmul+1,w
  5406  147F  00C6               	movwf	?_fround+1
  5407  1480  082B               	movf	?___flmul,w
  5408  1481  00C5               	movwf	?_fround
  5409  1482  2D77               	goto	l336
  5410  1483                     l3916:
  5411  1483  300B               	movlw	11
  5412  1484  0258               	subwf	fround@prec,w
  5413  1485  1C03               	skipc
  5414  1486  2C88               	goto	u6291
  5415  1487  2C89               	goto	u6290
  5416  1488                     u6291:
  5417  1488  2D34               	goto	l3922
  5418  1489                     u6290:
  5419  1489                     l3918:
  5420                           
  5421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5422  1489  303F               	movlw	63
  5423  148A  00AE               	movwf	___flmul@b+3
  5424  148B  3000               	movlw	0
  5425  148C  00AD               	movwf	___flmul@b+2
  5426  148D  3000               	movlw	0
  5427  148E  00AC               	movwf	___flmul@b+1
  5428  148F  3000               	movlw	0
  5429  1490  00AB               	movwf	___flmul@b
  5430  1491  300A               	movlw	10
  5431  1492  00A1               	movwf	___lwdiv@divisor
  5432  1493  3000               	movlw	0
  5433  1494  00A2               	movwf	___lwdiv@divisor+1
  5434  1495  0858               	movf	fround@prec,w
  5435  1496  00C9               	movwf	??_fround
  5436  1497  01CA               	clrf	??_fround+1
  5437  1498  0849               	movf	??_fround,w
  5438  1499  00A3               	movwf	___lwdiv@dividend
  5439  149A  084A               	movf	??_fround+1,w
  5440  149B  00A4               	movwf	___lwdiv@dividend+1
  5441  149C  160A  158A  2262  160A  118A  	fcall	___lwdiv
  5442  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5443  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5444  14A3  0821               	movf	?___lwdiv,w
  5445  14A4  00CB               	movwf	??_fround+2
  5446  14A5  3001               	movlw	1
  5447  14A6                     u6305:
  5448  14A6  1003               	clrc
  5449  14A7  0DCB               	rlf	??_fround+2,f
  5450  14A8  3EFF               	addlw	-1
  5451  14A9  1D03               	skipz
  5452  14AA  2CA6               	goto	u6305
  5453  14AB  1003               	clrc
  5454  14AC  0D4B               	rlf	??_fround+2,w
  5455  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5456  14AE  0084               	movwf	4
  5457  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5458  14B4  00CC               	movwf	??_fround+3
  5459  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5460  14BA  00CD               	movwf	??_fround+4
  5461  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5462  14C0  00CE               	movwf	??_fround+5
  5463  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5464  14C6  00CF               	movwf	??_fround+6
  5465  14C7  084F               	movf	??_fround+6,w
  5466  14C8  00B2               	movwf	___flmul@a+3
  5467  14C9  084E               	movf	??_fround+5,w
  5468  14CA  00B1               	movwf	___flmul@a+2
  5469  14CB  084D               	movf	??_fround+4,w
  5470  14CC  00B0               	movwf	___flmul@a+1
  5471  14CD  084C               	movf	??_fround+3,w
  5472  14CE  00AF               	movwf	___flmul@a
  5473  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5474  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5475  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5476  14D6  082E               	movf	?___flmul+3,w
  5477  14D7  00D7               	movwf	_fround$1107+3
  5478  14D8  082D               	movf	?___flmul+2,w
  5479  14D9  00D6               	movwf	_fround$1107+2
  5480  14DA  082C               	movf	?___flmul+1,w
  5481  14DB  00D5               	movwf	_fround$1107+1
  5482  14DC  082B               	movf	?___flmul,w
  5483  14DD  00D4               	movwf	_fround$1107
  5484                           
  5485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5486  14DE  300A               	movlw	10
  5487  14DF  00F3               	movwf	___lwmod@divisor
  5488  14E0  3000               	movlw	0
  5489  14E1  00F4               	movwf	___lwmod@divisor+1
  5490  14E2  0858               	movf	fround@prec,w
  5491  14E3  00C9               	movwf	??_fround
  5492  14E4  01CA               	clrf	??_fround+1
  5493  14E5  0849               	movf	??_fround,w
  5494  14E6  00F5               	movwf	___lwmod@dividend
  5495  14E7  084A               	movf	??_fround+1,w
  5496  14E8  00F6               	movwf	___lwmod@dividend+1
  5497  14E9  160A  158A  21E8  160A  118A  	fcall	___lwmod
  5498  14EE  0873               	movf	?___lwmod,w
  5499  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5500  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5501  14F1  00CB               	movwf	??_fround+2
  5502  14F2  3001               	movlw	1
  5503  14F3                     u6315:
  5504  14F3  1003               	clrc
  5505  14F4  0DCB               	rlf	??_fround+2,f
  5506  14F5  3EFF               	addlw	-1
  5507  14F6  1D03               	skipz
  5508  14F7  2CF3               	goto	u6315
  5509  14F8  1003               	clrc
  5510  14F9  0D4B               	rlf	??_fround+2,w
  5511  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5512  14FB  0084               	movwf	4
  5513  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5514  1501  00CC               	movwf	??_fround+3
  5515  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5516  1507  00CD               	movwf	??_fround+4
  5517  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5518  150D  00CE               	movwf	??_fround+5
  5519  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5520  1513  00CF               	movwf	??_fround+6
  5521  1514  084F               	movf	??_fround+6,w
  5522  1515  00AE               	movwf	___flmul@b+3
  5523  1516  084E               	movf	??_fround+5,w
  5524  1517  00AD               	movwf	___flmul@b+2
  5525  1518  084D               	movf	??_fround+4,w
  5526  1519  00AC               	movwf	___flmul@b+1
  5527  151A  084C               	movf	??_fround+3,w
  5528  151B  00AB               	movwf	___flmul@b
  5529  151C  0857               	movf	_fround$1107+3,w
  5530  151D  00B2               	movwf	___flmul@a+3
  5531  151E  0856               	movf	_fround$1107+2,w
  5532  151F  00B1               	movwf	___flmul@a+2
  5533  1520  0855               	movf	_fround$1107+1,w
  5534  1521  00B0               	movwf	___flmul@a+1
  5535  1522  0854               	movf	_fround$1107,w
  5536  1523  00AF               	movwf	___flmul@a
  5537  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5538  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5539  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5540  152B  082E               	movf	?___flmul+3,w
  5541  152C  00C8               	movwf	?_fround+3
  5542  152D  082D               	movf	?___flmul+2,w
  5543  152E  00C7               	movwf	?_fround+2
  5544  152F  082C               	movf	?___flmul+1,w
  5545  1530  00C6               	movwf	?_fround+1
  5546  1531  082B               	movf	?___flmul,w
  5547  1532  00C5               	movwf	?_fround
  5548  1533  2D77               	goto	l336
  5549  1534                     l3922:
  5550                           
  5551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5552  1534  303F               	movlw	63
  5553  1535  00AE               	movwf	___flmul@b+3
  5554  1536  3000               	movlw	0
  5555  1537  00AD               	movwf	___flmul@b+2
  5556  1538  3000               	movlw	0
  5557  1539  00AC               	movwf	___flmul@b+1
  5558  153A  3000               	movlw	0
  5559  153B  00AB               	movwf	___flmul@b
  5560  153C  0858               	movf	fround@prec,w
  5561  153D  00C9               	movwf	??_fround
  5562  153E  3001               	movlw	1
  5563  153F                     u6325:
  5564  153F  1003               	clrc
  5565  1540  0DC9               	rlf	??_fround,f
  5566  1541  3EFF               	addlw	-1
  5567  1542  1D03               	skipz
  5568  1543  2D3F               	goto	u6325
  5569  1544  1003               	clrc
  5570  1545  0D49               	rlf	??_fround,w
  5571  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5572  1547  0084               	movwf	4
  5573  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5574  154D  00CA               	movwf	??_fround+1
  5575  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5576  1553  00CB               	movwf	??_fround+2
  5577  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5578  1559  00CC               	movwf	??_fround+3
  5579  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5580  155F  00CD               	movwf	??_fround+4
  5581  1560  084D               	movf	??_fround+4,w
  5582  1561  00B2               	movwf	___flmul@a+3
  5583  1562  084C               	movf	??_fround+3,w
  5584  1563  00B1               	movwf	___flmul@a+2
  5585  1564  084B               	movf	??_fround+2,w
  5586  1565  00B0               	movwf	___flmul@a+1
  5587  1566  084A               	movf	??_fround+1,w
  5588  1567  00AF               	movwf	___flmul@a
  5589  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5590  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5591  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5592  156F  082E               	movf	?___flmul+3,w
  5593  1570  00C8               	movwf	?_fround+3
  5594  1571  082D               	movf	?___flmul+2,w
  5595  1572  00C7               	movwf	?_fround+2
  5596  1573  082C               	movf	?___flmul+1,w
  5597  1574  00C6               	movwf	?_fround+1
  5598  1575  082B               	movf	?___flmul,w
  5599  1576  00C5               	movwf	?_fround
  5600  1577                     l336:
  5601  1577  0008               	return
  5602  1578                     __end_of_fround:
  5603                           
  5604                           	psect	text8
  5605  19E8                     __ptext8:	
  5606 ;; *************** function ___lwmod *****************
  5607 ;; Defined at:
  5608 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  divisor         2    3[COMMON] unsigned int 
  5611 ;;  dividend        2    5[COMMON] unsigned int 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  counter         1    0[BANK0 ] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  2    3[COMMON] unsigned int 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         4       0       0       0       0
  5624 ;;      Locals:         0       1       0       0       0
  5625 ;;      Temps:          1       0       0       0       0
  5626 ;;      Totals:         5       1       0       0       0
  5627 ;;Total ram usage:        6 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    2
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_fround
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           
  5638                           ;psect for function ___lwmod
  5639  19E8                     ___lwmod:
  5640  19E8                     l3858:	
  5641                           ;incstack = 0
  5642                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5643                           
  5644  19E8  0873               	movf	___lwmod@divisor,w
  5645  19E9  0474               	iorwf	___lwmod@divisor+1,w
  5646  19EA  1903               	btfsc	3,2
  5647  19EB  29ED               	goto	u6191
  5648  19EC  29EE               	goto	u6190
  5649  19ED                     u6191:
  5650  19ED  2A1F               	goto	l3876
  5651  19EE                     u6190:
  5652  19EE                     l3860:
  5653  19EE  1283               	bcf	3,5	;RP0=0, select bank0
  5654  19EF  1303               	bcf	3,6	;RP1=0, select bank0
  5655  19F0  01A0               	clrf	___lwmod@counter
  5656  19F1  0AA0               	incf	___lwmod@counter,f
  5657  19F2  29FE               	goto	l3866
  5658  19F3                     l3862:
  5659  19F3  3001               	movlw	1
  5660  19F4                     u6205:
  5661  19F4  1003               	clrc
  5662  19F5  0DF3               	rlf	___lwmod@divisor,f
  5663  19F6  0DF4               	rlf	___lwmod@divisor+1,f
  5664  19F7  3EFF               	addlw	-1
  5665  19F8  1D03               	skipz
  5666  19F9  29F4               	goto	u6205
  5667  19FA                     l3864:
  5668  19FA  3001               	movlw	1
  5669  19FB  00F7               	movwf	??___lwmod
  5670  19FC  0877               	movf	??___lwmod,w
  5671  19FD  07A0               	addwf	___lwmod@counter,f
  5672  19FE                     l3866:
  5673  19FE  1FF4               	btfss	___lwmod@divisor+1,7
  5674  19FF  2A01               	goto	u6211
  5675  1A00  2A02               	goto	u6210
  5676  1A01                     u6211:
  5677  1A01  29F3               	goto	l3862
  5678  1A02                     u6210:
  5679  1A02                     l3868:
  5680  1A02  0874               	movf	___lwmod@divisor+1,w
  5681  1A03  0276               	subwf	___lwmod@dividend+1,w
  5682  1A04  1D03               	skipz
  5683  1A05  2A08               	goto	u6225
  5684  1A06  0873               	movf	___lwmod@divisor,w
  5685  1A07  0275               	subwf	___lwmod@dividend,w
  5686  1A08                     u6225:
  5687  1A08  1C03               	skipc
  5688  1A09  2A0B               	goto	u6221
  5689  1A0A  2A0C               	goto	u6220
  5690  1A0B                     u6221:
  5691  1A0B  2A12               	goto	l3872
  5692  1A0C                     u6220:
  5693  1A0C                     l3870:
  5694  1A0C  0873               	movf	___lwmod@divisor,w
  5695  1A0D  02F5               	subwf	___lwmod@dividend,f
  5696  1A0E  0874               	movf	___lwmod@divisor+1,w
  5697  1A0F  1C03               	skipc
  5698  1A10  03F6               	decf	___lwmod@dividend+1,f
  5699  1A11  02F6               	subwf	___lwmod@dividend+1,f
  5700  1A12                     l3872:
  5701  1A12  3001               	movlw	1
  5702  1A13                     u6235:
  5703  1A13  1003               	clrc
  5704  1A14  0CF4               	rrf	___lwmod@divisor+1,f
  5705  1A15  0CF3               	rrf	___lwmod@divisor,f
  5706  1A16  3EFF               	addlw	-1
  5707  1A17  1D03               	skipz
  5708  1A18  2A13               	goto	u6235
  5709  1A19                     l3874:
  5710  1A19  3001               	movlw	1
  5711  1A1A  02A0               	subwf	___lwmod@counter,f
  5712  1A1B  1D03               	btfss	3,2
  5713  1A1C  2A1E               	goto	u6241
  5714  1A1D  2A1F               	goto	u6240
  5715  1A1E                     u6241:
  5716  1A1E  2A02               	goto	l3868
  5717  1A1F                     u6240:
  5718  1A1F                     l3876:
  5719  1A1F  0876               	movf	___lwmod@dividend+1,w
  5720  1A20  00F4               	movwf	?___lwmod+1
  5721  1A21  0875               	movf	___lwmod@dividend,w
  5722  1A22  00F3               	movwf	?___lwmod
  5723  1A23                     l728:
  5724  1A23  0008               	return
  5725  1A24                     __end_of___lwmod:
  5726                           
  5727                           	psect	text9
  5728  1A62                     __ptext9:	
  5729 ;; *************** function ___lwdiv *****************
  5730 ;; Defined at:
  5731 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  divisor         2    1[BANK0 ] unsigned int 
  5734 ;;  dividend        2    3[BANK0 ] unsigned int 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  quotient        2    7[BANK0 ] unsigned int 
  5737 ;;  counter         1    6[BANK0 ] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  2    1[BANK0 ] unsigned int 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5747 ;;      Params:         0       4       0       0       0
  5748 ;;      Locals:         0       3       0       0       0
  5749 ;;      Temps:          0       1       0       0       0
  5750 ;;      Totals:         0       8       0       0       0
  5751 ;;Total ram usage:        8 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    2
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_fround
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function ___lwdiv
  5763  1A62                     ___lwdiv:
  5764  1A62                     l3832:	
  5765                           ;incstack = 0
  5766                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5767                           
  5768  1A62  1283               	bcf	3,5	;RP0=0, select bank0
  5769  1A63  1303               	bcf	3,6	;RP1=0, select bank0
  5770  1A64  01A7               	clrf	___lwdiv@quotient
  5771  1A65  01A8               	clrf	___lwdiv@quotient+1
  5772  1A66                     l3834:
  5773  1A66  0821               	movf	___lwdiv@divisor,w
  5774  1A67  0422               	iorwf	___lwdiv@divisor+1,w
  5775  1A68  1903               	btfsc	3,2
  5776  1A69  2A6B               	goto	u6121
  5777  1A6A  2A6C               	goto	u6120
  5778  1A6B                     u6121:
  5779  1A6B  2AA3               	goto	l3854
  5780  1A6C                     u6120:
  5781  1A6C                     l3836:
  5782  1A6C  01A6               	clrf	___lwdiv@counter
  5783  1A6D  0AA6               	incf	___lwdiv@counter,f
  5784  1A6E  2A7A               	goto	l3842
  5785  1A6F                     l3838:
  5786  1A6F  3001               	movlw	1
  5787  1A70                     u6135:
  5788  1A70  1003               	clrc
  5789  1A71  0DA1               	rlf	___lwdiv@divisor,f
  5790  1A72  0DA2               	rlf	___lwdiv@divisor+1,f
  5791  1A73  3EFF               	addlw	-1
  5792  1A74  1D03               	skipz
  5793  1A75  2A70               	goto	u6135
  5794  1A76                     l3840:
  5795  1A76  3001               	movlw	1
  5796  1A77  00A5               	movwf	??___lwdiv
  5797  1A78  0825               	movf	??___lwdiv,w
  5798  1A79  07A6               	addwf	___lwdiv@counter,f
  5799  1A7A                     l3842:
  5800  1A7A  1FA2               	btfss	___lwdiv@divisor+1,7
  5801  1A7B  2A7D               	goto	u6141
  5802  1A7C  2A7E               	goto	u6140
  5803  1A7D                     u6141:
  5804  1A7D  2A6F               	goto	l3838
  5805  1A7E                     u6140:
  5806  1A7E                     l3844:
  5807  1A7E  3001               	movlw	1
  5808  1A7F                     u6155:
  5809  1A7F  1003               	clrc
  5810  1A80  0DA7               	rlf	___lwdiv@quotient,f
  5811  1A81  0DA8               	rlf	___lwdiv@quotient+1,f
  5812  1A82  3EFF               	addlw	-1
  5813  1A83  1D03               	skipz
  5814  1A84  2A7F               	goto	u6155
  5815  1A85  0822               	movf	___lwdiv@divisor+1,w
  5816  1A86  0224               	subwf	___lwdiv@dividend+1,w
  5817  1A87  1D03               	skipz
  5818  1A88  2A8B               	goto	u6165
  5819  1A89  0821               	movf	___lwdiv@divisor,w
  5820  1A8A  0223               	subwf	___lwdiv@dividend,w
  5821  1A8B                     u6165:
  5822  1A8B  1C03               	skipc
  5823  1A8C  2A8E               	goto	u6161
  5824  1A8D  2A8F               	goto	u6160
  5825  1A8E                     u6161:
  5826  1A8E  2A96               	goto	l3850
  5827  1A8F                     u6160:
  5828  1A8F                     l3846:
  5829  1A8F  0821               	movf	___lwdiv@divisor,w
  5830  1A90  02A3               	subwf	___lwdiv@dividend,f
  5831  1A91  0822               	movf	___lwdiv@divisor+1,w
  5832  1A92  1C03               	skipc
  5833  1A93  03A4               	decf	___lwdiv@dividend+1,f
  5834  1A94  02A4               	subwf	___lwdiv@dividend+1,f
  5835  1A95                     l3848:
  5836  1A95  1427               	bsf	___lwdiv@quotient,0
  5837  1A96                     l3850:
  5838  1A96  3001               	movlw	1
  5839  1A97                     u6175:
  5840  1A97  1003               	clrc
  5841  1A98  0CA2               	rrf	___lwdiv@divisor+1,f
  5842  1A99  0CA1               	rrf	___lwdiv@divisor,f
  5843  1A9A  3EFF               	addlw	-1
  5844  1A9B  1D03               	skipz
  5845  1A9C  2A97               	goto	u6175
  5846  1A9D                     l3852:
  5847  1A9D  3001               	movlw	1
  5848  1A9E  02A6               	subwf	___lwdiv@counter,f
  5849  1A9F  1D03               	btfss	3,2
  5850  1AA0  2AA2               	goto	u6181
  5851  1AA1  2AA3               	goto	u6180
  5852  1AA2                     u6181:
  5853  1AA2  2A7E               	goto	l3844
  5854  1AA3                     u6180:
  5855  1AA3                     l3854:
  5856  1AA3  0828               	movf	___lwdiv@quotient+1,w
  5857  1AA4  00A2               	movwf	?___lwdiv+1
  5858  1AA5  0827               	movf	___lwdiv@quotient,w
  5859  1AA6  00A1               	movwf	?___lwdiv
  5860  1AA7                     l718:
  5861  1AA7  0008               	return
  5862  1AA8                     __end_of___lwdiv:
  5863                           
  5864                           	psect	text10
  5865  1F43                     __ptext10:	
  5866 ;; *************** function __tdiv_to_l_ *****************
  5867 ;; Defined at:
  5868 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  f1              4    0[BANK0 ] float 
  5871 ;;  f2              4    4[BANK0 ] float 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  quot            4    8[BANK0 ] unsigned long 
  5874 ;;  exp1            1   13[BANK0 ] unsigned char 
  5875 ;;  cntr            1   12[BANK0 ] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  4    0[BANK0 ] unsigned long 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5885 ;;      Params:         0       8       0       0       0
  5886 ;;      Locals:         0       6       0       0       0
  5887 ;;      Temps:          4       0       0       0       0
  5888 ;;      Totals:         4      14       0       0       0
  5889 ;;Total ram usage:       18 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    2
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_sprintf
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function __tdiv_to_l_
  5901  1F43                     __tdiv_to_l_:
  5902  1F43                     l3966:	
  5903                           ;incstack = 0
  5904                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5905                           
  5906  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  5907  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  5908  1F45  0820               	movf	__tdiv_to_l_@f1,w
  5909  1F46  00F3               	movwf	??__tdiv_to_l_
  5910  1F47  0821               	movf	__tdiv_to_l_@f1+1,w
  5911  1F48  00F4               	movwf	??__tdiv_to_l_+1
  5912  1F49  0822               	movf	__tdiv_to_l_@f1+2,w
  5913  1F4A  00F5               	movwf	??__tdiv_to_l_+2
  5914  1F4B  1003               	clrc
  5915  1F4C  0D74               	rlf	??__tdiv_to_l_+1,w
  5916  1F4D  0D75               	rlf	??__tdiv_to_l_+2,w
  5917  1F4E  00F6               	movwf	??__tdiv_to_l_+3
  5918  1F4F  0876               	movf	??__tdiv_to_l_+3,w
  5919  1F50  00AD               	movwf	__tdiv_to_l_@exp1
  5920  1F51  082D               	movf	__tdiv_to_l_@exp1,w
  5921  1F52  1D03               	btfss	3,2
  5922  1F53  2F55               	goto	u6501
  5923  1F54  2F56               	goto	u6500
  5924  1F55                     u6501:
  5925  1F55  2F5F               	goto	l3972
  5926  1F56                     u6500:
  5927  1F56                     l3968:
  5928  1F56  3000               	movlw	0
  5929  1F57  00A3               	movwf	?__tdiv_to_l_+3
  5930  1F58  3000               	movlw	0
  5931  1F59  00A2               	movwf	?__tdiv_to_l_+2
  5932  1F5A  3000               	movlw	0
  5933  1F5B  00A1               	movwf	?__tdiv_to_l_+1
  5934  1F5C  3000               	movlw	0
  5935  1F5D  00A0               	movwf	?__tdiv_to_l_
  5936  1F5E  2FFF               	goto	l629
  5937  1F5F                     l3972:
  5938  1F5F  0824               	movf	__tdiv_to_l_@f2,w
  5939  1F60  00F3               	movwf	??__tdiv_to_l_
  5940  1F61  0825               	movf	__tdiv_to_l_@f2+1,w
  5941  1F62  00F4               	movwf	??__tdiv_to_l_+1
  5942  1F63  0826               	movf	__tdiv_to_l_@f2+2,w
  5943  1F64  00F5               	movwf	??__tdiv_to_l_+2
  5944  1F65  1003               	clrc
  5945  1F66  0D74               	rlf	??__tdiv_to_l_+1,w
  5946  1F67  0D75               	rlf	??__tdiv_to_l_+2,w
  5947  1F68  00F6               	movwf	??__tdiv_to_l_+3
  5948  1F69  0876               	movf	??__tdiv_to_l_+3,w
  5949  1F6A  00AC               	movwf	__tdiv_to_l_@cntr
  5950  1F6B  082C               	movf	__tdiv_to_l_@cntr,w
  5951  1F6C  1D03               	btfss	3,2
  5952  1F6D  2F6F               	goto	u6511
  5953  1F6E  2F70               	goto	u6510
  5954  1F6F                     u6511:
  5955  1F6F  2F71               	goto	l630
  5956  1F70                     u6510:
  5957  1F70  2F56               	goto	l3968
  5958  1F71                     l630:
  5959  1F71  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5960  1F72                     l3978:
  5961  1F72  30FF               	movlw	255
  5962  1F73  05A0               	andwf	__tdiv_to_l_@f1,f
  5963  1F74  30FF               	movlw	255
  5964  1F75  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5965  1F76  3000               	movlw	0
  5966  1F77  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5967  1F78                     l3980:
  5968  1F78  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5969  1F79  30FF               	movlw	255
  5970  1F7A  05A4               	andwf	__tdiv_to_l_@f2,f
  5971  1F7B  30FF               	movlw	255
  5972  1F7C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5973  1F7D  3000               	movlw	0
  5974  1F7E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5975  1F7F  3000               	movlw	0
  5976  1F80  00AB               	movwf	__tdiv_to_l_@quot+3
  5977  1F81  3000               	movlw	0
  5978  1F82  00AA               	movwf	__tdiv_to_l_@quot+2
  5979  1F83  3000               	movlw	0
  5980  1F84  00A9               	movwf	__tdiv_to_l_@quot+1
  5981  1F85  3000               	movlw	0
  5982  1F86  00A8               	movwf	__tdiv_to_l_@quot
  5983  1F87                     l3982:
  5984  1F87  307F               	movlw	127
  5985  1F88  02AD               	subwf	__tdiv_to_l_@exp1,f
  5986  1F89                     l3984:
  5987  1F89  3098               	movlw	152
  5988  1F8A  072C               	addwf	__tdiv_to_l_@cntr,w
  5989  1F8B  00F3               	movwf	??__tdiv_to_l_
  5990  1F8C  0873               	movf	??__tdiv_to_l_,w
  5991  1F8D  02AD               	subwf	__tdiv_to_l_@exp1,f
  5992  1F8E  3018               	movlw	24
  5993  1F8F  00F3               	movwf	??__tdiv_to_l_
  5994  1F90  0873               	movf	??__tdiv_to_l_,w
  5995  1F91  00AC               	movwf	__tdiv_to_l_@cntr
  5996  1F92                     l3986:
  5997  1F92  3001               	movlw	1
  5998  1F93  00F3               	movwf	??__tdiv_to_l_
  5999  1F94                     u6525:
  6000  1F94  1003               	clrc
  6001  1F95  0DA8               	rlf	__tdiv_to_l_@quot,f
  6002  1F96  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6003  1F97  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6004  1F98  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6005  1F99  0BF3               	decfsz	??__tdiv_to_l_,f
  6006  1F9A  2F94               	goto	u6525
  6007  1F9B                     l3988:
  6008  1F9B  0826               	movf	__tdiv_to_l_@f2+2,w
  6009  1F9C  0222               	subwf	__tdiv_to_l_@f1+2,w
  6010  1F9D  1D03               	skipz
  6011  1F9E  2FA5               	goto	u6535
  6012  1F9F  0825               	movf	__tdiv_to_l_@f2+1,w
  6013  1FA0  0221               	subwf	__tdiv_to_l_@f1+1,w
  6014  1FA1  1D03               	skipz
  6015  1FA2  2FA5               	goto	u6535
  6016  1FA3  0824               	movf	__tdiv_to_l_@f2,w
  6017  1FA4  0220               	subwf	__tdiv_to_l_@f1,w
  6018  1FA5                     u6535:
  6019  1FA5  1C03               	skipc
  6020  1FA6  2FA8               	goto	u6531
  6021  1FA7  2FA9               	goto	u6530
  6022  1FA8                     u6531:
  6023  1FA8  2FB4               	goto	l3994
  6024  1FA9                     u6530:
  6025  1FA9                     l3990:
  6026  1FA9  0824               	movf	__tdiv_to_l_@f2,w
  6027  1FAA  02A0               	subwf	__tdiv_to_l_@f1,f
  6028  1FAB  0825               	movf	__tdiv_to_l_@f2+1,w
  6029  1FAC  1C03               	skipc
  6030  1FAD  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6031  1FAE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6032  1FAF  0826               	movf	__tdiv_to_l_@f2+2,w
  6033  1FB0  1C03               	skipc
  6034  1FB1  0A26               	incf	__tdiv_to_l_@f2+2,w
  6035  1FB2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6036  1FB3                     l3992:
  6037  1FB3  1428               	bsf	__tdiv_to_l_@quot,0
  6038  1FB4                     l3994:
  6039  1FB4  3001               	movlw	1
  6040  1FB5                     u6545:
  6041  1FB5  1003               	clrc
  6042  1FB6  0DA0               	rlf	__tdiv_to_l_@f1,f
  6043  1FB7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6044  1FB8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6045  1FB9  3EFF               	addlw	-1
  6046  1FBA  1D03               	skipz
  6047  1FBB  2FB5               	goto	u6545
  6048  1FBC                     l3996:
  6049  1FBC  3001               	movlw	1
  6050  1FBD  02AC               	subwf	__tdiv_to_l_@cntr,f
  6051  1FBE  1D03               	btfss	3,2
  6052  1FBF  2FC1               	goto	u6551
  6053  1FC0  2FC2               	goto	u6550
  6054  1FC1                     u6551:
  6055  1FC1  2F92               	goto	l3986
  6056  1FC2                     u6550:
  6057  1FC2                     l633:
  6058  1FC2  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6059  1FC3  2FC5               	goto	u6561
  6060  1FC4  2FC6               	goto	u6560
  6061  1FC5                     u6561:
  6062  1FC5  2FE0               	goto	l4006
  6063  1FC6                     u6560:
  6064  1FC6                     l3998:
  6065  1FC6  082D               	movf	__tdiv_to_l_@exp1,w
  6066  1FC7  3A80               	xorlw	128
  6067  1FC8  3E97               	addlw	151
  6068  1FC9  1803               	skipnc
  6069  1FCA  2FCC               	goto	u6571
  6070  1FCB  2FCD               	goto	u6570
  6071  1FCC                     u6571:
  6072  1FCC  2FCE               	goto	l4004
  6073  1FCD                     u6570:
  6074  1FCD  2F56               	goto	l3968
  6075  1FCE                     l4004:
  6076  1FCE  3001               	movlw	1
  6077  1FCF                     u6585:
  6078  1FCF  1003               	clrc
  6079  1FD0  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6080  1FD1  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6081  1FD2  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6082  1FD3  0CA8               	rrf	__tdiv_to_l_@quot,f
  6083  1FD4  3EFF               	addlw	-1
  6084  1FD5  1D03               	skipz
  6085  1FD6  2FCF               	goto	u6585
  6086  1FD7  3001               	movlw	1
  6087  1FD8  00F3               	movwf	??__tdiv_to_l_
  6088  1FD9  0873               	movf	??__tdiv_to_l_,w
  6089  1FDA  07AD               	addwf	__tdiv_to_l_@exp1,f
  6090  1FDB  1D03               	btfss	3,2
  6091  1FDC  2FDE               	goto	u6591
  6092  1FDD  2FDF               	goto	u6590
  6093  1FDE                     u6591:
  6094  1FDE  2FCE               	goto	l4004
  6095  1FDF                     u6590:
  6096  1FDF  2FF7               	goto	l4014
  6097  1FE0                     l4006:
  6098  1FE0  3018               	movlw	24
  6099  1FE1  022D               	subwf	__tdiv_to_l_@exp1,w
  6100  1FE2  1C03               	skipc
  6101  1FE3  2FE5               	goto	u6601
  6102  1FE4  2FE6               	goto	u6600
  6103  1FE5                     u6601:
  6104  1FE5  2FF2               	goto	l640
  6105  1FE6                     u6600:
  6106  1FE6  2F56               	goto	l3968
  6107  1FE7                     l4012:
  6108  1FE7  3001               	movlw	1
  6109  1FE8  00F3               	movwf	??__tdiv_to_l_
  6110  1FE9                     u6615:
  6111  1FE9  1003               	clrc
  6112  1FEA  0DA8               	rlf	__tdiv_to_l_@quot,f
  6113  1FEB  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6114  1FEC  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6115  1FED  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6116  1FEE  0BF3               	decfsz	??__tdiv_to_l_,f
  6117  1FEF  2FE9               	goto	u6615
  6118  1FF0  3001               	movlw	1
  6119  1FF1  02AD               	subwf	__tdiv_to_l_@exp1,f
  6120  1FF2                     l640:
  6121  1FF2  082D               	movf	__tdiv_to_l_@exp1,w
  6122  1FF3  1D03               	btfss	3,2
  6123  1FF4  2FF6               	goto	u6621
  6124  1FF5  2FF7               	goto	u6620
  6125  1FF6                     u6621:
  6126  1FF6  2FE7               	goto	l4012
  6127  1FF7                     u6620:
  6128  1FF7                     l4014:
  6129  1FF7  082B               	movf	__tdiv_to_l_@quot+3,w
  6130  1FF8  00A3               	movwf	?__tdiv_to_l_+3
  6131  1FF9  082A               	movf	__tdiv_to_l_@quot+2,w
  6132  1FFA  00A2               	movwf	?__tdiv_to_l_+2
  6133  1FFB  0829               	movf	__tdiv_to_l_@quot+1,w
  6134  1FFC  00A1               	movwf	?__tdiv_to_l_+1
  6135  1FFD  0828               	movf	__tdiv_to_l_@quot,w
  6136  1FFE  00A0               	movwf	?__tdiv_to_l_
  6137  1FFF                     l629:
  6138  1FFF  0008               	return
  6139  2000                     __end_of__tdiv_to_l_:
  6140                           
  6141                           	psect	text11
  6142  10E7                     __ptext11:	
  6143 ;; *************** function __div_to_l_ *****************
  6144 ;; Defined at:
  6145 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  f1              4    0[BANK0 ] unsigned long 
  6148 ;;  f2              4    4[BANK0 ] unsigned long 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  quot            4    8[BANK0 ] unsigned long 
  6151 ;;  exp1            1   13[BANK0 ] unsigned char 
  6152 ;;  cntr            1   12[BANK0 ] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  4    0[BANK0 ] unsigned long 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6162 ;;      Params:         0       8       0       0       0
  6163 ;;      Locals:         0       6       0       0       0
  6164 ;;      Temps:          1       0       0       0       0
  6165 ;;      Totals:         1      14       0       0       0
  6166 ;;Total ram usage:       15 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    2
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_sprintf
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           
  6177                           ;psect for function __div_to_l_
  6178  10E7                     __div_to_l_:
  6179  10E7                     l4018:	
  6180                           ;incstack = 0
  6181                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6182                           
  6183  10E7  1003               	clrc
  6184  10E8  1283               	bcf	3,5	;RP0=0, select bank0
  6185  10E9  1303               	bcf	3,6	;RP1=0, select bank0
  6186  10EA  0D22               	rlf	__div_to_l_@f1+2,w
  6187  10EB  0D23               	rlf	__div_to_l_@f1+3,w
  6188  10EC  00F3               	movwf	??__div_to_l_
  6189  10ED  0873               	movf	??__div_to_l_,w
  6190  10EE  00AD               	movwf	__div_to_l_@exp1
  6191  10EF  082D               	movf	__div_to_l_@exp1,w
  6192  10F0  1D03               	btfss	3,2
  6193  10F1  28F3               	goto	u6631
  6194  10F2  28F4               	goto	u6630
  6195  10F3                     u6631:
  6196  10F3  28FD               	goto	l4024
  6197  10F4                     u6630:
  6198  10F4                     l4020:
  6199  10F4  3000               	movlw	0
  6200  10F5  00A3               	movwf	?__div_to_l_+3
  6201  10F6  3000               	movlw	0
  6202  10F7  00A2               	movwf	?__div_to_l_+2
  6203  10F8  3000               	movlw	0
  6204  10F9  00A1               	movwf	?__div_to_l_+1
  6205  10FA  3000               	movlw	0
  6206  10FB  00A0               	movwf	?__div_to_l_
  6207  10FC  29A4               	goto	l582
  6208  10FD                     l4024:
  6209  10FD  1003               	clrc
  6210  10FE  0D26               	rlf	__div_to_l_@f2+2,w
  6211  10FF  0D27               	rlf	__div_to_l_@f2+3,w
  6212  1100  00F3               	movwf	??__div_to_l_
  6213  1101  0873               	movf	??__div_to_l_,w
  6214  1102  00AC               	movwf	__div_to_l_@cntr
  6215  1103  082C               	movf	__div_to_l_@cntr,w
  6216  1104  1D03               	btfss	3,2
  6217  1105  2907               	goto	u6641
  6218  1106  2908               	goto	u6640
  6219  1107                     u6641:
  6220  1107  2909               	goto	l583
  6221  1108                     u6640:
  6222  1108  28F4               	goto	l4020
  6223  1109                     l583:
  6224  1109  17A2               	bsf	__div_to_l_@f1+2,7
  6225  110A                     l4030:
  6226  110A  30FF               	movlw	255
  6227  110B  05A0               	andwf	__div_to_l_@f1,f
  6228  110C  30FF               	movlw	255
  6229  110D  05A1               	andwf	__div_to_l_@f1+1,f
  6230  110E  30FF               	movlw	255
  6231  110F  05A2               	andwf	__div_to_l_@f1+2,f
  6232  1110  3000               	movlw	0
  6233  1111  05A3               	andwf	__div_to_l_@f1+3,f
  6234  1112                     l4032:
  6235  1112  17A6               	bsf	__div_to_l_@f2+2,7
  6236  1113  30FF               	movlw	255
  6237  1114  05A4               	andwf	__div_to_l_@f2,f
  6238  1115  30FF               	movlw	255
  6239  1116  05A5               	andwf	__div_to_l_@f2+1,f
  6240  1117  30FF               	movlw	255
  6241  1118  05A6               	andwf	__div_to_l_@f2+2,f
  6242  1119  3000               	movlw	0
  6243  111A  05A7               	andwf	__div_to_l_@f2+3,f
  6244  111B  3000               	movlw	0
  6245  111C  00AB               	movwf	__div_to_l_@quot+3
  6246  111D  3000               	movlw	0
  6247  111E  00AA               	movwf	__div_to_l_@quot+2
  6248  111F  3000               	movlw	0
  6249  1120  00A9               	movwf	__div_to_l_@quot+1
  6250  1121  3000               	movlw	0
  6251  1122  00A8               	movwf	__div_to_l_@quot
  6252  1123                     l4034:
  6253  1123  307F               	movlw	127
  6254  1124  02AD               	subwf	__div_to_l_@exp1,f
  6255  1125                     l4036:
  6256  1125  30A0               	movlw	160
  6257  1126  072C               	addwf	__div_to_l_@cntr,w
  6258  1127  00F3               	movwf	??__div_to_l_
  6259  1128  0873               	movf	??__div_to_l_,w
  6260  1129  02AD               	subwf	__div_to_l_@exp1,f
  6261  112A  3020               	movlw	32
  6262  112B  00F3               	movwf	??__div_to_l_
  6263  112C  0873               	movf	??__div_to_l_,w
  6264  112D  00AC               	movwf	__div_to_l_@cntr
  6265  112E                     l4038:
  6266  112E  3001               	movlw	1
  6267  112F  00F3               	movwf	??__div_to_l_
  6268  1130                     u6655:
  6269  1130  1003               	clrc
  6270  1131  0DA8               	rlf	__div_to_l_@quot,f
  6271  1132  0DA9               	rlf	__div_to_l_@quot+1,f
  6272  1133  0DAA               	rlf	__div_to_l_@quot+2,f
  6273  1134  0DAB               	rlf	__div_to_l_@quot+3,f
  6274  1135  0BF3               	decfsz	??__div_to_l_,f
  6275  1136  2930               	goto	u6655
  6276  1137                     l4040:
  6277  1137  0827               	movf	__div_to_l_@f2+3,w
  6278  1138  0223               	subwf	__div_to_l_@f1+3,w
  6279  1139  1D03               	skipz
  6280  113A  2945               	goto	u6665
  6281  113B  0826               	movf	__div_to_l_@f2+2,w
  6282  113C  0222               	subwf	__div_to_l_@f1+2,w
  6283  113D  1D03               	skipz
  6284  113E  2945               	goto	u6665
  6285  113F  0825               	movf	__div_to_l_@f2+1,w
  6286  1140  0221               	subwf	__div_to_l_@f1+1,w
  6287  1141  1D03               	skipz
  6288  1142  2945               	goto	u6665
  6289  1143  0824               	movf	__div_to_l_@f2,w
  6290  1144  0220               	subwf	__div_to_l_@f1,w
  6291  1145                     u6665:
  6292  1145  1C03               	skipc
  6293  1146  2948               	goto	u6661
  6294  1147  2949               	goto	u6660
  6295  1148                     u6661:
  6296  1148  2958               	goto	l4046
  6297  1149                     u6660:
  6298  1149                     l4042:
  6299  1149  0824               	movf	__div_to_l_@f2,w
  6300  114A  02A0               	subwf	__div_to_l_@f1,f
  6301  114B  0825               	movf	__div_to_l_@f2+1,w
  6302  114C  1C03               	skipc
  6303  114D  0F25               	incfsz	__div_to_l_@f2+1,w
  6304  114E  02A1               	subwf	__div_to_l_@f1+1,f
  6305  114F  0826               	movf	__div_to_l_@f2+2,w
  6306  1150  1C03               	skipc
  6307  1151  0F26               	incfsz	__div_to_l_@f2+2,w
  6308  1152  02A2               	subwf	__div_to_l_@f1+2,f
  6309  1153  0827               	movf	__div_to_l_@f2+3,w
  6310  1154  1C03               	skipc
  6311  1155  0F27               	incfsz	__div_to_l_@f2+3,w
  6312  1156  02A3               	subwf	__div_to_l_@f1+3,f
  6313  1157                     l4044:
  6314  1157  1428               	bsf	__div_to_l_@quot,0
  6315  1158                     l4046:
  6316  1158  3001               	movlw	1
  6317  1159  00F3               	movwf	??__div_to_l_
  6318  115A                     u6675:
  6319  115A  1003               	clrc
  6320  115B  0DA0               	rlf	__div_to_l_@f1,f
  6321  115C  0DA1               	rlf	__div_to_l_@f1+1,f
  6322  115D  0DA2               	rlf	__div_to_l_@f1+2,f
  6323  115E  0DA3               	rlf	__div_to_l_@f1+3,f
  6324  115F  0BF3               	decfsz	??__div_to_l_,f
  6325  1160  295A               	goto	u6675
  6326  1161                     l4048:
  6327  1161  3001               	movlw	1
  6328  1162  02AC               	subwf	__div_to_l_@cntr,f
  6329  1163  1D03               	btfss	3,2
  6330  1164  2966               	goto	u6681
  6331  1165  2967               	goto	u6680
  6332  1166                     u6681:
  6333  1166  292E               	goto	l4038
  6334  1167                     u6680:
  6335  1167                     l586:
  6336  1167  1FAD               	btfss	__div_to_l_@exp1,7
  6337  1168  296A               	goto	u6691
  6338  1169  296B               	goto	u6690
  6339  116A                     u6691:
  6340  116A  2985               	goto	l4058
  6341  116B                     u6690:
  6342  116B                     l4050:
  6343  116B  082D               	movf	__div_to_l_@exp1,w
  6344  116C  3A80               	xorlw	128
  6345  116D  3E9F               	addlw	159
  6346  116E  1803               	skipnc
  6347  116F  2971               	goto	u6701
  6348  1170  2972               	goto	u6700
  6349  1171                     u6701:
  6350  1171  2973               	goto	l4056
  6351  1172                     u6700:
  6352  1172  28F4               	goto	l4020
  6353  1173                     l4056:
  6354  1173  3001               	movlw	1
  6355  1174                     u6715:
  6356  1174  1003               	clrc
  6357  1175  0CAB               	rrf	__div_to_l_@quot+3,f
  6358  1176  0CAA               	rrf	__div_to_l_@quot+2,f
  6359  1177  0CA9               	rrf	__div_to_l_@quot+1,f
  6360  1178  0CA8               	rrf	__div_to_l_@quot,f
  6361  1179  3EFF               	addlw	-1
  6362  117A  1D03               	skipz
  6363  117B  2974               	goto	u6715
  6364  117C  3001               	movlw	1
  6365  117D  00F3               	movwf	??__div_to_l_
  6366  117E  0873               	movf	??__div_to_l_,w
  6367  117F  07AD               	addwf	__div_to_l_@exp1,f
  6368  1180  1D03               	btfss	3,2
  6369  1181  2983               	goto	u6721
  6370  1182  2984               	goto	u6720
  6371  1183                     u6721:
  6372  1183  2973               	goto	l4056
  6373  1184                     u6720:
  6374  1184  299C               	goto	l4066
  6375  1185                     l4058:
  6376  1185  3020               	movlw	32
  6377  1186  022D               	subwf	__div_to_l_@exp1,w
  6378  1187  1C03               	skipc
  6379  1188  298A               	goto	u6731
  6380  1189  298B               	goto	u6730
  6381  118A                     u6731:
  6382  118A  2997               	goto	l593
  6383  118B                     u6730:
  6384  118B  28F4               	goto	l4020
  6385  118C                     l4064:
  6386  118C  3001               	movlw	1
  6387  118D  00F3               	movwf	??__div_to_l_
  6388  118E                     u6745:
  6389  118E  1003               	clrc
  6390  118F  0DA8               	rlf	__div_to_l_@quot,f
  6391  1190  0DA9               	rlf	__div_to_l_@quot+1,f
  6392  1191  0DAA               	rlf	__div_to_l_@quot+2,f
  6393  1192  0DAB               	rlf	__div_to_l_@quot+3,f
  6394  1193  0BF3               	decfsz	??__div_to_l_,f
  6395  1194  298E               	goto	u6745
  6396  1195  3001               	movlw	1
  6397  1196  02AD               	subwf	__div_to_l_@exp1,f
  6398  1197                     l593:
  6399  1197  082D               	movf	__div_to_l_@exp1,w
  6400  1198  1D03               	btfss	3,2
  6401  1199  299B               	goto	u6751
  6402  119A  299C               	goto	u6750
  6403  119B                     u6751:
  6404  119B  298C               	goto	l4064
  6405  119C                     u6750:
  6406  119C                     l4066:
  6407  119C  082B               	movf	__div_to_l_@quot+3,w
  6408  119D  00A3               	movwf	?__div_to_l_+3
  6409  119E  082A               	movf	__div_to_l_@quot+2,w
  6410  119F  00A2               	movwf	?__div_to_l_+2
  6411  11A0  0829               	movf	__div_to_l_@quot+1,w
  6412  11A1  00A1               	movwf	?__div_to_l_+1
  6413  11A2  0828               	movf	__div_to_l_@quot,w
  6414  11A3  00A0               	movwf	?__div_to_l_
  6415  11A4                     l582:
  6416  11A4  0008               	return
  6417  11A5                     __end_of__div_to_l_:
  6418                           
  6419                           	psect	text12
  6420  192A                     __ptext12:	
  6421 ;; *************** function ___wmul *****************
  6422 ;; Defined at:
  6423 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  multiplier      2    3[COMMON] unsigned int 
  6426 ;;  multiplicand    2    5[COMMON] unsigned int 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  product         2    0[BANK0 ] unsigned int 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  2    3[COMMON] unsigned int 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6438 ;;      Params:         4       0       0       0       0
  6439 ;;      Locals:         0       2       0       0       0
  6440 ;;      Temps:          0       0       0       0       0
  6441 ;;      Totals:         4       2       0       0       0
  6442 ;;Total ram usage:        6 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    2
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_sprintf
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function ___wmul
  6454  192A                     ___wmul:
  6455  192A                     l4070:	
  6456                           ;incstack = 0
  6457                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6458                           
  6459  192A  1283               	bcf	3,5	;RP0=0, select bank0
  6460  192B  1303               	bcf	3,6	;RP1=0, select bank0
  6461  192C  01A0               	clrf	___wmul@product
  6462  192D  01A1               	clrf	___wmul@product+1
  6463  192E                     l4072:
  6464  192E  1C73               	btfss	___wmul@multiplier,0
  6465  192F  2931               	goto	u6761
  6466  1930  2932               	goto	u6760
  6467  1931                     u6761:
  6468  1931  293A               	goto	l412
  6469  1932                     u6760:
  6470  1932                     l4074:
  6471  1932  0875               	movf	___wmul@multiplicand,w
  6472  1933  1283               	bcf	3,5	;RP0=0, select bank0
  6473  1934  1303               	bcf	3,6	;RP1=0, select bank0
  6474  1935  07A0               	addwf	___wmul@product,f
  6475  1936  1803               	skipnc
  6476  1937  0AA1               	incf	___wmul@product+1,f
  6477  1938  0876               	movf	___wmul@multiplicand+1,w
  6478  1939  07A1               	addwf	___wmul@product+1,f
  6479  193A                     l412:
  6480  193A  3001               	movlw	1
  6481  193B                     u6775:
  6482  193B  1003               	clrc
  6483  193C  0DF5               	rlf	___wmul@multiplicand,f
  6484  193D  0DF6               	rlf	___wmul@multiplicand+1,f
  6485  193E  3EFF               	addlw	-1
  6486  193F  1D03               	skipz
  6487  1940  293B               	goto	u6775
  6488  1941                     l4076:
  6489  1941  3001               	movlw	1
  6490  1942                     u6785:
  6491  1942  1003               	clrc
  6492  1943  0CF4               	rrf	___wmul@multiplier+1,f
  6493  1944  0CF3               	rrf	___wmul@multiplier,f
  6494  1945  3EFF               	addlw	-1
  6495  1946  1D03               	skipz
  6496  1947  2942               	goto	u6785
  6497  1948                     l4078:
  6498  1948  0873               	movf	___wmul@multiplier,w
  6499  1949  0474               	iorwf	___wmul@multiplier+1,w
  6500  194A  1D03               	btfss	3,2
  6501  194B  294D               	goto	u6791
  6502  194C  294E               	goto	u6790
  6503  194D                     u6791:
  6504  194D  292E               	goto	l4072
  6505  194E                     u6790:
  6506  194E                     l4080:
  6507  194E  1283               	bcf	3,5	;RP0=0, select bank0
  6508  194F  1303               	bcf	3,6	;RP1=0, select bank0
  6509  1950  0821               	movf	___wmul@product+1,w
  6510  1951  00F4               	movwf	?___wmul+1
  6511  1952  0820               	movf	___wmul@product,w
  6512  1953  00F3               	movwf	?___wmul
  6513  1954                     l414:
  6514  1954  0008               	return
  6515  1955                     __end_of___wmul:
  6516                           
  6517                           	psect	text13
  6518  1B48                     __ptext13:	
  6519 ;; *************** function ___llmod *****************
  6520 ;; Defined at:
  6521 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  divisor         4   13[BANK0 ] unsigned long 
  6524 ;;  dividend        4   17[BANK0 ] unsigned long 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  counter         1    5[COMMON] unsigned char 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  4   13[BANK0 ] unsigned long 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6536 ;;      Params:         0       8       0       0       0
  6537 ;;      Locals:         1       0       0       0       0
  6538 ;;      Temps:          1       0       0       0       0
  6539 ;;      Totals:         2       8       0       0       0
  6540 ;;Total ram usage:       10 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:    2
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_sprintf
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           
  6551                           ;psect for function ___llmod
  6552  1B48                     ___llmod:
  6553  1B48                     l4180:	
  6554                           ;incstack = 0
  6555                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6556                           
  6557  1B48  1283               	bcf	3,5	;RP0=0, select bank0
  6558  1B49  1303               	bcf	3,6	;RP1=0, select bank0
  6559  1B4A  0830               	movf	___llmod@divisor+3,w
  6560  1B4B  042F               	iorwf	___llmod@divisor+2,w
  6561  1B4C  042E               	iorwf	___llmod@divisor+1,w
  6562  1B4D  042D               	iorwf	___llmod@divisor,w
  6563  1B4E  1903               	skipnz
  6564  1B4F  2B51               	goto	u7071
  6565  1B50  2B52               	goto	u7070
  6566  1B51                     u7071:
  6567  1B51  2B95               	goto	l4196
  6568  1B52                     u7070:
  6569  1B52                     l4182:
  6570  1B52  01F5               	clrf	___llmod@counter
  6571  1B53  0AF5               	incf	___llmod@counter,f
  6572  1B54  2B62               	goto	l4186
  6573  1B55                     l4184:
  6574  1B55  3001               	movlw	1
  6575  1B56  00F4               	movwf	??___llmod
  6576  1B57                     u7085:
  6577  1B57  1003               	clrc
  6578  1B58  0DAD               	rlf	___llmod@divisor,f
  6579  1B59  0DAE               	rlf	___llmod@divisor+1,f
  6580  1B5A  0DAF               	rlf	___llmod@divisor+2,f
  6581  1B5B  0DB0               	rlf	___llmod@divisor+3,f
  6582  1B5C  0BF4               	decfsz	??___llmod,f
  6583  1B5D  2B57               	goto	u7085
  6584  1B5E  3001               	movlw	1
  6585  1B5F  00F4               	movwf	??___llmod
  6586  1B60  0874               	movf	??___llmod,w
  6587  1B61  07F5               	addwf	___llmod@counter,f
  6588  1B62                     l4186:
  6589  1B62  1FB0               	btfss	___llmod@divisor+3,7
  6590  1B63  2B65               	goto	u7091
  6591  1B64  2B66               	goto	u7090
  6592  1B65                     u7091:
  6593  1B65  2B55               	goto	l4184
  6594  1B66                     u7090:
  6595  1B66                     l4188:
  6596  1B66  0830               	movf	___llmod@divisor+3,w
  6597  1B67  0234               	subwf	___llmod@dividend+3,w
  6598  1B68  1D03               	skipz
  6599  1B69  2B74               	goto	u7105
  6600  1B6A  082F               	movf	___llmod@divisor+2,w
  6601  1B6B  0233               	subwf	___llmod@dividend+2,w
  6602  1B6C  1D03               	skipz
  6603  1B6D  2B74               	goto	u7105
  6604  1B6E  082E               	movf	___llmod@divisor+1,w
  6605  1B6F  0232               	subwf	___llmod@dividend+1,w
  6606  1B70  1D03               	skipz
  6607  1B71  2B74               	goto	u7105
  6608  1B72  082D               	movf	___llmod@divisor,w
  6609  1B73  0231               	subwf	___llmod@dividend,w
  6610  1B74                     u7105:
  6611  1B74  1C03               	skipc
  6612  1B75  2B77               	goto	u7101
  6613  1B76  2B78               	goto	u7100
  6614  1B77                     u7101:
  6615  1B77  2B86               	goto	l4192
  6616  1B78                     u7100:
  6617  1B78                     l4190:
  6618  1B78  082D               	movf	___llmod@divisor,w
  6619  1B79  02B1               	subwf	___llmod@dividend,f
  6620  1B7A  082E               	movf	___llmod@divisor+1,w
  6621  1B7B  1C03               	skipc
  6622  1B7C  0F2E               	incfsz	___llmod@divisor+1,w
  6623  1B7D  02B2               	subwf	___llmod@dividend+1,f
  6624  1B7E  082F               	movf	___llmod@divisor+2,w
  6625  1B7F  1C03               	skipc
  6626  1B80  0F2F               	incfsz	___llmod@divisor+2,w
  6627  1B81  02B3               	subwf	___llmod@dividend+2,f
  6628  1B82  0830               	movf	___llmod@divisor+3,w
  6629  1B83  1C03               	skipc
  6630  1B84  0F30               	incfsz	___llmod@divisor+3,w
  6631  1B85  02B4               	subwf	___llmod@dividend+3,f
  6632  1B86                     l4192:
  6633  1B86  3001               	movlw	1
  6634  1B87                     u7115:
  6635  1B87  1003               	clrc
  6636  1B88  0CB0               	rrf	___llmod@divisor+3,f
  6637  1B89  0CAF               	rrf	___llmod@divisor+2,f
  6638  1B8A  0CAE               	rrf	___llmod@divisor+1,f
  6639  1B8B  0CAD               	rrf	___llmod@divisor,f
  6640  1B8C  3EFF               	addlw	-1
  6641  1B8D  1D03               	skipz
  6642  1B8E  2B87               	goto	u7115
  6643  1B8F                     l4194:
  6644  1B8F  3001               	movlw	1
  6645  1B90  02F5               	subwf	___llmod@counter,f
  6646  1B91  1D03               	btfss	3,2
  6647  1B92  2B94               	goto	u7121
  6648  1B93  2B95               	goto	u7120
  6649  1B94                     u7121:
  6650  1B94  2B66               	goto	l4188
  6651  1B95                     u7120:
  6652  1B95                     l4196:
  6653  1B95  0834               	movf	___llmod@dividend+3,w
  6654  1B96  00B0               	movwf	?___llmod+3
  6655  1B97  0833               	movf	___llmod@dividend+2,w
  6656  1B98  00AF               	movwf	?___llmod+2
  6657  1B99  0832               	movf	___llmod@dividend+1,w
  6658  1B9A  00AE               	movwf	?___llmod+1
  6659  1B9B  0831               	movf	___llmod@dividend,w
  6660  1B9C  00AD               	movwf	?___llmod
  6661  1B9D                     l668:
  6662  1B9D  0008               	return
  6663  1B9E                     __end_of___llmod:
  6664                           
  6665                           	psect	text14
  6666  1BF9                     __ptext14:	
  6667 ;; *************** function ___lldiv *****************
  6668 ;; Defined at:
  6669 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  divisor         4    0[BANK0 ] unsigned long 
  6672 ;;  dividend        4    4[BANK0 ] unsigned long 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  quotient        4    8[BANK0 ] unsigned long 
  6675 ;;  counter         1   12[BANK0 ] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  4    0[BANK0 ] unsigned long 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6685 ;;      Params:         0       8       0       0       0
  6686 ;;      Locals:         0       5       0       0       0
  6687 ;;      Temps:          1       0       0       0       0
  6688 ;;      Totals:         1      13       0       0       0
  6689 ;;Total ram usage:       14 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    2
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_sprintf
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function ___lldiv
  6701  1BF9                     ___lldiv:
  6702  1BF9                     l4084:	
  6703                           ;incstack = 0
  6704                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6705                           
  6706  1BF9  3000               	movlw	0
  6707  1BFA  1283               	bcf	3,5	;RP0=0, select bank0
  6708  1BFB  1303               	bcf	3,6	;RP1=0, select bank0
  6709  1BFC  00AB               	movwf	___lldiv@quotient+3
  6710  1BFD  3000               	movlw	0
  6711  1BFE  00AA               	movwf	___lldiv@quotient+2
  6712  1BFF  3000               	movlw	0
  6713  1C00  00A9               	movwf	___lldiv@quotient+1
  6714  1C01  3000               	movlw	0
  6715  1C02  00A8               	movwf	___lldiv@quotient
  6716  1C03  0823               	movf	___lldiv@divisor+3,w
  6717  1C04  0422               	iorwf	___lldiv@divisor+2,w
  6718  1C05  0421               	iorwf	___lldiv@divisor+1,w
  6719  1C06  0420               	iorwf	___lldiv@divisor,w
  6720  1C07  1903               	skipnz
  6721  1C08  2C0A               	goto	u6801
  6722  1C09  2C0B               	goto	u6800
  6723  1C0A                     u6801:
  6724  1C0A  2C58               	goto	l4104
  6725  1C0B                     u6800:
  6726  1C0B                     l4086:
  6727  1C0B  01AC               	clrf	___lldiv@counter
  6728  1C0C  0AAC               	incf	___lldiv@counter,f
  6729  1C0D  2C1B               	goto	l4090
  6730  1C0E                     l4088:
  6731  1C0E  3001               	movlw	1
  6732  1C0F  00F3               	movwf	??___lldiv
  6733  1C10                     u6815:
  6734  1C10  1003               	clrc
  6735  1C11  0DA0               	rlf	___lldiv@divisor,f
  6736  1C12  0DA1               	rlf	___lldiv@divisor+1,f
  6737  1C13  0DA2               	rlf	___lldiv@divisor+2,f
  6738  1C14  0DA3               	rlf	___lldiv@divisor+3,f
  6739  1C15  0BF3               	decfsz	??___lldiv,f
  6740  1C16  2C10               	goto	u6815
  6741  1C17  3001               	movlw	1
  6742  1C18  00F3               	movwf	??___lldiv
  6743  1C19  0873               	movf	??___lldiv,w
  6744  1C1A  07AC               	addwf	___lldiv@counter,f
  6745  1C1B                     l4090:
  6746  1C1B  1FA3               	btfss	___lldiv@divisor+3,7
  6747  1C1C  2C1E               	goto	u6821
  6748  1C1D  2C1F               	goto	u6820
  6749  1C1E                     u6821:
  6750  1C1E  2C0E               	goto	l4088
  6751  1C1F                     u6820:
  6752  1C1F                     l4092:
  6753  1C1F  3001               	movlw	1
  6754  1C20  00F3               	movwf	??___lldiv
  6755  1C21                     u6835:
  6756  1C21  1003               	clrc
  6757  1C22  0DA8               	rlf	___lldiv@quotient,f
  6758  1C23  0DA9               	rlf	___lldiv@quotient+1,f
  6759  1C24  0DAA               	rlf	___lldiv@quotient+2,f
  6760  1C25  0DAB               	rlf	___lldiv@quotient+3,f
  6761  1C26  0BF3               	decfsz	??___lldiv,f
  6762  1C27  2C21               	goto	u6835
  6763  1C28                     l4094:
  6764  1C28  0823               	movf	___lldiv@divisor+3,w
  6765  1C29  0227               	subwf	___lldiv@dividend+3,w
  6766  1C2A  1D03               	skipz
  6767  1C2B  2C36               	goto	u6845
  6768  1C2C  0822               	movf	___lldiv@divisor+2,w
  6769  1C2D  0226               	subwf	___lldiv@dividend+2,w
  6770  1C2E  1D03               	skipz
  6771  1C2F  2C36               	goto	u6845
  6772  1C30  0821               	movf	___lldiv@divisor+1,w
  6773  1C31  0225               	subwf	___lldiv@dividend+1,w
  6774  1C32  1D03               	skipz
  6775  1C33  2C36               	goto	u6845
  6776  1C34  0820               	movf	___lldiv@divisor,w
  6777  1C35  0224               	subwf	___lldiv@dividend,w
  6778  1C36                     u6845:
  6779  1C36  1C03               	skipc
  6780  1C37  2C39               	goto	u6841
  6781  1C38  2C3A               	goto	u6840
  6782  1C39                     u6841:
  6783  1C39  2C49               	goto	l4100
  6784  1C3A                     u6840:
  6785  1C3A                     l4096:
  6786  1C3A  0820               	movf	___lldiv@divisor,w
  6787  1C3B  02A4               	subwf	___lldiv@dividend,f
  6788  1C3C  0821               	movf	___lldiv@divisor+1,w
  6789  1C3D  1C03               	skipc
  6790  1C3E  0F21               	incfsz	___lldiv@divisor+1,w
  6791  1C3F  02A5               	subwf	___lldiv@dividend+1,f
  6792  1C40  0822               	movf	___lldiv@divisor+2,w
  6793  1C41  1C03               	skipc
  6794  1C42  0F22               	incfsz	___lldiv@divisor+2,w
  6795  1C43  02A6               	subwf	___lldiv@dividend+2,f
  6796  1C44  0823               	movf	___lldiv@divisor+3,w
  6797  1C45  1C03               	skipc
  6798  1C46  0F23               	incfsz	___lldiv@divisor+3,w
  6799  1C47  02A7               	subwf	___lldiv@dividend+3,f
  6800  1C48                     l4098:
  6801  1C48  1428               	bsf	___lldiv@quotient,0
  6802  1C49                     l4100:
  6803  1C49  3001               	movlw	1
  6804  1C4A                     u6855:
  6805  1C4A  1003               	clrc
  6806  1C4B  0CA3               	rrf	___lldiv@divisor+3,f
  6807  1C4C  0CA2               	rrf	___lldiv@divisor+2,f
  6808  1C4D  0CA1               	rrf	___lldiv@divisor+1,f
  6809  1C4E  0CA0               	rrf	___lldiv@divisor,f
  6810  1C4F  3EFF               	addlw	-1
  6811  1C50  1D03               	skipz
  6812  1C51  2C4A               	goto	u6855
  6813  1C52                     l4102:
  6814  1C52  3001               	movlw	1
  6815  1C53  02AC               	subwf	___lldiv@counter,f
  6816  1C54  1D03               	btfss	3,2
  6817  1C55  2C57               	goto	u6861
  6818  1C56  2C58               	goto	u6860
  6819  1C57                     u6861:
  6820  1C57  2C1F               	goto	l4092
  6821  1C58                     u6860:
  6822  1C58                     l4104:
  6823  1C58  082B               	movf	___lldiv@quotient+3,w
  6824  1C59  00A3               	movwf	?___lldiv+3
  6825  1C5A  082A               	movf	___lldiv@quotient+2,w
  6826  1C5B  00A2               	movwf	?___lldiv+2
  6827  1C5C  0829               	movf	___lldiv@quotient+1,w
  6828  1C5D  00A1               	movwf	?___lldiv+1
  6829  1C5E  0828               	movf	___lldiv@quotient,w
  6830  1C5F  00A0               	movwf	?___lldiv
  6831  1C60                     l448:
  6832  1C60  0008               	return
  6833  1C61                     __end_of___lldiv:
  6834                           
  6835                           	psect	text15
  6836  1CCA                     __ptext15:	
  6837 ;; *************** function ___fltol *****************
  6838 ;; Defined at:
  6839 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  f1              4   56[BANK0 ] unsigned long 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  exp1            1   66[BANK0 ] unsigned char 
  6844 ;;  sign1           1   65[BANK0 ] unsigned char 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  4   56[BANK0 ] long 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6854 ;;      Params:         0       4       0       0       0
  6855 ;;      Locals:         0       2       0       0       0
  6856 ;;      Temps:          0       5       0       0       0
  6857 ;;      Totals:         0      11       0       0       0
  6858 ;;Total ram usage:       11 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    2
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_sprintf
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           
  6869                           ;psect for function ___fltol
  6870  1CCA                     ___fltol:
  6871  1CCA                     l3164:	
  6872                           ;incstack = 0
  6873                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6874                           
  6875  1CCA  1003               	clrc
  6876  1CCB  1283               	bcf	3,5	;RP0=0, select bank0
  6877  1CCC  1303               	bcf	3,6	;RP1=0, select bank0
  6878  1CCD  0D5A               	rlf	___fltol@f1+2,w
  6879  1CCE  0D5B               	rlf	___fltol@f1+3,w
  6880  1CCF  00DC               	movwf	??___fltol
  6881  1CD0  085C               	movf	??___fltol,w
  6882  1CD1  00E2               	movwf	___fltol@exp1
  6883  1CD2  0862               	movf	___fltol@exp1,w
  6884  1CD3  1D03               	btfss	3,2
  6885  1CD4  2CD6               	goto	u5031
  6886  1CD5  2CD7               	goto	u5030
  6887  1CD6                     u5031:
  6888  1CD6  2CE0               	goto	l3170
  6889  1CD7                     u5030:
  6890  1CD7                     l3166:
  6891  1CD7  3000               	movlw	0
  6892  1CD8  00DB               	movwf	?___fltol+3
  6893  1CD9  3000               	movlw	0
  6894  1CDA  00DA               	movwf	?___fltol+2
  6895  1CDB  3000               	movlw	0
  6896  1CDC  00D9               	movwf	?___fltol+1
  6897  1CDD  3000               	movlw	0
  6898  1CDE  00D8               	movwf	?___fltol
  6899  1CDF  2D45               	goto	l615
  6900  1CE0                     l3170:
  6901  1CE0  0858               	movf	___fltol@f1,w
  6902  1CE1  00DC               	movwf	??___fltol
  6903  1CE2  0859               	movf	___fltol@f1+1,w
  6904  1CE3  00DD               	movwf	??___fltol+1
  6905  1CE4  085A               	movf	___fltol@f1+2,w
  6906  1CE5  00DE               	movwf	??___fltol+2
  6907  1CE6  085B               	movf	___fltol@f1+3,w
  6908  1CE7  00DF               	movwf	??___fltol+3
  6909  1CE8  301F               	movlw	31
  6910  1CE9                     u5045:
  6911  1CE9  1003               	clrc
  6912  1CEA  0CDF               	rrf	??___fltol+3,f
  6913  1CEB  0CDE               	rrf	??___fltol+2,f
  6914  1CEC  0CDD               	rrf	??___fltol+1,f
  6915  1CED  0CDC               	rrf	??___fltol,f
  6916  1CEE                     u5040:
  6917  1CEE  3EFF               	addlw	-1
  6918  1CEF  1D03               	skipz
  6919  1CF0  2CE9               	goto	u5045
  6920  1CF1  085C               	movf	??___fltol,w
  6921  1CF2  00E0               	movwf	??___fltol+4
  6922  1CF3  0860               	movf	??___fltol+4,w
  6923  1CF4  00E1               	movwf	___fltol@sign1
  6924  1CF5                     l3172:
  6925  1CF5  17DA               	bsf	___fltol@f1+2,7
  6926  1CF6                     l3174:
  6927  1CF6  30FF               	movlw	255
  6928  1CF7  05D8               	andwf	___fltol@f1,f
  6929  1CF8  30FF               	movlw	255
  6930  1CF9  05D9               	andwf	___fltol@f1+1,f
  6931  1CFA  30FF               	movlw	255
  6932  1CFB  05DA               	andwf	___fltol@f1+2,f
  6933  1CFC  3000               	movlw	0
  6934  1CFD  05DB               	andwf	___fltol@f1+3,f
  6935  1CFE                     l3176:
  6936  1CFE  3096               	movlw	150
  6937  1CFF  02E2               	subwf	___fltol@exp1,f
  6938  1D00                     l3178:
  6939  1D00  1FE2               	btfss	___fltol@exp1,7
  6940  1D01  2D03               	goto	u5051
  6941  1D02  2D04               	goto	u5050
  6942  1D03                     u5051:
  6943  1D03  2D1E               	goto	l3188
  6944  1D04                     u5050:
  6945  1D04                     l3180:
  6946  1D04  0862               	movf	___fltol@exp1,w
  6947  1D05  3A80               	xorlw	128
  6948  1D06  3E97               	addlw	151
  6949  1D07  1803               	skipnc
  6950  1D08  2D0A               	goto	u5061
  6951  1D09  2D0B               	goto	u5060
  6952  1D0A                     u5061:
  6953  1D0A  2D0C               	goto	l3186
  6954  1D0B                     u5060:
  6955  1D0B  2CD7               	goto	l3166
  6956  1D0C                     l3186:
  6957  1D0C  3001               	movlw	1
  6958  1D0D                     u5075:
  6959  1D0D  1003               	clrc
  6960  1D0E  0CDB               	rrf	___fltol@f1+3,f
  6961  1D0F  0CDA               	rrf	___fltol@f1+2,f
  6962  1D10  0CD9               	rrf	___fltol@f1+1,f
  6963  1D11  0CD8               	rrf	___fltol@f1,f
  6964  1D12  3EFF               	addlw	-1
  6965  1D13  1D03               	skipz
  6966  1D14  2D0D               	goto	u5075
  6967  1D15  3001               	movlw	1
  6968  1D16  00DC               	movwf	??___fltol
  6969  1D17  085C               	movf	??___fltol,w
  6970  1D18  07E2               	addwf	___fltol@exp1,f
  6971  1D19  1D03               	btfss	3,2
  6972  1D1A  2D1C               	goto	u5081
  6973  1D1B  2D1D               	goto	u5080
  6974  1D1C                     u5081:
  6975  1D1C  2D0C               	goto	l3186
  6976  1D1D                     u5080:
  6977  1D1D  2D35               	goto	l3196
  6978  1D1E                     l3188:
  6979  1D1E  3020               	movlw	32
  6980  1D1F  0262               	subwf	___fltol@exp1,w
  6981  1D20  1C03               	skipc
  6982  1D21  2D23               	goto	u5091
  6983  1D22  2D24               	goto	u5090
  6984  1D23                     u5091:
  6985  1D23  2D30               	goto	l622
  6986  1D24                     u5090:
  6987  1D24  2CD7               	goto	l3166
  6988  1D25                     l3194:
  6989  1D25  3001               	movlw	1
  6990  1D26  00DC               	movwf	??___fltol
  6991  1D27                     u5105:
  6992  1D27  1003               	clrc
  6993  1D28  0DD8               	rlf	___fltol@f1,f
  6994  1D29  0DD9               	rlf	___fltol@f1+1,f
  6995  1D2A  0DDA               	rlf	___fltol@f1+2,f
  6996  1D2B  0DDB               	rlf	___fltol@f1+3,f
  6997  1D2C  0BDC               	decfsz	??___fltol,f
  6998  1D2D  2D27               	goto	u5105
  6999  1D2E  3001               	movlw	1
  7000  1D2F  02E2               	subwf	___fltol@exp1,f
  7001  1D30                     l622:
  7002  1D30  0862               	movf	___fltol@exp1,w
  7003  1D31  1D03               	btfss	3,2
  7004  1D32  2D34               	goto	u5111
  7005  1D33  2D35               	goto	u5110
  7006  1D34                     u5111:
  7007  1D34  2D25               	goto	l3194
  7008  1D35                     u5110:
  7009  1D35                     l3196:
  7010  1D35  0861               	movf	___fltol@sign1,w
  7011  1D36  1903               	btfsc	3,2
  7012  1D37  2D39               	goto	u5121
  7013  1D38  2D3A               	goto	u5120
  7014  1D39                     u5121:
  7015  1D39  2D45               	goto	l625
  7016  1D3A                     u5120:
  7017  1D3A                     l3198:
  7018  1D3A  09D8               	comf	___fltol@f1,f
  7019  1D3B  09D9               	comf	___fltol@f1+1,f
  7020  1D3C  09DA               	comf	___fltol@f1+2,f
  7021  1D3D  09DB               	comf	___fltol@f1+3,f
  7022  1D3E  0AD8               	incf	___fltol@f1,f
  7023  1D3F  1903               	skipnz
  7024  1D40  0AD9               	incf	___fltol@f1+1,f
  7025  1D41  1903               	skipnz
  7026  1D42  0ADA               	incf	___fltol@f1+2,f
  7027  1D43  1903               	skipnz
  7028  1D44  0ADB               	incf	___fltol@f1+3,f
  7029  1D45                     l625:
  7030  1D45                     l615:
  7031  1D45  0008               	return
  7032  1D46                     __end_of___fltol:
  7033                           
  7034                           	psect	text16
  7035  1AF8                     __ptext16:	
  7036 ;; *************** function ___flsub *****************
  7037 ;; Defined at:
  7038 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  a               4    0[BANK1 ] long 
  7041 ;;  b               4    4[BANK1 ] long 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  4    0[BANK1 ] long 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7053 ;;      Params:         0       0       8       0       0
  7054 ;;      Locals:         0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0
  7056 ;;      Totals:         0       0       8       0       0
  7057 ;;Total ram usage:        8 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    3
  7060 ;; This function calls:
  7061 ;;		___fladd
  7062 ;; This function is called by:
  7063 ;;		_sprintf
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function ___flsub
  7069  1AF8                     ___flsub:
  7070  1AF8                     l3220:	
  7071                           ;incstack = 0
  7072                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7073                           
  7074  1AF8  3080               	movlw	128
  7075  1AF9  1683               	bsf	3,5	;RP0=1, select bank1
  7076  1AFA  1303               	bcf	3,6	;RP1=0, select bank1
  7077  1AFB  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7078  1AFC                     l3222:
  7079  1AFC  0827               	movf	(___flsub@b+3)^(0+128),w
  7080  1AFD  1283               	bcf	3,5	;RP0=0, select bank0
  7081  1AFE  1303               	bcf	3,6	;RP1=0, select bank0
  7082  1AFF  00DC               	movwf	___fladd@b+3
  7083  1B00  1683               	bsf	3,5	;RP0=1, select bank1
  7084  1B01  1303               	bcf	3,6	;RP1=0, select bank1
  7085  1B02  0826               	movf	(___flsub@b+2)^(0+128),w
  7086  1B03  1283               	bcf	3,5	;RP0=0, select bank0
  7087  1B04  1303               	bcf	3,6	;RP1=0, select bank0
  7088  1B05  00DB               	movwf	___fladd@b+2
  7089  1B06  1683               	bsf	3,5	;RP0=1, select bank1
  7090  1B07  1303               	bcf	3,6	;RP1=0, select bank1
  7091  1B08  0825               	movf	(___flsub@b+1)^(0+128),w
  7092  1B09  1283               	bcf	3,5	;RP0=0, select bank0
  7093  1B0A  1303               	bcf	3,6	;RP1=0, select bank0
  7094  1B0B  00DA               	movwf	___fladd@b+1
  7095  1B0C  1683               	bsf	3,5	;RP0=1, select bank1
  7096  1B0D  1303               	bcf	3,6	;RP1=0, select bank1
  7097  1B0E  0824               	movf	___flsub@b^(0+128),w
  7098  1B0F  1283               	bcf	3,5	;RP0=0, select bank0
  7099  1B10  1303               	bcf	3,6	;RP1=0, select bank0
  7100  1B11  00D9               	movwf	___fladd@b
  7101  1B12  1683               	bsf	3,5	;RP0=1, select bank1
  7102  1B13  1303               	bcf	3,6	;RP1=0, select bank1
  7103  1B14  0823               	movf	(___flsub@a+3)^(0+128),w
  7104  1B15  1283               	bcf	3,5	;RP0=0, select bank0
  7105  1B16  1303               	bcf	3,6	;RP1=0, select bank0
  7106  1B17  00E0               	movwf	___fladd@a+3
  7107  1B18  1683               	bsf	3,5	;RP0=1, select bank1
  7108  1B19  1303               	bcf	3,6	;RP1=0, select bank1
  7109  1B1A  0822               	movf	(___flsub@a+2)^(0+128),w
  7110  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7111  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
  7112  1B1D  00DF               	movwf	___fladd@a+2
  7113  1B1E  1683               	bsf	3,5	;RP0=1, select bank1
  7114  1B1F  1303               	bcf	3,6	;RP1=0, select bank1
  7115  1B20  0821               	movf	(___flsub@a+1)^(0+128),w
  7116  1B21  1283               	bcf	3,5	;RP0=0, select bank0
  7117  1B22  1303               	bcf	3,6	;RP1=0, select bank0
  7118  1B23  00DE               	movwf	___fladd@a+1
  7119  1B24  1683               	bsf	3,5	;RP0=1, select bank1
  7120  1B25  1303               	bcf	3,6	;RP1=0, select bank1
  7121  1B26  0820               	movf	___flsub@a^(0+128),w
  7122  1B27  1283               	bcf	3,5	;RP0=0, select bank0
  7123  1B28  1303               	bcf	3,6	;RP1=0, select bank0
  7124  1B29  00DD               	movwf	___fladd@a
  7125  1B2A  160A  118A  2578  160A  158A  	fcall	___fladd
  7126  1B2F  1283               	bcf	3,5	;RP0=0, select bank0
  7127  1B30  1303               	bcf	3,6	;RP1=0, select bank0
  7128  1B31  085C               	movf	?___fladd+3,w
  7129  1B32  1683               	bsf	3,5	;RP0=1, select bank1
  7130  1B33  1303               	bcf	3,6	;RP1=0, select bank1
  7131  1B34  00A3               	movwf	(?___flsub+3)^(0+128)
  7132  1B35  1283               	bcf	3,5	;RP0=0, select bank0
  7133  1B36  1303               	bcf	3,6	;RP1=0, select bank0
  7134  1B37  085B               	movf	?___fladd+2,w
  7135  1B38  1683               	bsf	3,5	;RP0=1, select bank1
  7136  1B39  1303               	bcf	3,6	;RP1=0, select bank1
  7137  1B3A  00A2               	movwf	(?___flsub+2)^(0+128)
  7138  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  7139  1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  7140  1B3D  085A               	movf	?___fladd+1,w
  7141  1B3E  1683               	bsf	3,5	;RP0=1, select bank1
  7142  1B3F  1303               	bcf	3,6	;RP1=0, select bank1
  7143  1B40  00A1               	movwf	(?___flsub+1)^(0+128)
  7144  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  7145  1B42  1303               	bcf	3,6	;RP1=0, select bank0
  7146  1B43  0859               	movf	?___fladd,w
  7147  1B44  1683               	bsf	3,5	;RP0=1, select bank1
  7148  1B45  1303               	bcf	3,6	;RP1=0, select bank1
  7149  1B46  00A0               	movwf	?___flsub^(0+128)
  7150  1B47                     l785:
  7151  1B47  0008               	return
  7152  1B48                     __end_of___flsub:
  7153                           
  7154                           	psect	text17
  7155  1578                     __ptext17:	
  7156 ;; *************** function ___fladd *****************
  7157 ;; Defined at:
  7158 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  b               4   57[BANK0 ] long 
  7161 ;;  a               4   61[BANK0 ] long 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  grs             1   76[BANK0 ] unsigned char 
  7164 ;;  bexp            1   75[BANK0 ] unsigned char 
  7165 ;;  aexp            1   74[BANK0 ] unsigned char 
  7166 ;;  signs           1   73[BANK0 ] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  4   57[BANK0 ] unsigned char 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0, btemp+1
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7176 ;;      Params:         0       8       0       0       0
  7177 ;;      Locals:         0       4       0       0       0
  7178 ;;      Temps:          0       8       0       0       0
  7179 ;;      Totals:         0      20       0       0       0
  7180 ;;Total ram usage:       20 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    2
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_sprintf
  7187 ;;		___flsub
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           
  7192                           ;psect for function ___fladd
  7193  1578                     ___fladd:
  7194  1578                     l2518:	
  7195                           ;incstack = 0
  7196                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7197                           
  7198  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7199  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7200  157A  085C               	movf	___fladd@b+3,w
  7201  157B  3980               	andlw	128
  7202  157C  00E1               	movwf	??___fladd
  7203  157D  0861               	movf	??___fladd,w
  7204  157E  00E9               	movwf	___fladd@signs
  7205  157F                     l2520:
  7206  157F  085C               	movf	___fladd@b+3,w
  7207  1580  00E1               	movwf	??___fladd
  7208  1581  0761               	addwf	??___fladd,w
  7209  1582  00E2               	movwf	??___fladd+1
  7210  1583  0862               	movf	??___fladd+1,w
  7211  1584  00EB               	movwf	___fladd@bexp
  7212  1585                     l2522:
  7213  1585  1FDB               	btfss	___fladd@b+2,7
  7214  1586  2D88               	goto	u3361
  7215  1587  2D89               	goto	u3360
  7216  1588                     u3361:
  7217  1588  2D8A               	goto	l2526
  7218  1589                     u3360:
  7219  1589                     l2524:
  7220  1589  146B               	bsf	___fladd@bexp,0
  7221  158A                     l2526:
  7222  158A  086B               	movf	___fladd@bexp,w
  7223  158B  1903               	btfsc	3,2
  7224  158C  2D8E               	goto	u3371
  7225  158D  2D8F               	goto	u3370
  7226  158E                     u3371:
  7227  158E  2D9F               	goto	l2536
  7228  158F                     u3370:
  7229  158F                     l2528:
  7230  158F  0A6B               	incf	___fladd@bexp,w
  7231  1590  1D03               	btfss	3,2
  7232  1591  2D93               	goto	u3381
  7233  1592  2D94               	goto	u3380
  7234  1593                     u3381:
  7235  1593  2D9C               	goto	l2532
  7236  1594                     u3380:
  7237  1594                     l2530:
  7238  1594  3000               	movlw	0
  7239  1595  00DC               	movwf	___fladd@b+3
  7240  1596  3000               	movlw	0
  7241  1597  00DB               	movwf	___fladd@b+2
  7242  1598  3000               	movlw	0
  7243  1599  00DA               	movwf	___fladd@b+1
  7244  159A  3000               	movlw	0
  7245  159B  00D9               	movwf	___fladd@b
  7246  159C                     l2532:
  7247  159C  17DB               	bsf	___fladd@b+2,7
  7248  159D                     l2534:
  7249  159D  01DC               	clrf	___fladd@b+3
  7250  159E  2DA7               	goto	l2538
  7251  159F                     l2536:
  7252  159F  3000               	movlw	0
  7253  15A0  00DC               	movwf	___fladd@b+3
  7254  15A1  3000               	movlw	0
  7255  15A2  00DB               	movwf	___fladd@b+2
  7256  15A3  3000               	movlw	0
  7257  15A4  00DA               	movwf	___fladd@b+1
  7258  15A5  3000               	movlw	0
  7259  15A6  00D9               	movwf	___fladd@b
  7260  15A7                     l2538:
  7261  15A7  0860               	movf	___fladd@a+3,w
  7262  15A8  3980               	andlw	128
  7263  15A9  00E1               	movwf	??___fladd
  7264  15AA  0861               	movf	??___fladd,w
  7265  15AB  00EA               	movwf	___fladd@aexp
  7266  15AC                     l2540:
  7267  15AC  086A               	movf	___fladd@aexp,w
  7268  15AD  0669               	xorwf	___fladd@signs,w
  7269  15AE  1903               	skipnz
  7270  15AF  2DB1               	goto	u3391
  7271  15B0  2DB2               	goto	u3390
  7272  15B1                     u3391:
  7273  15B1  2DB3               	goto	l2544
  7274  15B2                     u3390:
  7275  15B2                     l2542:
  7276  15B2  1769               	bsf	___fladd@signs,6
  7277  15B3                     l2544:
  7278  15B3  0860               	movf	___fladd@a+3,w
  7279  15B4  00E1               	movwf	??___fladd
  7280  15B5  0761               	addwf	??___fladd,w
  7281  15B6  00E2               	movwf	??___fladd+1
  7282  15B7  0862               	movf	??___fladd+1,w
  7283  15B8  00EA               	movwf	___fladd@aexp
  7284  15B9                     l2546:
  7285  15B9  1FDF               	btfss	___fladd@a+2,7
  7286  15BA  2DBC               	goto	u3401
  7287  15BB  2DBD               	goto	u3400
  7288  15BC                     u3401:
  7289  15BC  2DBE               	goto	l2550
  7290  15BD                     u3400:
  7291  15BD                     l2548:
  7292  15BD  146A               	bsf	___fladd@aexp,0
  7293  15BE                     l2550:
  7294  15BE  086A               	movf	___fladd@aexp,w
  7295  15BF  1903               	btfsc	3,2
  7296  15C0  2DC2               	goto	u3411
  7297  15C1  2DC3               	goto	u3410
  7298  15C2                     u3411:
  7299  15C2  2DD3               	goto	l2560
  7300  15C3                     u3410:
  7301  15C3                     l2552:
  7302  15C3  0A6A               	incf	___fladd@aexp,w
  7303  15C4  1D03               	btfss	3,2
  7304  15C5  2DC7               	goto	u3421
  7305  15C6  2DC8               	goto	u3420
  7306  15C7                     u3421:
  7307  15C7  2DD0               	goto	l2556
  7308  15C8                     u3420:
  7309  15C8                     l2554:
  7310  15C8  3000               	movlw	0
  7311  15C9  00E0               	movwf	___fladd@a+3
  7312  15CA  3000               	movlw	0
  7313  15CB  00DF               	movwf	___fladd@a+2
  7314  15CC  3000               	movlw	0
  7315  15CD  00DE               	movwf	___fladd@a+1
  7316  15CE  3000               	movlw	0
  7317  15CF  00DD               	movwf	___fladd@a
  7318  15D0                     l2556:
  7319  15D0  17DF               	bsf	___fladd@a+2,7
  7320  15D1                     l2558:
  7321  15D1  01E0               	clrf	___fladd@a+3
  7322  15D2  2DDB               	goto	l739
  7323  15D3                     l2560:
  7324  15D3  3000               	movlw	0
  7325  15D4  00E0               	movwf	___fladd@a+3
  7326  15D5  3000               	movlw	0
  7327  15D6  00DF               	movwf	___fladd@a+2
  7328  15D7  3000               	movlw	0
  7329  15D8  00DE               	movwf	___fladd@a+1
  7330  15D9  3000               	movlw	0
  7331  15DA  00DD               	movwf	___fladd@a
  7332  15DB                     l739:
  7333  15DB  086B               	movf	___fladd@bexp,w
  7334  15DC  026A               	subwf	___fladd@aexp,w
  7335  15DD  1803               	skipnc
  7336  15DE  2DE0               	goto	u3431
  7337  15DF  2DE1               	goto	u3430
  7338  15E0                     u3431:
  7339  15E0  2E25               	goto	l2596
  7340  15E1                     u3430:
  7341  15E1                     l2562:
  7342  15E1  1F69               	btfss	___fladd@signs,6
  7343  15E2  2DE4               	goto	u3441
  7344  15E3  2DE5               	goto	u3440
  7345  15E4                     u3441:
  7346  15E4  2DE9               	goto	l2566
  7347  15E5                     u3440:
  7348  15E5                     l2564:
  7349  15E5  3080               	movlw	128
  7350  15E6  00E1               	movwf	??___fladd
  7351  15E7  0861               	movf	??___fladd,w
  7352  15E8  06E9               	xorwf	___fladd@signs,f
  7353  15E9                     l2566:
  7354  15E9  086B               	movf	___fladd@bexp,w
  7355  15EA  00E1               	movwf	??___fladd
  7356  15EB  0861               	movf	??___fladd,w
  7357  15EC  00EC               	movwf	___fladd@grs
  7358  15ED                     l2568:
  7359  15ED  086A               	movf	___fladd@aexp,w
  7360  15EE  00E1               	movwf	??___fladd
  7361  15EF  0861               	movf	??___fladd,w
  7362  15F0  00EB               	movwf	___fladd@bexp
  7363  15F1                     l2570:
  7364  15F1  086C               	movf	___fladd@grs,w
  7365  15F2  00E1               	movwf	??___fladd
  7366  15F3  0861               	movf	??___fladd,w
  7367  15F4  00EA               	movwf	___fladd@aexp
  7368  15F5                     l2572:
  7369  15F5  0859               	movf	___fladd@b,w
  7370  15F6  00E1               	movwf	??___fladd
  7371  15F7  0861               	movf	??___fladd,w
  7372  15F8  00EC               	movwf	___fladd@grs
  7373  15F9                     l2574:
  7374  15F9  085D               	movf	___fladd@a,w
  7375  15FA  00E1               	movwf	??___fladd
  7376  15FB  0861               	movf	??___fladd,w
  7377  15FC  00D9               	movwf	___fladd@b
  7378  15FD                     l2576:
  7379  15FD  086C               	movf	___fladd@grs,w
  7380  15FE  00E1               	movwf	??___fladd
  7381  15FF  0861               	movf	??___fladd,w
  7382  1600  00DD               	movwf	___fladd@a
  7383  1601                     l2578:
  7384  1601  085A               	movf	___fladd@b+1,w
  7385  1602  00E1               	movwf	??___fladd
  7386  1603  0861               	movf	??___fladd,w
  7387  1604  00EC               	movwf	___fladd@grs
  7388  1605                     l2580:
  7389  1605  085E               	movf	___fladd@a+1,w
  7390  1606  00E1               	movwf	??___fladd
  7391  1607  0861               	movf	??___fladd,w
  7392  1608  00DA               	movwf	___fladd@b+1
  7393  1609                     l2582:
  7394  1609  086C               	movf	___fladd@grs,w
  7395  160A  00E1               	movwf	??___fladd
  7396  160B  0861               	movf	??___fladd,w
  7397  160C  00DE               	movwf	___fladd@a+1
  7398  160D                     l2584:
  7399  160D  085B               	movf	___fladd@b+2,w
  7400  160E  00E1               	movwf	??___fladd
  7401  160F  0861               	movf	??___fladd,w
  7402  1610  00EC               	movwf	___fladd@grs
  7403  1611                     l2586:
  7404  1611  085F               	movf	___fladd@a+2,w
  7405  1612  00E1               	movwf	??___fladd
  7406  1613  0861               	movf	??___fladd,w
  7407  1614  00DB               	movwf	___fladd@b+2
  7408  1615                     l2588:
  7409  1615  086C               	movf	___fladd@grs,w
  7410  1616  00E1               	movwf	??___fladd
  7411  1617  0861               	movf	??___fladd,w
  7412  1618  00DF               	movwf	___fladd@a+2
  7413  1619                     l2590:
  7414  1619  085C               	movf	___fladd@b+3,w
  7415  161A  00E1               	movwf	??___fladd
  7416  161B  0861               	movf	??___fladd,w
  7417  161C  00EC               	movwf	___fladd@grs
  7418  161D                     l2592:
  7419  161D  0860               	movf	___fladd@a+3,w
  7420  161E  00E1               	movwf	??___fladd
  7421  161F  0861               	movf	??___fladd,w
  7422  1620  00DC               	movwf	___fladd@b+3
  7423  1621                     l2594:
  7424  1621  086C               	movf	___fladd@grs,w
  7425  1622  00E1               	movwf	??___fladd
  7426  1623  0861               	movf	??___fladd,w
  7427  1624  00E0               	movwf	___fladd@a+3
  7428  1625                     l2596:
  7429  1625  01EC               	clrf	___fladd@grs
  7430  1626                     l2598:
  7431  1626  086A               	movf	___fladd@aexp,w
  7432  1627  00E1               	movwf	??___fladd
  7433  1628  01E2               	clrf	??___fladd+1
  7434  1629  0862               	movf	??___fladd+1,w
  7435  162A  00E4               	movwf	??___fladd+3
  7436  162B  086B               	movf	___fladd@bexp,w
  7437  162C  0261               	subwf	??___fladd,w
  7438  162D  00E3               	movwf	??___fladd+2
  7439  162E  1C03               	skipc
  7440  162F  03E4               	decf	??___fladd+3,f
  7441  1630  0864               	movf	??___fladd+3,w
  7442  1631  3A80               	xorlw	128
  7443  1632  00FF               	movwf	btemp+1
  7444  1633  3080               	movlw	128
  7445  1634  027F               	subwf	btemp+1,w
  7446  1635  1D03               	skipz
  7447  1636  2E39               	goto	u3455
  7448  1637  301A               	movlw	26
  7449  1638  0263               	subwf	??___fladd+2,w
  7450  1639                     u3455:
  7451  1639  1C03               	skipc
  7452  163A  2E3C               	goto	u3451
  7453  163B  2E3D               	goto	u3450
  7454  163C                     u3451:
  7455  163C  2E7A               	goto	l2614
  7456  163D                     u3450:
  7457  163D                     l2600:
  7458  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7459  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7460  163F  085C               	movf	___fladd@b+3,w
  7461  1640  045B               	iorwf	___fladd@b+2,w
  7462  1641  045A               	iorwf	___fladd@b+1,w
  7463  1642  0459               	iorwf	___fladd@b,w
  7464  1643  1D03               	skipz
  7465  1644  2E46               	goto	u3461
  7466  1645  2E48               	goto	u3460
  7467  1646                     u3461:
  7468  1646  3001               	movlw	1
  7469  1647  2E49               	goto	u3470
  7470  1648                     u3460:
  7471  1648  3000               	movlw	0
  7472  1649                     u3470:
  7473  1649  00E1               	movwf	??___fladd
  7474  164A  0861               	movf	??___fladd,w
  7475  164B  00EC               	movwf	___fladd@grs
  7476  164C  3000               	movlw	0
  7477  164D  00DC               	movwf	___fladd@b+3
  7478  164E  3000               	movlw	0
  7479  164F  00DB               	movwf	___fladd@b+2
  7480  1650  3000               	movlw	0
  7481  1651  00DA               	movwf	___fladd@b+1
  7482  1652  3000               	movlw	0
  7483  1653  00D9               	movwf	___fladd@b
  7484  1654  086A               	movf	___fladd@aexp,w
  7485  1655  00E1               	movwf	??___fladd
  7486  1656  0861               	movf	??___fladd,w
  7487  1657  00EB               	movwf	___fladd@bexp
  7488  1658  2E82               	goto	l743
  7489  1659                     l745:
  7490  1659  1C6C               	btfss	___fladd@grs,0
  7491  165A  2E5C               	goto	u3481
  7492  165B  2E5D               	goto	u3480
  7493  165C                     u3481:
  7494  165C  2E66               	goto	l2604
  7495  165D                     u3480:
  7496  165D                     l2602:
  7497  165D  086C               	movf	___fladd@grs,w
  7498  165E  00E1               	movwf	??___fladd
  7499  165F  1003               	clrc
  7500  1660  0C61               	rrf	??___fladd,w
  7501  1661  3801               	iorlw	1
  7502  1662  00E2               	movwf	??___fladd+1
  7503  1663  0862               	movf	??___fladd+1,w
  7504  1664  00EC               	movwf	___fladd@grs
  7505  1665  2E68               	goto	l2606
  7506  1666                     l2604:
  7507  1666  1003               	clrc
  7508  1667  0CEC               	rrf	___fladd@grs,f
  7509  1668                     l2606:
  7510  1668  1C59               	btfss	___fladd@b,0
  7511  1669  2E6B               	goto	u3491
  7512  166A  2E6C               	goto	u3490
  7513  166B                     u3491:
  7514  166B  2E6D               	goto	l2610
  7515  166C                     u3490:
  7516  166C                     l2608:
  7517  166C  17EC               	bsf	___fladd@grs,7
  7518  166D                     l2610:
  7519  166D  3001               	movlw	1
  7520  166E  00E1               	movwf	??___fladd
  7521  166F                     u3505:
  7522  166F  0D5C               	rlf	___fladd@b+3,w
  7523  1670  0CDC               	rrf	___fladd@b+3,f
  7524  1671  0CDB               	rrf	___fladd@b+2,f
  7525  1672  0CDA               	rrf	___fladd@b+1,f
  7526  1673  0CD9               	rrf	___fladd@b,f
  7527  1674  0BE1               	decfsz	??___fladd& (0+127),f
  7528  1675  2E6F               	goto	u3505
  7529  1676                     l2612:
  7530  1676  3001               	movlw	1
  7531  1677  00E1               	movwf	??___fladd
  7532  1678  0861               	movf	??___fladd,w
  7533  1679  07EB               	addwf	___fladd@bexp,f
  7534  167A                     l2614:
  7535  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7536  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7537  167C  086A               	movf	___fladd@aexp,w
  7538  167D  026B               	subwf	___fladd@bexp,w
  7539  167E  1C03               	skipc
  7540  167F  2E81               	goto	u3511
  7541  1680  2E82               	goto	u3510
  7542  1681                     u3511:
  7543  1681  2E59               	goto	l745
  7544  1682                     u3510:
  7545  1682                     l743:
  7546  1682  1B69               	btfsc	___fladd@signs,6
  7547  1683  2E85               	goto	u3521
  7548  1684  2E86               	goto	u3520
  7549  1685                     u3521:
  7550  1685  2ED1               	goto	l2640
  7551  1686                     u3520:
  7552  1686                     l2616:
  7553  1686  086B               	movf	___fladd@bexp,w
  7554  1687  1D03               	btfss	3,2
  7555  1688  2E8A               	goto	u3531
  7556  1689  2E8B               	goto	u3530
  7557  168A                     u3531:
  7558  168A  2E94               	goto	l2622
  7559  168B                     u3530:
  7560  168B                     l2618:
  7561  168B  3000               	movlw	0
  7562  168C  00DC               	movwf	?___fladd+3
  7563  168D  3000               	movlw	0
  7564  168E  00DB               	movwf	?___fladd+2
  7565  168F  3000               	movlw	0
  7566  1690  00DA               	movwf	?___fladd+1
  7567  1691  3000               	movlw	0
  7568  1692  00D9               	movwf	?___fladd
  7569  1693  2FFF               	goto	l752
  7570  1694                     l2622:
  7571  1694  085D               	movf	___fladd@a,w
  7572  1695  07D9               	addwf	___fladd@b,f
  7573  1696  085E               	movf	___fladd@a+1,w
  7574  1697  1103               	clrz
  7575  1698  1803               	skipnc
  7576  1699  3E01               	addlw	1
  7577  169A  1903               	skipnz
  7578  169B  2E9D               	goto	u3541
  7579  169C  07DA               	addwf	___fladd@b+1,f
  7580  169D                     u3541:
  7581  169D  085F               	movf	___fladd@a+2,w
  7582  169E  1103               	clrz
  7583  169F  1803               	skipnc
  7584  16A0  3E01               	addlw	1
  7585  16A1  1903               	skipnz
  7586  16A2  2EA4               	goto	u3542
  7587  16A3  07DB               	addwf	___fladd@b+2,f
  7588  16A4                     u3542:
  7589  16A4  0860               	movf	___fladd@a+3,w
  7590  16A5  1103               	clrz
  7591  16A6  1803               	skipnc
  7592  16A7  3E01               	addlw	1
  7593  16A8  1903               	skipnz
  7594  16A9  2EAB               	goto	u3543
  7595  16AA  07DC               	addwf	___fladd@b+3,f
  7596  16AB                     u3543:
  7597  16AB                     l2624:
  7598  16AB  1C5C               	btfss	___fladd@b+3,0
  7599  16AC  2EAE               	goto	u3551
  7600  16AD  2EAF               	goto	u3550
  7601  16AE                     u3551:
  7602  16AE  2F85               	goto	l2674
  7603  16AF                     u3550:
  7604  16AF                     l2626:
  7605  16AF  1C6C               	btfss	___fladd@grs,0
  7606  16B0  2EB2               	goto	u3561
  7607  16B1  2EB3               	goto	u3560
  7608  16B2                     u3561:
  7609  16B2  2EBC               	goto	l2630
  7610  16B3                     u3560:
  7611  16B3                     l2628:
  7612  16B3  086C               	movf	___fladd@grs,w
  7613  16B4  00E1               	movwf	??___fladd
  7614  16B5  1003               	clrc
  7615  16B6  0C61               	rrf	??___fladd,w
  7616  16B7  3801               	iorlw	1
  7617  16B8  00E2               	movwf	??___fladd+1
  7618  16B9  0862               	movf	??___fladd+1,w
  7619  16BA  00EC               	movwf	___fladd@grs
  7620  16BB  2EBE               	goto	l2632
  7621  16BC                     l2630:
  7622  16BC  1003               	clrc
  7623  16BD  0CEC               	rrf	___fladd@grs,f
  7624  16BE                     l2632:
  7625  16BE  1C59               	btfss	___fladd@b,0
  7626  16BF  2EC1               	goto	u3571
  7627  16C0  2EC2               	goto	u3570
  7628  16C1                     u3571:
  7629  16C1  2EC3               	goto	l2636
  7630  16C2                     u3570:
  7631  16C2                     l2634:
  7632  16C2  17EC               	bsf	___fladd@grs,7
  7633  16C3                     l2636:
  7634  16C3  3001               	movlw	1
  7635  16C4  00E1               	movwf	??___fladd
  7636  16C5                     u3585:
  7637  16C5  0D5C               	rlf	___fladd@b+3,w
  7638  16C6  0CDC               	rrf	___fladd@b+3,f
  7639  16C7  0CDB               	rrf	___fladd@b+2,f
  7640  16C8  0CDA               	rrf	___fladd@b+1,f
  7641  16C9  0CD9               	rrf	___fladd@b,f
  7642  16CA  0BE1               	decfsz	??___fladd& (0+127),f
  7643  16CB  2EC5               	goto	u3585
  7644  16CC                     l2638:
  7645  16CC  3001               	movlw	1
  7646  16CD  00E1               	movwf	??___fladd
  7647  16CE  0861               	movf	??___fladd,w
  7648  16CF  07EB               	addwf	___fladd@bexp,f
  7649  16D0  2F85               	goto	l2674
  7650  16D1                     l2640:
  7651  16D1  085C               	movf	___fladd@b+3,w
  7652  16D2  3A80               	xorlw	128
  7653  16D3  00FF               	movwf	btemp+1
  7654  16D4  0860               	movf	___fladd@a+3,w
  7655  16D5  3A80               	xorlw	128
  7656  16D6  027F               	subwf	btemp+1,w
  7657  16D7  1D03               	skipz
  7658  16D8  2EE3               	goto	u3593
  7659  16D9  085F               	movf	___fladd@a+2,w
  7660  16DA  025B               	subwf	___fladd@b+2,w
  7661  16DB  1D03               	skipz
  7662  16DC  2EE3               	goto	u3593
  7663  16DD  085E               	movf	___fladd@a+1,w
  7664  16DE  025A               	subwf	___fladd@b+1,w
  7665  16DF  1D03               	skipz
  7666  16E0  2EE3               	goto	u3593
  7667  16E1  085D               	movf	___fladd@a,w
  7668  16E2  0259               	subwf	___fladd@b,w
  7669  16E3                     u3593:
  7670  16E3  1803               	skipnc
  7671  16E4  2EE6               	goto	u3591
  7672  16E5  2EE7               	goto	u3590
  7673  16E6                     u3591:
  7674  16E6  2F3F               	goto	l2650
  7675  16E7                     u3590:
  7676  16E7                     l2642:
  7677  16E7  30FF               	movlw	255
  7678  16E8  00E1               	movwf	??___fladd
  7679  16E9  30FF               	movlw	255
  7680  16EA  00E2               	movwf	??___fladd+1
  7681  16EB  30FF               	movlw	255
  7682  16EC  00E3               	movwf	??___fladd+2
  7683  16ED  30FF               	movlw	255
  7684  16EE  00E4               	movwf	??___fladd+3
  7685  16EF  085D               	movf	___fladd@a,w
  7686  16F0  00E5               	movwf	??___fladd+4
  7687  16F1  085E               	movf	___fladd@a+1,w
  7688  16F2  00E6               	movwf	??___fladd+5
  7689  16F3  085F               	movf	___fladd@a+2,w
  7690  16F4  00E7               	movwf	??___fladd+6
  7691  16F5  0860               	movf	___fladd@a+3,w
  7692  16F6  00E8               	movwf	??___fladd+7
  7693  16F7  0859               	movf	___fladd@b,w
  7694  16F8  02E5               	subwf	??___fladd+4,f
  7695  16F9  085A               	movf	___fladd@b+1,w
  7696  16FA  1C03               	skipc
  7697  16FB  0F5A               	incfsz	___fladd@b+1,w
  7698  16FC  2EFE               	goto	u3601
  7699  16FD  2EFF               	goto	u3602
  7700  16FE                     u3601:
  7701  16FE  02E6               	subwf	??___fladd+5,f
  7702  16FF                     u3602:
  7703  16FF  085B               	movf	___fladd@b+2,w
  7704  1700  1C03               	skipc
  7705  1701  0F5B               	incfsz	___fladd@b+2,w
  7706  1702  2F04               	goto	u3603
  7707  1703  2F05               	goto	u3604
  7708  1704                     u3603:
  7709  1704  02E7               	subwf	??___fladd+6,f
  7710  1705                     u3604:
  7711  1705  085C               	movf	___fladd@b+3,w
  7712  1706  1C03               	skipc
  7713  1707  0F5C               	incfsz	___fladd@b+3,w
  7714  1708  2F0A               	goto	u3605
  7715  1709  2F0B               	goto	u3606
  7716  170A                     u3605:
  7717  170A  02E8               	subwf	??___fladd+7,f
  7718  170B                     u3606:
  7719  170B  0865               	movf	??___fladd+4,w
  7720  170C  07E1               	addwf	??___fladd,f
  7721  170D  0866               	movf	??___fladd+5,w
  7722  170E  1803               	skipnc
  7723  170F  0F66               	incfsz	??___fladd+5,w
  7724  1710  2F12               	goto	u3610
  7725  1711  2F13               	goto	u3611
  7726  1712                     u3610:
  7727  1712  07E2               	addwf	??___fladd+1,f
  7728  1713                     u3611:
  7729  1713  0867               	movf	??___fladd+6,w
  7730  1714  1803               	skipnc
  7731  1715  0F67               	incfsz	??___fladd+6,w
  7732  1716  2F18               	goto	u3612
  7733  1717  2F19               	goto	u3613
  7734  1718                     u3612:
  7735  1718  07E3               	addwf	??___fladd+2,f
  7736  1719                     u3613:
  7737  1719  0868               	movf	??___fladd+7,w
  7738  171A  1803               	skipnc
  7739  171B  0A68               	incf	??___fladd+7,w
  7740  171C  07E4               	addwf	??___fladd+3,f
  7741  171D  0864               	movf	??___fladd+3,w
  7742  171E  00DC               	movwf	___fladd@b+3
  7743  171F  0863               	movf	??___fladd+2,w
  7744  1720  00DB               	movwf	___fladd@b+2
  7745  1721  0862               	movf	??___fladd+1,w
  7746  1722  00DA               	movwf	___fladd@b+1
  7747  1723  0861               	movf	??___fladd,w
  7748  1724  00D9               	movwf	___fladd@b
  7749  1725                     l2644:
  7750  1725  3080               	movlw	128
  7751  1726  00E1               	movwf	??___fladd
  7752  1727  0861               	movf	??___fladd,w
  7753  1728  06E9               	xorwf	___fladd@signs,f
  7754  1729  09EC               	comf	___fladd@grs,f
  7755  172A  0AEC               	incf	___fladd@grs,f
  7756  172B                     l2646:
  7757  172B  086C               	movf	___fladd@grs,w
  7758  172C  1D03               	btfss	3,2
  7759  172D  2F2F               	goto	u3621
  7760  172E  2F30               	goto	u3620
  7761  172F                     u3621:
  7762  172F  2F4D               	goto	l760
  7763  1730                     u3620:
  7764  1730                     l2648:
  7765  1730  3001               	movlw	1
  7766  1731  07D9               	addwf	___fladd@b,f
  7767  1732  3000               	movlw	0
  7768  1733  1803               	skipnc
  7769  1734  3001               	movlw	1
  7770  1735  07DA               	addwf	___fladd@b+1,f
  7771  1736  3000               	movlw	0
  7772  1737  1803               	skipnc
  7773  1738  3001               	movlw	1
  7774  1739  07DB               	addwf	___fladd@b+2,f
  7775  173A  3000               	movlw	0
  7776  173B  1803               	skipnc
  7777  173C  3001               	movlw	1
  7778  173D  07DC               	addwf	___fladd@b+3,f
  7779  173E  2F4D               	goto	l760
  7780  173F                     l2650:
  7781  173F  085D               	movf	___fladd@a,w
  7782  1740  02D9               	subwf	___fladd@b,f
  7783  1741  085E               	movf	___fladd@a+1,w
  7784  1742  1C03               	skipc
  7785  1743  0F5E               	incfsz	___fladd@a+1,w
  7786  1744  02DA               	subwf	___fladd@b+1,f
  7787  1745  085F               	movf	___fladd@a+2,w
  7788  1746  1C03               	skipc
  7789  1747  0F5F               	incfsz	___fladd@a+2,w
  7790  1748  02DB               	subwf	___fladd@b+2,f
  7791  1749  0860               	movf	___fladd@a+3,w
  7792  174A  1C03               	skipc
  7793  174B  0F60               	incfsz	___fladd@a+3,w
  7794  174C  02DC               	subwf	___fladd@b+3,f
  7795  174D                     l760:
  7796  174D  085C               	movf	___fladd@b+3,w
  7797  174E  045B               	iorwf	___fladd@b+2,w
  7798  174F  045A               	iorwf	___fladd@b+1,w
  7799  1750  0459               	iorwf	___fladd@b,w
  7800  1751  1D03               	skipz
  7801  1752  2F54               	goto	u3631
  7802  1753  2F55               	goto	u3630
  7803  1754                     u3631:
  7804  1754  2F81               	goto	l2672
  7805  1755                     u3630:
  7806  1755                     l2652:
  7807  1755  086C               	movf	___fladd@grs,w
  7808  1756  1D03               	btfss	3,2
  7809  1757  2F59               	goto	u3641
  7810  1758  2F5A               	goto	u3640
  7811  1759                     u3641:
  7812  1759  2F81               	goto	l2672
  7813  175A                     u3640:
  7814  175A                     l2654:
  7815  175A  3000               	movlw	0
  7816  175B  00DC               	movwf	?___fladd+3
  7817  175C  3000               	movlw	0
  7818  175D  00DB               	movwf	?___fladd+2
  7819  175E  3000               	movlw	0
  7820  175F  00DA               	movwf	?___fladd+1
  7821  1760  3000               	movlw	0
  7822  1761  00D9               	movwf	?___fladd
  7823  1762  2FFF               	goto	l752
  7824  1763                     l2658:
  7825  1763  3001               	movlw	1
  7826  1764  00E1               	movwf	??___fladd
  7827  1765                     u3655:
  7828  1765  1003               	clrc
  7829  1766  0DD9               	rlf	___fladd@b,f
  7830  1767  0DDA               	rlf	___fladd@b+1,f
  7831  1768  0DDB               	rlf	___fladd@b+2,f
  7832  1769  0DDC               	rlf	___fladd@b+3,f
  7833  176A  0BE1               	decfsz	??___fladd,f
  7834  176B  2F65               	goto	u3655
  7835  176C                     l2660:
  7836  176C  1FEC               	btfss	___fladd@grs,7
  7837  176D  2F6F               	goto	u3661
  7838  176E  2F70               	goto	u3660
  7839  176F                     u3661:
  7840  176F  2F71               	goto	l764
  7841  1770                     u3660:
  7842  1770                     l2662:
  7843  1770  1459               	bsf	___fladd@b,0
  7844  1771                     l764:
  7845  1771  1C6C               	btfss	___fladd@grs,0
  7846  1772  2F74               	goto	u3671
  7847  1773  2F75               	goto	u3670
  7848  1774                     u3671:
  7849  1774  2F78               	goto	l2666
  7850  1775                     u3670:
  7851  1775                     l2664:
  7852  1775  1403               	setc
  7853  1776  0DEC               	rlf	___fladd@grs,f
  7854  1777  2F7A               	goto	l2668
  7855  1778                     l2666:
  7856  1778  1003               	clrc
  7857  1779  0DEC               	rlf	___fladd@grs,f
  7858  177A                     l2668:
  7859  177A  086B               	movf	___fladd@bexp,w
  7860  177B  1903               	btfsc	3,2
  7861  177C  2F7E               	goto	u3681
  7862  177D  2F7F               	goto	u3680
  7863  177E                     u3681:
  7864  177E  2F81               	goto	l2672
  7865  177F                     u3680:
  7866  177F                     l2670:
  7867  177F  3001               	movlw	1
  7868  1780  02EB               	subwf	___fladd@bexp,f
  7869  1781                     l2672:
  7870  1781  1FDB               	btfss	___fladd@b+2,7
  7871  1782  2F84               	goto	u3691
  7872  1783  2F85               	goto	u3690
  7873  1784                     u3691:
  7874  1784  2F63               	goto	l2658
  7875  1785                     u3690:
  7876  1785                     l2674:
  7877  1785  01EA               	clrf	___fladd@aexp
  7878  1786                     l2676:
  7879  1786  1FEC               	btfss	___fladd@grs,7
  7880  1787  2F89               	goto	u3701
  7881  1788  2F8A               	goto	u3700
  7882  1789                     u3701:
  7883  1789  2F98               	goto	l2684
  7884  178A                     u3700:
  7885  178A                     l2678:
  7886  178A  086C               	movf	___fladd@grs,w
  7887  178B  397F               	andlw	127
  7888  178C  1903               	btfsc	3,2
  7889  178D  2F8F               	goto	u3711
  7890  178E  2F90               	goto	u3710
  7891  178F                     u3711:
  7892  178F  2F93               	goto	l770
  7893  1790                     u3710:
  7894  1790                     l2680:
  7895  1790  01EA               	clrf	___fladd@aexp
  7896  1791  0AEA               	incf	___fladd@aexp,f
  7897  1792  2F98               	goto	l2684
  7898  1793                     l770:
  7899  1793  1C59               	btfss	___fladd@b,0
  7900  1794  2F96               	goto	u3721
  7901  1795  2F97               	goto	u3720
  7902  1796                     u3721:
  7903  1796  2F98               	goto	l2684
  7904  1797                     u3720:
  7905  1797  2F90               	goto	l2680
  7906  1798                     l2684:
  7907  1798  086A               	movf	___fladd@aexp,w
  7908  1799  1903               	btfsc	3,2
  7909  179A  2F9C               	goto	u3731
  7910  179B  2F9D               	goto	u3730
  7911  179C                     u3731:
  7912  179C  2FD1               	goto	l773
  7913  179D                     u3730:
  7914  179D                     l2686:
  7915  179D  3001               	movlw	1
  7916  179E  07D9               	addwf	___fladd@b,f
  7917  179F  3000               	movlw	0
  7918  17A0  1803               	skipnc
  7919  17A1  3001               	movlw	1
  7920  17A2  07DA               	addwf	___fladd@b+1,f
  7921  17A3  3000               	movlw	0
  7922  17A4  1803               	skipnc
  7923  17A5  3001               	movlw	1
  7924  17A6  07DB               	addwf	___fladd@b+2,f
  7925  17A7  3000               	movlw	0
  7926  17A8  1803               	skipnc
  7927  17A9  3001               	movlw	1
  7928  17AA  07DC               	addwf	___fladd@b+3,f
  7929  17AB                     l2688:
  7930  17AB  1C5C               	btfss	___fladd@b+3,0
  7931  17AC  2FAE               	goto	u3741
  7932  17AD  2FAF               	goto	u3740
  7933  17AE                     u3741:
  7934  17AE  2FD1               	goto	l773
  7935  17AF                     u3740:
  7936  17AF                     l2690:
  7937  17AF  0859               	movf	___fladd@b,w
  7938  17B0  00E1               	movwf	??___fladd
  7939  17B1  085A               	movf	___fladd@b+1,w
  7940  17B2  00E2               	movwf	??___fladd+1
  7941  17B3  085B               	movf	___fladd@b+2,w
  7942  17B4  00E3               	movwf	??___fladd+2
  7943  17B5  085C               	movf	___fladd@b+3,w
  7944  17B6  00E4               	movwf	??___fladd+3
  7945  17B7  3001               	movlw	1
  7946  17B8  00E5               	movwf	??___fladd+4
  7947  17B9                     u3755:
  7948  17B9  0D64               	rlf	??___fladd+3,w
  7949  17BA  0CE4               	rrf	??___fladd+3,f
  7950  17BB  0CE3               	rrf	??___fladd+2,f
  7951  17BC  0CE2               	rrf	??___fladd+1,f
  7952  17BD  0CE1               	rrf	??___fladd,f
  7953  17BE                     u3750:
  7954  17BE  0BE5               	decfsz	??___fladd+4,f
  7955  17BF  2FB9               	goto	u3755
  7956  17C0  0864               	movf	??___fladd+3,w
  7957  17C1  00DC               	movwf	___fladd@b+3
  7958  17C2  0863               	movf	??___fladd+2,w
  7959  17C3  00DB               	movwf	___fladd@b+2
  7960  17C4  0862               	movf	??___fladd+1,w
  7961  17C5  00DA               	movwf	___fladd@b+1
  7962  17C6  0861               	movf	??___fladd,w
  7963  17C7  00D9               	movwf	___fladd@b
  7964  17C8  0A6B               	incf	___fladd@bexp,w
  7965  17C9  1903               	btfsc	3,2
  7966  17CA  2FCC               	goto	u3761
  7967  17CB  2FCD               	goto	u3760
  7968  17CC                     u3761:
  7969  17CC  2FD1               	goto	l773
  7970  17CD                     u3760:
  7971  17CD                     l2692:
  7972  17CD  3001               	movlw	1
  7973  17CE  00E1               	movwf	??___fladd
  7974  17CF  0861               	movf	??___fladd,w
  7975  17D0  07EB               	addwf	___fladd@bexp,f
  7976  17D1                     l773:
  7977  17D1  0A6B               	incf	___fladd@bexp,w
  7978  17D2  1903               	btfsc	3,2
  7979  17D3  2FD5               	goto	u3771
  7980  17D4  2FD6               	goto	u3770
  7981  17D5                     u3771:
  7982  17D5  2FDB               	goto	l2696
  7983  17D6                     u3770:
  7984  17D6                     l2694:
  7985  17D6  086B               	movf	___fladd@bexp,w
  7986  17D7  1D03               	btfss	3,2
  7987  17D8  2FDA               	goto	u3781
  7988  17D9  2FDB               	goto	u3780
  7989  17DA                     u3781:
  7990  17DA  2FE9               	goto	l2702
  7991  17DB                     u3780:
  7992  17DB                     l2696:
  7993  17DB  3000               	movlw	0
  7994  17DC  00DC               	movwf	___fladd@b+3
  7995  17DD  3000               	movlw	0
  7996  17DE  00DB               	movwf	___fladd@b+2
  7997  17DF  3000               	movlw	0
  7998  17E0  00DA               	movwf	___fladd@b+1
  7999  17E1  3000               	movlw	0
  8000  17E2  00D9               	movwf	___fladd@b
  8001  17E3                     l2698:
  8002  17E3  086B               	movf	___fladd@bexp,w
  8003  17E4  1D03               	btfss	3,2
  8004  17E5  2FE7               	goto	u3791
  8005  17E6  2FE8               	goto	u3790
  8006  17E7                     u3791:
  8007  17E7  2FE9               	goto	l2702
  8008  17E8                     u3790:
  8009  17E8                     l2700:
  8010  17E8  01E9               	clrf	___fladd@signs
  8011  17E9                     l2702:
  8012  17E9  1C6B               	btfss	___fladd@bexp,0
  8013  17EA  2FEC               	goto	u3801
  8014  17EB  2FED               	goto	u3800
  8015  17EC                     u3801:
  8016  17EC  2FEF               	goto	l2706
  8017  17ED                     u3800:
  8018  17ED                     l2704:
  8019  17ED  17DB               	bsf	___fladd@b+2,7
  8020  17EE  2FF3               	goto	l781
  8021  17EF                     l2706:
  8022  17EF  307F               	movlw	127
  8023  17F0  00E1               	movwf	??___fladd
  8024  17F1  0861               	movf	??___fladd,w
  8025  17F2  05DB               	andwf	___fladd@b+2,f
  8026  17F3                     l781:
  8027  17F3  086B               	movf	___fladd@bexp,w
  8028  17F4  00E1               	movwf	??___fladd
  8029  17F5  1003               	clrc
  8030  17F6  0C61               	rrf	??___fladd,w
  8031  17F7  00E2               	movwf	??___fladd+1
  8032  17F8  0862               	movf	??___fladd+1,w
  8033  17F9  00DC               	movwf	___fladd@b+3
  8034  17FA                     l2708:
  8035  17FA  1FE9               	btfss	___fladd@signs,7
  8036  17FB  2FFD               	goto	u3811
  8037  17FC  2FFE               	goto	u3810
  8038  17FD                     u3811:
  8039  17FD  2FFF               	goto	l782
  8040  17FE                     u3810:
  8041  17FE                     l2710:
  8042  17FE  17DC               	bsf	___fladd@b+3,7
  8043  17FF                     l782:
  8044  17FF                     l752:
  8045  17FF  0008               	return
  8046  1800                     __end_of___fladd:
  8047                           
  8048                           	psect	text18
  8049  1869                     __ptext18:	
  8050 ;; *************** function ___flneg *****************
  8051 ;; Defined at:
  8052 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  f1              4    3[COMMON] unsigned char 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  4    3[COMMON] unsigned char 
  8059 ;; Registers used:
  8060 ;;		wreg
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8066 ;;      Params:         4       0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0
  8069 ;;      Totals:         4       0       0       0       0
  8070 ;;Total ram usage:        4 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    2
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_sprintf
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function ___flneg
  8082  1869                     ___flneg:
  8083  1869                     l3156:	
  8084                           ;incstack = 0
  8085                           ; Regs used in ___flneg: [wreg]
  8086                           
  8087  1869  0876               	movf	___flneg@f1+3,w
  8088  186A  0475               	iorwf	___flneg@f1+2,w
  8089  186B  0474               	iorwf	___flneg@f1+1,w
  8090  186C  0473               	iorwf	___flneg@f1,w
  8091  186D  1903               	skipnz
  8092  186E  2870               	goto	u5021
  8093  186F  2871               	goto	u5020
  8094  1870                     u5021:
  8095  1870  2873               	goto	l3160
  8096  1871                     u5020:
  8097  1871                     l3158:
  8098  1871  3080               	movlw	128
  8099  1872  06F6               	xorwf	___flneg@f1+3,f
  8100  1873                     l3160:
  8101  1873                     l611:
  8102  1873  0008               	return
  8103  1874                     __end_of___flneg:
  8104                           
  8105                           	psect	text19
  8106  1DE3                     __ptext19:	
  8107 ;; *************** function ___flge *****************
  8108 ;; Defined at:
  8109 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  ff1             4    0[BANK0 ] unsigned char 
  8112 ;;  ff2             4    4[BANK0 ] unsigned char 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;		None               void
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8124 ;;      Params:         0       8       0       0       0
  8125 ;;      Locals:         0       0       0       0       0
  8126 ;;      Temps:          4       0       0       0       0
  8127 ;;      Totals:         4       8       0       0       0
  8128 ;;Total ram usage:       12 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    2
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_sprintf
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function ___flge
  8140  1DE3                     ___flge:
  8141  1DE3                     l4160:	
  8142                           ;incstack = 0
  8143                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8144                           
  8145  1DE3  3000               	movlw	0
  8146  1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  8147  1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  8148  1DE6  0520               	andwf	___flge@ff1,w
  8149  1DE7  00F3               	movwf	??___flge
  8150  1DE8  3000               	movlw	0
  8151  1DE9  0521               	andwf	___flge@ff1+1,w
  8152  1DEA  00F4               	movwf	??___flge+1
  8153  1DEB  3080               	movlw	128
  8154  1DEC  0522               	andwf	___flge@ff1+2,w
  8155  1DED  00F5               	movwf	??___flge+2
  8156  1DEE  307F               	movlw	127
  8157  1DEF  0523               	andwf	___flge@ff1+3,w
  8158  1DF0  00F6               	movwf	??___flge+3
  8159  1DF1  0876               	movf	??___flge+3,w
  8160  1DF2  0475               	iorwf	??___flge+2,w
  8161  1DF3  0474               	iorwf	??___flge+1,w
  8162  1DF4  0473               	iorwf	??___flge,w
  8163  1DF5  1D03               	skipz
  8164  1DF6  2DF8               	goto	u7001
  8165  1DF7  2DF9               	goto	u7000
  8166  1DF8                     u7001:
  8167  1DF8  2E01               	goto	l603
  8168  1DF9                     u7000:
  8169  1DF9                     l4162:
  8170  1DF9  3000               	movlw	0
  8171  1DFA  00A3               	movwf	___flge@ff1+3
  8172  1DFB  3000               	movlw	0
  8173  1DFC  00A2               	movwf	___flge@ff1+2
  8174  1DFD  3000               	movlw	0
  8175  1DFE  00A1               	movwf	___flge@ff1+1
  8176  1DFF  3000               	movlw	0
  8177  1E00  00A0               	movwf	___flge@ff1
  8178  1E01                     l603:
  8179  1E01  3000               	movlw	0
  8180  1E02  0524               	andwf	___flge@ff2,w
  8181  1E03  00F3               	movwf	??___flge
  8182  1E04  3000               	movlw	0
  8183  1E05  0525               	andwf	___flge@ff2+1,w
  8184  1E06  00F4               	movwf	??___flge+1
  8185  1E07  3080               	movlw	128
  8186  1E08  0526               	andwf	___flge@ff2+2,w
  8187  1E09  00F5               	movwf	??___flge+2
  8188  1E0A  307F               	movlw	127
  8189  1E0B  0527               	andwf	___flge@ff2+3,w
  8190  1E0C  00F6               	movwf	??___flge+3
  8191  1E0D  0876               	movf	??___flge+3,w
  8192  1E0E  0475               	iorwf	??___flge+2,w
  8193  1E0F  0474               	iorwf	??___flge+1,w
  8194  1E10  0473               	iorwf	??___flge,w
  8195  1E11  1D03               	skipz
  8196  1E12  2E14               	goto	u7011
  8197  1E13  2E15               	goto	u7010
  8198  1E14                     u7011:
  8199  1E14  2E1D               	goto	l4166
  8200  1E15                     u7010:
  8201  1E15                     l4164:
  8202  1E15  3000               	movlw	0
  8203  1E16  00A7               	movwf	___flge@ff2+3
  8204  1E17  3000               	movlw	0
  8205  1E18  00A6               	movwf	___flge@ff2+2
  8206  1E19  3000               	movlw	0
  8207  1E1A  00A5               	movwf	___flge@ff2+1
  8208  1E1B  3000               	movlw	0
  8209  1E1C  00A4               	movwf	___flge@ff2
  8210  1E1D                     l4166:
  8211  1E1D  1FA3               	btfss	___flge@ff1+3,7
  8212  1E1E  2E20               	goto	u7021
  8213  1E1F  2E21               	goto	u7020
  8214  1E20                     u7021:
  8215  1E20  2E45               	goto	l4170
  8216  1E21                     u7020:
  8217  1E21                     l4168:
  8218  1E21  3000               	movlw	0
  8219  1E22  00F3               	movwf	??___flge
  8220  1E23  3000               	movlw	0
  8221  1E24  00F4               	movwf	??___flge+1
  8222  1E25  3000               	movlw	0
  8223  1E26  00F5               	movwf	??___flge+2
  8224  1E27  3080               	movlw	128
  8225  1E28  00F6               	movwf	??___flge+3
  8226  1E29  0820               	movf	___flge@ff1,w
  8227  1E2A  02F3               	subwf	??___flge,f
  8228  1E2B  0821               	movf	___flge@ff1+1,w
  8229  1E2C  1C03               	skipc
  8230  1E2D  0F21               	incfsz	___flge@ff1+1,w
  8231  1E2E  2E30               	goto	u7031
  8232  1E2F  2E31               	goto	u7032
  8233  1E30                     u7031:
  8234  1E30  02F4               	subwf	??___flge+1,f
  8235  1E31                     u7032:
  8236  1E31  0822               	movf	___flge@ff1+2,w
  8237  1E32  1C03               	skipc
  8238  1E33  0F22               	incfsz	___flge@ff1+2,w
  8239  1E34  2E36               	goto	u7033
  8240  1E35  2E37               	goto	u7034
  8241  1E36                     u7033:
  8242  1E36  02F5               	subwf	??___flge+2,f
  8243  1E37                     u7034:
  8244  1E37  0823               	movf	___flge@ff1+3,w
  8245  1E38  1C03               	skipc
  8246  1E39  0F23               	incfsz	___flge@ff1+3,w
  8247  1E3A  2E3C               	goto	u7035
  8248  1E3B  2E3D               	goto	u7036
  8249  1E3C                     u7035:
  8250  1E3C  02F6               	subwf	??___flge+3,f
  8251  1E3D                     u7036:
  8252  1E3D  0876               	movf	??___flge+3,w
  8253  1E3E  00A3               	movwf	___flge@ff1+3
  8254  1E3F  0875               	movf	??___flge+2,w
  8255  1E40  00A2               	movwf	___flge@ff1+2
  8256  1E41  0874               	movf	??___flge+1,w
  8257  1E42  00A1               	movwf	___flge@ff1+1
  8258  1E43  0873               	movf	??___flge,w
  8259  1E44  00A0               	movwf	___flge@ff1
  8260  1E45                     l4170:
  8261  1E45  1FA7               	btfss	___flge@ff2+3,7
  8262  1E46  2E48               	goto	u7041
  8263  1E47  2E49               	goto	u7040
  8264  1E48                     u7041:
  8265  1E48  2E6D               	goto	l606
  8266  1E49                     u7040:
  8267  1E49                     l4172:
  8268  1E49  3000               	movlw	0
  8269  1E4A  00F3               	movwf	??___flge
  8270  1E4B  3000               	movlw	0
  8271  1E4C  00F4               	movwf	??___flge+1
  8272  1E4D  3000               	movlw	0
  8273  1E4E  00F5               	movwf	??___flge+2
  8274  1E4F  3080               	movlw	128
  8275  1E50  00F6               	movwf	??___flge+3
  8276  1E51  0824               	movf	___flge@ff2,w
  8277  1E52  02F3               	subwf	??___flge,f
  8278  1E53  0825               	movf	___flge@ff2+1,w
  8279  1E54  1C03               	skipc
  8280  1E55  0F25               	incfsz	___flge@ff2+1,w
  8281  1E56  2E58               	goto	u7051
  8282  1E57  2E59               	goto	u7052
  8283  1E58                     u7051:
  8284  1E58  02F4               	subwf	??___flge+1,f
  8285  1E59                     u7052:
  8286  1E59  0826               	movf	___flge@ff2+2,w
  8287  1E5A  1C03               	skipc
  8288  1E5B  0F26               	incfsz	___flge@ff2+2,w
  8289  1E5C  2E5E               	goto	u7053
  8290  1E5D  2E5F               	goto	u7054
  8291  1E5E                     u7053:
  8292  1E5E  02F5               	subwf	??___flge+2,f
  8293  1E5F                     u7054:
  8294  1E5F  0827               	movf	___flge@ff2+3,w
  8295  1E60  1C03               	skipc
  8296  1E61  0F27               	incfsz	___flge@ff2+3,w
  8297  1E62  2E64               	goto	u7055
  8298  1E63  2E65               	goto	u7056
  8299  1E64                     u7055:
  8300  1E64  02F6               	subwf	??___flge+3,f
  8301  1E65                     u7056:
  8302  1E65  0876               	movf	??___flge+3,w
  8303  1E66  00A7               	movwf	___flge@ff2+3
  8304  1E67  0875               	movf	??___flge+2,w
  8305  1E68  00A6               	movwf	___flge@ff2+2
  8306  1E69  0874               	movf	??___flge+1,w
  8307  1E6A  00A5               	movwf	___flge@ff2+1
  8308  1E6B  0873               	movf	??___flge,w
  8309  1E6C  00A4               	movwf	___flge@ff2
  8310  1E6D                     l606:
  8311  1E6D  3080               	movlw	128
  8312  1E6E  06A3               	xorwf	___flge@ff1+3,f
  8313  1E6F  3080               	movlw	128
  8314  1E70  06A7               	xorwf	___flge@ff2+3,f
  8315  1E71  0827               	movf	___flge@ff2+3,w
  8316  1E72  0223               	subwf	___flge@ff1+3,w
  8317  1E73  1D03               	skipz
  8318  1E74  2E7F               	goto	u7065
  8319  1E75  0826               	movf	___flge@ff2+2,w
  8320  1E76  0222               	subwf	___flge@ff1+2,w
  8321  1E77  1D03               	skipz
  8322  1E78  2E7F               	goto	u7065
  8323  1E79  0825               	movf	___flge@ff2+1,w
  8324  1E7A  0221               	subwf	___flge@ff1+1,w
  8325  1E7B  1D03               	skipz
  8326  1E7C  2E7F               	goto	u7065
  8327  1E7D  0824               	movf	___flge@ff2,w
  8328  1E7E  0220               	subwf	___flge@ff1,w
  8329  1E7F                     u7065:
  8330  1E7F  1803               	skipnc
  8331  1E80  2E82               	goto	u7061
  8332  1E81  2E83               	goto	u7060
  8333  1E82                     u7061:
  8334  1E82  2E85               	goto	l4176
  8335  1E83                     u7060:
  8336  1E83                     l4174:
  8337  1E83  1003               	clrc
  8338  1E84  2E86               	goto	l607
  8339  1E85                     l4176:
  8340  1E85  1403               	setc
  8341  1E86                     l607:
  8342  1E86  0008               	return
  8343  1E87                     __end_of___flge:
  8344                           
  8345                           	psect	text20
  8346  1AA8                     __ptext20:	
  8347 ;; *************** function ___fleq *****************
  8348 ;; Defined at:
  8349 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  ff1             4    0[BANK0 ] unsigned char 
  8352 ;;  ff2             4    4[BANK0 ] unsigned char 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;		None               void
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, status,0
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8364 ;;      Params:         0       8       0       0       0
  8365 ;;      Locals:         0       0       0       0       0
  8366 ;;      Temps:          4       0       0       0       0
  8367 ;;      Totals:         4       8       0       0       0
  8368 ;;Total ram usage:       12 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    2
  8371 ;; This function calls:
  8372 ;;		Nothing
  8373 ;; This function is called by:
  8374 ;;		_sprintf
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function ___fleq
  8380  1AA8                     ___fleq:
  8381  1AA8                     l4148:	
  8382                           ;incstack = 0
  8383                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8384                           
  8385  1AA8  3000               	movlw	0
  8386  1AA9  1283               	bcf	3,5	;RP0=0, select bank0
  8387  1AAA  1303               	bcf	3,6	;RP1=0, select bank0
  8388  1AAB  0520               	andwf	___fleq@ff1,w
  8389  1AAC  00F3               	movwf	??___fleq
  8390  1AAD  3000               	movlw	0
  8391  1AAE  0521               	andwf	___fleq@ff1+1,w
  8392  1AAF  00F4               	movwf	??___fleq+1
  8393  1AB0  3080               	movlw	128
  8394  1AB1  0522               	andwf	___fleq@ff1+2,w
  8395  1AB2  00F5               	movwf	??___fleq+2
  8396  1AB3  307F               	movlw	127
  8397  1AB4  0523               	andwf	___fleq@ff1+3,w
  8398  1AB5  00F6               	movwf	??___fleq+3
  8399  1AB6  0876               	movf	??___fleq+3,w
  8400  1AB7  0475               	iorwf	??___fleq+2,w
  8401  1AB8  0474               	iorwf	??___fleq+1,w
  8402  1AB9  0473               	iorwf	??___fleq,w
  8403  1ABA  1D03               	skipz
  8404  1ABB  2ABD               	goto	u6971
  8405  1ABC  2ABE               	goto	u6970
  8406  1ABD                     u6971:
  8407  1ABD  2AC6               	goto	l598
  8408  1ABE                     u6970:
  8409  1ABE                     l4150:
  8410  1ABE  3000               	movlw	0
  8411  1ABF  00A3               	movwf	___fleq@ff1+3
  8412  1AC0  3000               	movlw	0
  8413  1AC1  00A2               	movwf	___fleq@ff1+2
  8414  1AC2  3000               	movlw	0
  8415  1AC3  00A1               	movwf	___fleq@ff1+1
  8416  1AC4  3000               	movlw	0
  8417  1AC5  00A0               	movwf	___fleq@ff1
  8418  1AC6                     l598:
  8419  1AC6  3000               	movlw	0
  8420  1AC7  0524               	andwf	___fleq@ff2,w
  8421  1AC8  00F3               	movwf	??___fleq
  8422  1AC9  3000               	movlw	0
  8423  1ACA  0525               	andwf	___fleq@ff2+1,w
  8424  1ACB  00F4               	movwf	??___fleq+1
  8425  1ACC  3080               	movlw	128
  8426  1ACD  0526               	andwf	___fleq@ff2+2,w
  8427  1ACE  00F5               	movwf	??___fleq+2
  8428  1ACF  307F               	movlw	127
  8429  1AD0  0527               	andwf	___fleq@ff2+3,w
  8430  1AD1  00F6               	movwf	??___fleq+3
  8431  1AD2  0876               	movf	??___fleq+3,w
  8432  1AD3  0475               	iorwf	??___fleq+2,w
  8433  1AD4  0474               	iorwf	??___fleq+1,w
  8434  1AD5  0473               	iorwf	??___fleq,w
  8435  1AD6  1D03               	skipz
  8436  1AD7  2AD9               	goto	u6981
  8437  1AD8  2ADA               	goto	u6980
  8438  1AD9                     u6981:
  8439  1AD9  2AE2               	goto	l599
  8440  1ADA                     u6980:
  8441  1ADA                     l4152:
  8442  1ADA  3000               	movlw	0
  8443  1ADB  00A7               	movwf	___fleq@ff2+3
  8444  1ADC  3000               	movlw	0
  8445  1ADD  00A6               	movwf	___fleq@ff2+2
  8446  1ADE  3000               	movlw	0
  8447  1ADF  00A5               	movwf	___fleq@ff2+1
  8448  1AE0  3000               	movlw	0
  8449  1AE1  00A4               	movwf	___fleq@ff2
  8450  1AE2                     l599:
  8451  1AE2  0827               	movf	___fleq@ff2+3,w
  8452  1AE3  0623               	xorwf	___fleq@ff1+3,w
  8453  1AE4  1D03               	skipz
  8454  1AE5  2AF0               	goto	u6995
  8455  1AE6  0826               	movf	___fleq@ff2+2,w
  8456  1AE7  0622               	xorwf	___fleq@ff1+2,w
  8457  1AE8  1D03               	skipz
  8458  1AE9  2AF0               	goto	u6995
  8459  1AEA  0825               	movf	___fleq@ff2+1,w
  8460  1AEB  0621               	xorwf	___fleq@ff1+1,w
  8461  1AEC  1D03               	skipz
  8462  1AED  2AF0               	goto	u6995
  8463  1AEE  0824               	movf	___fleq@ff2,w
  8464  1AEF  0620               	xorwf	___fleq@ff1,w
  8465  1AF0                     u6995:
  8466  1AF0  1903               	skipnz
  8467  1AF1  2AF3               	goto	u6991
  8468  1AF2  2AF4               	goto	u6990
  8469  1AF3                     u6991:
  8470  1AF3  2AF6               	goto	l4156
  8471  1AF4                     u6990:
  8472  1AF4                     l4154:
  8473  1AF4  1003               	clrc
  8474  1AF5  2AF7               	goto	l600
  8475  1AF6                     l4156:
  8476  1AF6  1403               	setc
  8477  1AF7                     l600:
  8478  1AF7  0008               	return
  8479  1AF8                     __end_of___fleq:
  8480                           
  8481                           	psect	text21
  8482  07EA                     __ptext21:	
  8483 ;; *************** function _setup *****************
  8484 ;; Defined at:
  8485 ;;		line 109 in file "main.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		status,2
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8499 ;;      Params:         0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0
  8501 ;;      Temps:          0       0       0       0       0
  8502 ;;      Totals:         0       0       0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    2
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_main
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           
  8514                           ;psect for function _setup
  8515  07EA                     _setup:
  8516  07EA                     l3276:	
  8517                           ;incstack = 0
  8518                           ; Regs used in _setup: [status,2]
  8519                           
  8520  07EA  1683               	bsf	3,5	;RP0=1, select bank3
  8521  07EB  1703               	bsf	3,6	;RP1=1, select bank3
  8522  07EC  0188               	clrf	8	;volatile
  8523  07ED  0189               	clrf	9	;volatile
  8524  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  8525  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  8526  07F0  0188               	clrf	8	;volatile
  8527  07F1  0189               	clrf	9	;volatile
  8528  07F2  1683               	bsf	3,5	;RP0=1, select bank1
  8529  07F3  1303               	bcf	3,6	;RP1=0, select bank1
  8530  07F4  0188               	clrf	8	;volatile
  8531  07F5  0189               	clrf	9	;volatile
  8532  07F6                     l3278:
  8533  07F6  170B               	bsf	11,6	;volatile
  8534  07F7                     l3280:
  8535  07F7  168C               	bsf	12,5	;volatile
  8536  07F8                     l3282:
  8537  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  8538  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  8539  07FA  128C               	bcf	12,5	;volatile
  8540  07FB                     l3284:
  8541  07FB  178B               	bsf	11,7	;volatile
  8542  07FC                     l83:
  8543  07FC  0008               	return
  8544  07FD                     __end_of_setup:
  8545                           
  8546                           	psect	text22
  8547  18B0                     __ptext22:	
  8548 ;; *************** function _set_cursor *****************
  8549 ;; Defined at:
  8550 ;;		line 57 in file "LCD.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  a               1    wreg     unsigned char 
  8553 ;;  b               1    7[COMMON] unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  a               1    1[BANK0 ] unsigned char 
  8556 ;;  x               1    2[BANK0 ] unsigned char 
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  1    wreg      void 
  8559 ;; Registers used:
  8560 ;;		wreg, status,2, status,0, pclath, cstack
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8566 ;;      Params:         1       0       0       0       0
  8567 ;;      Locals:         0       2       0       0       0
  8568 ;;      Temps:          0       1       0       0       0
  8569 ;;      Totals:         1       3       0       0       0
  8570 ;;Total ram usage:        4 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; Hardware stack levels required when called:    4
  8573 ;; This function calls:
  8574 ;;		_CMDs
  8575 ;; This function is called by:
  8576 ;;		_main
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           
  8581                           ;psect for function _set_cursor
  8582  18B0                     _set_cursor:
  8583                           
  8584                           ;incstack = 0
  8585                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8586                           ;set_cursor@a stored from wreg
  8587  18B0  1283               	bcf	3,5	;RP0=0, select bank0
  8588  18B1  1303               	bcf	3,6	;RP1=0, select bank0
  8589  18B2  00A1               	movwf	set_cursor@a
  8590  18B3                     l4492:
  8591                           
  8592                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  8593  18B3  0321               	decf	set_cursor@a,w
  8594  18B4  1D03               	btfss	3,2
  8595  18B5  28B7               	goto	u7681
  8596  18B6  28B8               	goto	u7680
  8597  18B7                     u7681:
  8598  18B7  28C4               	goto	l4498
  8599  18B8                     u7680:
  8600  18B8                     l4494:
  8601                           
  8602                           ;LCD.c: 60:        x = 0x80 + b;
  8603  18B8  0877               	movf	set_cursor@b,w
  8604  18B9  3E80               	addlw	128
  8605  18BA  00A0               	movwf	??_set_cursor
  8606  18BB  0820               	movf	??_set_cursor,w
  8607  18BC  00A2               	movwf	set_cursor@x
  8608  18BD                     l4496:
  8609                           
  8610                           ;LCD.c: 61:        CMDs(x);
  8611  18BD  0822               	movf	set_cursor@x,w
  8612  18BE  160A  158A  2090  160A  158A  	fcall	_CMDs
  8613                           
  8614                           ;LCD.c: 62:     }
  8615  18C3  28D5               	goto	l136
  8616  18C4                     l4498:
  8617  18C4  3002               	movlw	2
  8618  18C5  0621               	xorwf	set_cursor@a,w
  8619  18C6  1D03               	btfss	3,2
  8620  18C7  28C9               	goto	u7691
  8621  18C8  28CA               	goto	u7690
  8622  18C9                     u7691:
  8623  18C9  28D5               	goto	l136
  8624  18CA                     u7690:
  8625  18CA                     l4500:
  8626                           
  8627                           ;LCD.c: 64:         x = 0xC0 + b;
  8628  18CA  0877               	movf	set_cursor@b,w
  8629  18CB  3EC0               	addlw	192
  8630  18CC  00A0               	movwf	??_set_cursor
  8631  18CD  0820               	movf	??_set_cursor,w
  8632  18CE  00A2               	movwf	set_cursor@x
  8633  18CF                     l4502:
  8634                           
  8635                           ;LCD.c: 65:         CMDs(x);
  8636  18CF  0822               	movf	set_cursor@x,w
  8637  18D0  160A  158A  2090  160A  158A  	fcall	_CMDs
  8638  18D5                     l136:
  8639  18D5  0008               	return
  8640  18D6                     __end_of_set_cursor:
  8641                           
  8642                           	psect	text23
  8643  19B0                     __ptext23:	
  8644 ;; *************** function _conversion *****************
  8645 ;; Defined at:
  8646 ;;		line 98 in file "main.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;  x               1    wreg     unsigned char 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  x               1   45[BANK0 ] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  4   37[BANK0 ] float 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8660 ;;      Params:         0       4       0       0       0
  8661 ;;      Locals:         0       1       0       0       0
  8662 ;;      Temps:          0       4       0       0       0
  8663 ;;      Totals:         0       9       0       0       0
  8664 ;;Total ram usage:        9 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    4
  8667 ;; This function calls:
  8668 ;;		___flmul
  8669 ;;		___xxtofl
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function _conversion
  8677  19B0                     _conversion:
  8678                           
  8679                           ;incstack = 0
  8680                           ; Regs used in _conversion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8681                           ;conversion@x stored from wreg
  8682  19B0  1283               	bcf	3,5	;RP0=0, select bank0
  8683  19B1  1303               	bcf	3,6	;RP1=0, select bank0
  8684  19B2  00CD               	movwf	conversion@x
  8685  19B3                     l4286:
  8686  19B3  303C               	movlw	60
  8687  19B4  00AE               	movwf	___flmul@b+3
  8688  19B5  30A0               	movlw	160
  8689  19B6  00AD               	movwf	___flmul@b+2
  8690  19B7  3090               	movlw	144
  8691  19B8  00AC               	movwf	___flmul@b+1
  8692  19B9  302E               	movlw	46
  8693  19BA  00AB               	movwf	___flmul@b
  8694  19BB  084D               	movf	conversion@x,w
  8695  19BC  00C9               	movwf	??_conversion
  8696  19BD  01CA               	clrf	??_conversion+1
  8697  19BE  01CB               	clrf	??_conversion+2
  8698  19BF  01CC               	clrf	??_conversion+3
  8699  19C0  084C               	movf	??_conversion+3,w
  8700  19C1  00F6               	movwf	___xxtofl@val+3
  8701  19C2  084B               	movf	??_conversion+2,w
  8702  19C3  00F5               	movwf	___xxtofl@val+2
  8703  19C4  084A               	movf	??_conversion+1,w
  8704  19C5  00F4               	movwf	___xxtofl@val+1
  8705  19C6  0849               	movf	??_conversion,w
  8706  19C7  00F3               	movwf	___xxtofl@val
  8707  19C8  3001               	movlw	1
  8708  19C9  160A  158A  2687  160A  158A  	fcall	___xxtofl
  8709  19CE  0876               	movf	?___xxtofl+3,w
  8710  19CF  1283               	bcf	3,5	;RP0=0, select bank0
  8711  19D0  1303               	bcf	3,6	;RP1=0, select bank0
  8712  19D1  00B2               	movwf	___flmul@a+3
  8713  19D2  0875               	movf	?___xxtofl+2,w
  8714  19D3  00B1               	movwf	___flmul@a+2
  8715  19D4  0874               	movf	?___xxtofl+1,w
  8716  19D5  00B0               	movwf	___flmul@a+1
  8717  19D6  0873               	movf	?___xxtofl,w
  8718  19D7  00AF               	movwf	___flmul@a
  8719  19D8  120A  158A  213C  160A  158A  	fcall	___flmul
  8720  19DD  1283               	bcf	3,5	;RP0=0, select bank0
  8721  19DE  1303               	bcf	3,6	;RP1=0, select bank0
  8722  19DF  082E               	movf	?___flmul+3,w
  8723  19E0  00C8               	movwf	?_conversion+3
  8724  19E1  082D               	movf	?___flmul+2,w
  8725  19E2  00C7               	movwf	?_conversion+2
  8726  19E3  082C               	movf	?___flmul+1,w
  8727  19E4  00C6               	movwf	?_conversion+1
  8728  19E5  082B               	movf	?___flmul,w
  8729  19E6  00C5               	movwf	?_conversion
  8730  19E7                     l80:
  8731  19E7  0008               	return
  8732  19E8                     __end_of_conversion:
  8733                           
  8734                           	psect	text24
  8735  1E87                     __ptext24:	
  8736 ;; *************** function ___xxtofl *****************
  8737 ;; Defined at:
  8738 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  sign            1    wreg     unsigned char 
  8741 ;;  val             4    3[COMMON] long 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  sign            1    4[BANK0 ] unsigned char 
  8744 ;;  arg             4    6[BANK0 ] unsigned long 
  8745 ;;  exp             1    5[BANK0 ] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  4    3[COMMON] unsigned char 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8755 ;;      Params:         4       0       0       0       0
  8756 ;;      Locals:         0       6       0       0       0
  8757 ;;      Temps:          0       4       0       0       0
  8758 ;;      Totals:         4      10       0       0       0
  8759 ;;Total ram usage:       14 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    2
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_conversion
  8766 ;;		_sprintf
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           
  8771                           ;psect for function ___xxtofl
  8772  1E87                     ___xxtofl:
  8773                           
  8774                           ;incstack = 0
  8775                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8776                           ;___xxtofl@sign stored from wreg
  8777  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  8778  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  8779  1E89  00A4               	movwf	___xxtofl@sign
  8780  1E8A                     l4200:
  8781  1E8A  0824               	movf	___xxtofl@sign,w
  8782  1E8B  1903               	btfsc	3,2
  8783  1E8C  2E8E               	goto	u7131
  8784  1E8D  2E8F               	goto	u7130
  8785  1E8E                     u7131:
  8786  1E8E  2EA3               	goto	l4206
  8787  1E8F                     u7130:
  8788  1E8F                     l4202:
  8789  1E8F  1FF6               	btfss	___xxtofl@val+3,7
  8790  1E90  2E92               	goto	u7141
  8791  1E91  2E93               	goto	u7140
  8792  1E92                     u7141:
  8793  1E92  2EA3               	goto	l4206
  8794  1E93                     u7140:
  8795  1E93                     l4204:
  8796  1E93  0973               	comf	___xxtofl@val,w
  8797  1E94  00A6               	movwf	___xxtofl@arg
  8798  1E95  0974               	comf	___xxtofl@val+1,w
  8799  1E96  00A7               	movwf	___xxtofl@arg+1
  8800  1E97  0975               	comf	___xxtofl@val+2,w
  8801  1E98  00A8               	movwf	___xxtofl@arg+2
  8802  1E99  0976               	comf	___xxtofl@val+3,w
  8803  1E9A  00A9               	movwf	___xxtofl@arg+3
  8804  1E9B  0AA6               	incf	___xxtofl@arg,f
  8805  1E9C  1903               	skipnz
  8806  1E9D  0AA7               	incf	___xxtofl@arg+1,f
  8807  1E9E  1903               	skipnz
  8808  1E9F  0AA8               	incf	___xxtofl@arg+2,f
  8809  1EA0  1903               	skipnz
  8810  1EA1  0AA9               	incf	___xxtofl@arg+3,f
  8811  1EA2  2EAB               	goto	l879
  8812  1EA3                     l4206:
  8813  1EA3  0876               	movf	___xxtofl@val+3,w
  8814  1EA4  00A9               	movwf	___xxtofl@arg+3
  8815  1EA5  0875               	movf	___xxtofl@val+2,w
  8816  1EA6  00A8               	movwf	___xxtofl@arg+2
  8817  1EA7  0874               	movf	___xxtofl@val+1,w
  8818  1EA8  00A7               	movwf	___xxtofl@arg+1
  8819  1EA9  0873               	movf	___xxtofl@val,w
  8820  1EAA  00A6               	movwf	___xxtofl@arg
  8821  1EAB                     l879:
  8822  1EAB  0876               	movf	___xxtofl@val+3,w
  8823  1EAC  0475               	iorwf	___xxtofl@val+2,w
  8824  1EAD  0474               	iorwf	___xxtofl@val+1,w
  8825  1EAE  0473               	iorwf	___xxtofl@val,w
  8826  1EAF  1D03               	skipz
  8827  1EB0  2EB2               	goto	u7151
  8828  1EB1  2EB3               	goto	u7150
  8829  1EB2                     u7151:
  8830  1EB2  2EBC               	goto	l4212
  8831  1EB3                     u7150:
  8832  1EB3                     l4208:
  8833  1EB3  3000               	movlw	0
  8834  1EB4  00F6               	movwf	?___xxtofl+3
  8835  1EB5  3000               	movlw	0
  8836  1EB6  00F5               	movwf	?___xxtofl+2
  8837  1EB7  3000               	movlw	0
  8838  1EB8  00F4               	movwf	?___xxtofl+1
  8839  1EB9  3000               	movlw	0
  8840  1EBA  00F3               	movwf	?___xxtofl
  8841  1EBB  2F42               	goto	l881
  8842  1EBC                     l4212:
  8843  1EBC  3096               	movlw	150
  8844  1EBD  00A0               	movwf	??___xxtofl
  8845  1EBE  0820               	movf	??___xxtofl,w
  8846  1EBF  00A5               	movwf	___xxtofl@exp
  8847  1EC0  2ECE               	goto	l4216
  8848  1EC1                     l4214:
  8849  1EC1  3001               	movlw	1
  8850  1EC2  00A0               	movwf	??___xxtofl
  8851  1EC3  0820               	movf	??___xxtofl,w
  8852  1EC4  07A5               	addwf	___xxtofl@exp,f
  8853  1EC5  3001               	movlw	1
  8854  1EC6                     u7165:
  8855  1EC6  1003               	clrc
  8856  1EC7  0CA9               	rrf	___xxtofl@arg+3,f
  8857  1EC8  0CA8               	rrf	___xxtofl@arg+2,f
  8858  1EC9  0CA7               	rrf	___xxtofl@arg+1,f
  8859  1ECA  0CA6               	rrf	___xxtofl@arg,f
  8860  1ECB  3EFF               	addlw	-1
  8861  1ECC  1D03               	skipz
  8862  1ECD  2EC6               	goto	u7165
  8863  1ECE                     l4216:
  8864  1ECE  30FE               	movlw	254
  8865  1ECF  0529               	andwf	___xxtofl@arg+3,w
  8866  1ED0  1D03               	btfss	3,2
  8867  1ED1  2ED3               	goto	u7171
  8868  1ED2  2ED4               	goto	u7170
  8869  1ED3                     u7171:
  8870  1ED3  2EC1               	goto	l4214
  8871  1ED4                     u7170:
  8872  1ED4  2EF0               	goto	l885
  8873  1ED5                     l4218:
  8874  1ED5  3001               	movlw	1
  8875  1ED6  00A0               	movwf	??___xxtofl
  8876  1ED7  0820               	movf	??___xxtofl,w
  8877  1ED8  07A5               	addwf	___xxtofl@exp,f
  8878  1ED9                     l4220:
  8879  1ED9  3001               	movlw	1
  8880  1EDA  07A6               	addwf	___xxtofl@arg,f
  8881  1EDB  3000               	movlw	0
  8882  1EDC  1803               	skipnc
  8883  1EDD  3001               	movlw	1
  8884  1EDE  07A7               	addwf	___xxtofl@arg+1,f
  8885  1EDF  3000               	movlw	0
  8886  1EE0  1803               	skipnc
  8887  1EE1  3001               	movlw	1
  8888  1EE2  07A8               	addwf	___xxtofl@arg+2,f
  8889  1EE3  3000               	movlw	0
  8890  1EE4  1803               	skipnc
  8891  1EE5  3001               	movlw	1
  8892  1EE6  07A9               	addwf	___xxtofl@arg+3,f
  8893  1EE7                     l4222:
  8894  1EE7  3001               	movlw	1
  8895  1EE8                     u7185:
  8896  1EE8  1003               	clrc
  8897  1EE9  0CA9               	rrf	___xxtofl@arg+3,f
  8898  1EEA  0CA8               	rrf	___xxtofl@arg+2,f
  8899  1EEB  0CA7               	rrf	___xxtofl@arg+1,f
  8900  1EEC  0CA6               	rrf	___xxtofl@arg,f
  8901  1EED  3EFF               	addlw	-1
  8902  1EEE  1D03               	skipz
  8903  1EEF  2EE8               	goto	u7185
  8904  1EF0                     l885:
  8905  1EF0  30FF               	movlw	255
  8906  1EF1  0529               	andwf	___xxtofl@arg+3,w
  8907  1EF2  1D03               	btfss	3,2
  8908  1EF3  2EF5               	goto	u7191
  8909  1EF4  2EF6               	goto	u7190
  8910  1EF5                     u7191:
  8911  1EF5  2ED5               	goto	l4218
  8912  1EF6                     u7190:
  8913  1EF6  2F02               	goto	l4226
  8914  1EF7                     l4224:
  8915  1EF7  3001               	movlw	1
  8916  1EF8  02A5               	subwf	___xxtofl@exp,f
  8917  1EF9  3001               	movlw	1
  8918  1EFA  00A0               	movwf	??___xxtofl
  8919  1EFB                     u7205:
  8920  1EFB  1003               	clrc
  8921  1EFC  0DA6               	rlf	___xxtofl@arg,f
  8922  1EFD  0DA7               	rlf	___xxtofl@arg+1,f
  8923  1EFE  0DA8               	rlf	___xxtofl@arg+2,f
  8924  1EFF  0DA9               	rlf	___xxtofl@arg+3,f
  8925  1F00  0BA0               	decfsz	??___xxtofl,f
  8926  1F01  2EFB               	goto	u7205
  8927  1F02                     l4226:
  8928  1F02  1BA8               	btfsc	___xxtofl@arg+2,7
  8929  1F03  2F05               	goto	u7211
  8930  1F04  2F06               	goto	u7210
  8931  1F05                     u7211:
  8932  1F05  2F0C               	goto	l892
  8933  1F06                     u7210:
  8934  1F06                     l4228:
  8935  1F06  3002               	movlw	2
  8936  1F07  0225               	subwf	___xxtofl@exp,w
  8937  1F08  1803               	skipnc
  8938  1F09  2F0B               	goto	u7221
  8939  1F0A  2F0C               	goto	u7220
  8940  1F0B                     u7221:
  8941  1F0B  2EF7               	goto	l4224
  8942  1F0C                     u7220:
  8943  1F0C                     l892:
  8944  1F0C  1825               	btfsc	___xxtofl@exp,0
  8945  1F0D  2F0F               	goto	u7231
  8946  1F0E  2F10               	goto	u7230
  8947  1F0F                     u7231:
  8948  1F0F  2F18               	goto	l893
  8949  1F10                     u7230:
  8950  1F10                     l4230:
  8951  1F10  30FF               	movlw	255
  8952  1F11  05A6               	andwf	___xxtofl@arg,f
  8953  1F12  30FF               	movlw	255
  8954  1F13  05A7               	andwf	___xxtofl@arg+1,f
  8955  1F14  307F               	movlw	127
  8956  1F15  05A8               	andwf	___xxtofl@arg+2,f
  8957  1F16  30FF               	movlw	255
  8958  1F17  05A9               	andwf	___xxtofl@arg+3,f
  8959  1F18                     l893:
  8960  1F18  1003               	clrc
  8961  1F19  0CA5               	rrf	___xxtofl@exp,f
  8962  1F1A                     l4232:
  8963  1F1A  0825               	movf	___xxtofl@exp,w
  8964  1F1B  00A0               	movwf	??___xxtofl
  8965  1F1C  01A1               	clrf	??___xxtofl+1
  8966  1F1D  01A2               	clrf	??___xxtofl+2
  8967  1F1E  01A3               	clrf	??___xxtofl+3
  8968  1F1F  3018               	movlw	24
  8969  1F20                     u7245:
  8970  1F20  1003               	clrc
  8971  1F21  0DA0               	rlf	??___xxtofl,f
  8972  1F22  0DA1               	rlf	??___xxtofl+1,f
  8973  1F23  0DA2               	rlf	??___xxtofl+2,f
  8974  1F24  0DA3               	rlf	??___xxtofl+3,f
  8975  1F25                     u7240:
  8976  1F25  3EFF               	addlw	-1
  8977  1F26  1D03               	skipz
  8978  1F27  2F20               	goto	u7245
  8979  1F28  0820               	movf	??___xxtofl,w
  8980  1F29  04A6               	iorwf	___xxtofl@arg,f
  8981  1F2A  0821               	movf	??___xxtofl+1,w
  8982  1F2B  04A7               	iorwf	___xxtofl@arg+1,f
  8983  1F2C  0822               	movf	??___xxtofl+2,w
  8984  1F2D  04A8               	iorwf	___xxtofl@arg+2,f
  8985  1F2E  0823               	movf	??___xxtofl+3,w
  8986  1F2F  04A9               	iorwf	___xxtofl@arg+3,f
  8987  1F30                     l4234:
  8988  1F30  0824               	movf	___xxtofl@sign,w
  8989  1F31  1903               	btfsc	3,2
  8990  1F32  2F34               	goto	u7251
  8991  1F33  2F35               	goto	u7250
  8992  1F34                     u7251:
  8993  1F34  2F3A               	goto	l4240
  8994  1F35                     u7250:
  8995  1F35                     l4236:
  8996  1F35  1FF6               	btfss	___xxtofl@val+3,7
  8997  1F36  2F38               	goto	u7261
  8998  1F37  2F39               	goto	u7260
  8999  1F38                     u7261:
  9000  1F38  2F3A               	goto	l4240
  9001  1F39                     u7260:
  9002  1F39                     l4238:
  9003  1F39  17A9               	bsf	___xxtofl@arg+3,7
  9004  1F3A                     l4240:
  9005  1F3A  0829               	movf	___xxtofl@arg+3,w
  9006  1F3B  00F6               	movwf	?___xxtofl+3
  9007  1F3C  0828               	movf	___xxtofl@arg+2,w
  9008  1F3D  00F5               	movwf	?___xxtofl+2
  9009  1F3E  0827               	movf	___xxtofl@arg+1,w
  9010  1F3F  00F4               	movwf	?___xxtofl+1
  9011  1F40  0826               	movf	___xxtofl@arg,w
  9012  1F41  00F3               	movwf	?___xxtofl
  9013  1F42                     l881:
  9014  1F42  0008               	return
  9015  1F43                     __end_of___xxtofl:
  9016                           
  9017                           	psect	text25
  9018  093C                     __ptext25:	
  9019 ;; *************** function ___flmul *****************
  9020 ;; Defined at:
  9021 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  b               4   11[BANK0 ] unsigned char 
  9024 ;;  a               4   15[BANK0 ] unsigned char 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  prod            4   31[BANK0 ] struct .
  9027 ;;  grs             4   25[BANK0 ] unsigned long 
  9028 ;;  temp            2   35[BANK0 ] struct .
  9029 ;;  bexp            1   30[BANK0 ] unsigned char 
  9030 ;;  aexp            1   29[BANK0 ] unsigned char 
  9031 ;;  sign            1   24[BANK0 ] unsigned char 
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  4   11[BANK0 ] unsigned char 
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9041 ;;      Params:         0       8       0       0       0
  9042 ;;      Locals:         0      13       0       0       0
  9043 ;;      Temps:          0       5       0       0       0
  9044 ;;      Totals:         0      26       0       0       0
  9045 ;;Total ram usage:       26 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    3
  9048 ;; This function calls:
  9049 ;;		__Umul8_16
  9050 ;; This function is called by:
  9051 ;;		_conversion
  9052 ;;		_fround
  9053 ;;		_scale
  9054 ;;		_sprintf
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           
  9059                           ;psect for function ___flmul
  9060  093C                     ___flmul:
  9061  093C                     l2712:	
  9062                           ;incstack = 0
  9063                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9064                           
  9065  093C  1283               	bcf	3,5	;RP0=0, select bank0
  9066  093D  1303               	bcf	3,6	;RP1=0, select bank0
  9067  093E  082E               	movf	___flmul@b+3,w
  9068  093F  3980               	andlw	128
  9069  0940  00B3               	movwf	??___flmul
  9070  0941  0833               	movf	??___flmul,w
  9071  0942  00B8               	movwf	___flmul@sign
  9072  0943                     l2714:
  9073  0943  082E               	movf	___flmul@b+3,w
  9074  0944  00B3               	movwf	??___flmul
  9075  0945  0733               	addwf	??___flmul,w
  9076  0946  00B4               	movwf	??___flmul+1
  9077  0947  0834               	movf	??___flmul+1,w
  9078  0948  00BE               	movwf	___flmul@bexp
  9079  0949                     l2716:
  9080  0949  1FAD               	btfss	___flmul@b+2,7
  9081  094A  294C               	goto	u3821
  9082  094B  294D               	goto	u3820
  9083  094C                     u3821:
  9084  094C  294E               	goto	l2720
  9085  094D                     u3820:
  9086  094D                     l2718:
  9087  094D  143E               	bsf	___flmul@bexp,0
  9088  094E                     l2720:
  9089  094E  083E               	movf	___flmul@bexp,w
  9090  094F  1903               	btfsc	3,2
  9091  0950  2952               	goto	u3831
  9092  0951  2953               	goto	u3830
  9093  0952                     u3831:
  9094  0952  2962               	goto	l2728
  9095  0953                     u3830:
  9096  0953                     l2722:
  9097  0953  0A3E               	incf	___flmul@bexp,w
  9098  0954  1D03               	btfss	3,2
  9099  0955  2957               	goto	u3841
  9100  0956  2958               	goto	u3840
  9101  0957                     u3841:
  9102  0957  2960               	goto	l2726
  9103  0958                     u3840:
  9104  0958                     l2724:
  9105  0958  3000               	movlw	0
  9106  0959  00AE               	movwf	___flmul@b+3
  9107  095A  3000               	movlw	0
  9108  095B  00AD               	movwf	___flmul@b+2
  9109  095C  3000               	movlw	0
  9110  095D  00AC               	movwf	___flmul@b+1
  9111  095E  3000               	movlw	0
  9112  095F  00AB               	movwf	___flmul@b
  9113  0960                     l2726:
  9114  0960  17AD               	bsf	___flmul@b+2,7
  9115  0961  296A               	goto	l2730
  9116  0962                     l2728:
  9117  0962  3000               	movlw	0
  9118  0963  00AE               	movwf	___flmul@b+3
  9119  0964  3000               	movlw	0
  9120  0965  00AD               	movwf	___flmul@b+2
  9121  0966  3000               	movlw	0
  9122  0967  00AC               	movwf	___flmul@b+1
  9123  0968  3000               	movlw	0
  9124  0969  00AB               	movwf	___flmul@b
  9125  096A                     l2730:
  9126  096A  0832               	movf	___flmul@a+3,w
  9127  096B  3980               	andlw	128
  9128  096C  00B3               	movwf	??___flmul
  9129  096D  0833               	movf	??___flmul,w
  9130  096E  06B8               	xorwf	___flmul@sign,f
  9131  096F                     l2732:
  9132  096F  0832               	movf	___flmul@a+3,w
  9133  0970  00B3               	movwf	??___flmul
  9134  0971  0733               	addwf	??___flmul,w
  9135  0972  00B4               	movwf	??___flmul+1
  9136  0973  0834               	movf	??___flmul+1,w
  9137  0974  00BD               	movwf	___flmul@aexp
  9138  0975                     l2734:
  9139  0975  1FB1               	btfss	___flmul@a+2,7
  9140  0976  2978               	goto	u3851
  9141  0977  2979               	goto	u3850
  9142  0978                     u3851:
  9143  0978  297A               	goto	l2738
  9144  0979                     u3850:
  9145  0979                     l2736:
  9146  0979  143D               	bsf	___flmul@aexp,0
  9147  097A                     l2738:
  9148  097A  083D               	movf	___flmul@aexp,w
  9149  097B  1903               	btfsc	3,2
  9150  097C  297E               	goto	u3861
  9151  097D  297F               	goto	u3860
  9152  097E                     u3861:
  9153  097E  298E               	goto	l2746
  9154  097F                     u3860:
  9155  097F                     l2740:
  9156  097F  0A3D               	incf	___flmul@aexp,w
  9157  0980  1D03               	btfss	3,2
  9158  0981  2983               	goto	u3871
  9159  0982  2984               	goto	u3870
  9160  0983                     u3871:
  9161  0983  298C               	goto	l2744
  9162  0984                     u3870:
  9163  0984                     l2742:
  9164  0984  3000               	movlw	0
  9165  0985  00B2               	movwf	___flmul@a+3
  9166  0986  3000               	movlw	0
  9167  0987  00B1               	movwf	___flmul@a+2
  9168  0988  3000               	movlw	0
  9169  0989  00B0               	movwf	___flmul@a+1
  9170  098A  3000               	movlw	0
  9171  098B  00AF               	movwf	___flmul@a
  9172  098C                     l2744:
  9173  098C  17B1               	bsf	___flmul@a+2,7
  9174  098D  2996               	goto	l2748
  9175  098E                     l2746:
  9176  098E  3000               	movlw	0
  9177  098F  00B2               	movwf	___flmul@a+3
  9178  0990  3000               	movlw	0
  9179  0991  00B1               	movwf	___flmul@a+2
  9180  0992  3000               	movlw	0
  9181  0993  00B0               	movwf	___flmul@a+1
  9182  0994  3000               	movlw	0
  9183  0995  00AF               	movwf	___flmul@a
  9184  0996                     l2748:
  9185  0996  083D               	movf	___flmul@aexp,w
  9186  0997  1903               	btfsc	3,2
  9187  0998  299A               	goto	u3881
  9188  0999  299B               	goto	u3880
  9189  099A                     u3881:
  9190  099A  29A0               	goto	l2752
  9191  099B                     u3880:
  9192  099B                     l2750:
  9193  099B  083E               	movf	___flmul@bexp,w
  9194  099C  1D03               	btfss	3,2
  9195  099D  299F               	goto	u3891
  9196  099E  29A0               	goto	u3890
  9197  099F                     u3891:
  9198  099F  29A9               	goto	l2756
  9199  09A0                     u3890:
  9200  09A0                     l2752:
  9201  09A0  3000               	movlw	0
  9202  09A1  00AE               	movwf	?___flmul+3
  9203  09A2  3000               	movlw	0
  9204  09A3  00AD               	movwf	?___flmul+2
  9205  09A4  3000               	movlw	0
  9206  09A5  00AC               	movwf	?___flmul+1
  9207  09A6  3000               	movlw	0
  9208  09A7  00AB               	movwf	?___flmul
  9209  09A8  2C9C               	goto	l835
  9210  09A9                     l2756:
  9211  09A9  082B               	movf	___flmul@b,w
  9212  09AA  00B3               	movwf	??___flmul
  9213  09AB  0833               	movf	??___flmul,w
  9214  09AC  00F3               	movwf	__Umul8_16@multiplicand
  9215  09AD  0831               	movf	___flmul@a+2,w
  9216  09AE  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9217  09B3  0874               	movf	?__Umul8_16+1,w
  9218  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  9219  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  9220  09B6  00C4               	movwf	___flmul@temp+1
  9221  09B7  0873               	movf	?__Umul8_16,w
  9222  09B8  00C3               	movwf	___flmul@temp
  9223  09B9                     l2758:
  9224  09B9  0843               	movf	___flmul@temp,w
  9225  09BA  00B3               	movwf	??___flmul
  9226  09BB  01B4               	clrf	??___flmul+1
  9227  09BC  01B5               	clrf	??___flmul+2
  9228  09BD  01B6               	clrf	??___flmul+3
  9229  09BE  0836               	movf	??___flmul+3,w
  9230  09BF  00BC               	movwf	___flmul@grs+3
  9231  09C0  0835               	movf	??___flmul+2,w
  9232  09C1  00BB               	movwf	___flmul@grs+2
  9233  09C2  0834               	movf	??___flmul+1,w
  9234  09C3  00BA               	movwf	___flmul@grs+1
  9235  09C4  0833               	movf	??___flmul,w
  9236  09C5  00B9               	movwf	___flmul@grs
  9237  09C6                     l2760:
  9238  09C6  0844               	movf	___flmul@temp+1,w
  9239  09C7  00B3               	movwf	??___flmul
  9240  09C8  01B4               	clrf	??___flmul+1
  9241  09C9  01B5               	clrf	??___flmul+2
  9242  09CA  01B6               	clrf	??___flmul+3
  9243  09CB  0836               	movf	??___flmul+3,w
  9244  09CC  00C2               	movwf	___flmul@prod+3
  9245  09CD  0835               	movf	??___flmul+2,w
  9246  09CE  00C1               	movwf	___flmul@prod+2
  9247  09CF  0834               	movf	??___flmul+1,w
  9248  09D0  00C0               	movwf	___flmul@prod+1
  9249  09D1  0833               	movf	??___flmul,w
  9250  09D2  00BF               	movwf	___flmul@prod
  9251  09D3  082C               	movf	___flmul@b+1,w
  9252  09D4  00B3               	movwf	??___flmul
  9253  09D5  0833               	movf	??___flmul,w
  9254  09D6  00F3               	movwf	__Umul8_16@multiplicand
  9255  09D7  0830               	movf	___flmul@a+1,w
  9256  09D8  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9257  09DD  0874               	movf	?__Umul8_16+1,w
  9258  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  9259  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  9260  09E0  00C4               	movwf	___flmul@temp+1
  9261  09E1  0873               	movf	?__Umul8_16,w
  9262  09E2  00C3               	movwf	___flmul@temp
  9263  09E3                     l2762:
  9264  09E3  0843               	movf	___flmul@temp,w
  9265  09E4  00B3               	movwf	??___flmul
  9266  09E5  01B4               	clrf	??___flmul+1
  9267  09E6  01B5               	clrf	??___flmul+2
  9268  09E7  01B6               	clrf	??___flmul+3
  9269  09E8  0833               	movf	??___flmul,w
  9270  09E9  07B9               	addwf	___flmul@grs,f
  9271  09EA  0834               	movf	??___flmul+1,w
  9272  09EB  1103               	clrz
  9273  09EC  1803               	skipnc
  9274  09ED  3E01               	addlw	1
  9275  09EE  1903               	skipnz
  9276  09EF  29F1               	goto	u3901
  9277  09F0  07BA               	addwf	___flmul@grs+1,f
  9278  09F1                     u3901:
  9279  09F1  0835               	movf	??___flmul+2,w
  9280  09F2  1103               	clrz
  9281  09F3  1803               	skipnc
  9282  09F4  3E01               	addlw	1
  9283  09F5  1903               	skipnz
  9284  09F6  29F8               	goto	u3902
  9285  09F7  07BB               	addwf	___flmul@grs+2,f
  9286  09F8                     u3902:
  9287  09F8  0836               	movf	??___flmul+3,w
  9288  09F9  1103               	clrz
  9289  09FA  1803               	skipnc
  9290  09FB  3E01               	addlw	1
  9291  09FC  1903               	skipnz
  9292  09FD  29FF               	goto	u3903
  9293  09FE  07BC               	addwf	___flmul@grs+3,f
  9294  09FF                     u3903:
  9295  09FF                     l2764:
  9296  09FF  0844               	movf	___flmul@temp+1,w
  9297  0A00  00B3               	movwf	??___flmul
  9298  0A01  01B4               	clrf	??___flmul+1
  9299  0A02  01B5               	clrf	??___flmul+2
  9300  0A03  01B6               	clrf	??___flmul+3
  9301  0A04  0833               	movf	??___flmul,w
  9302  0A05  07BF               	addwf	___flmul@prod,f
  9303  0A06  0834               	movf	??___flmul+1,w
  9304  0A07  1103               	clrz
  9305  0A08  1803               	skipnc
  9306  0A09  3E01               	addlw	1
  9307  0A0A  1903               	skipnz
  9308  0A0B  2A0D               	goto	u3911
  9309  0A0C  07C0               	addwf	___flmul@prod+1,f
  9310  0A0D                     u3911:
  9311  0A0D  0835               	movf	??___flmul+2,w
  9312  0A0E  1103               	clrz
  9313  0A0F  1803               	skipnc
  9314  0A10  3E01               	addlw	1
  9315  0A11  1903               	skipnz
  9316  0A12  2A14               	goto	u3912
  9317  0A13  07C1               	addwf	___flmul@prod+2,f
  9318  0A14                     u3912:
  9319  0A14  0836               	movf	??___flmul+3,w
  9320  0A15  1103               	clrz
  9321  0A16  1803               	skipnc
  9322  0A17  3E01               	addlw	1
  9323  0A18  1903               	skipnz
  9324  0A19  2A1B               	goto	u3913
  9325  0A1A  07C2               	addwf	___flmul@prod+3,f
  9326  0A1B                     u3913:
  9327  0A1B  082D               	movf	___flmul@b+2,w
  9328  0A1C  00B3               	movwf	??___flmul
  9329  0A1D  0833               	movf	??___flmul,w
  9330  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  9331  0A1F  082F               	movf	___flmul@a,w
  9332  0A20  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9333  0A25  0874               	movf	?__Umul8_16+1,w
  9334  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  9335  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  9336  0A28  00C4               	movwf	___flmul@temp+1
  9337  0A29  0873               	movf	?__Umul8_16,w
  9338  0A2A  00C3               	movwf	___flmul@temp
  9339  0A2B                     l2766:
  9340  0A2B  0843               	movf	___flmul@temp,w
  9341  0A2C  00B3               	movwf	??___flmul
  9342  0A2D  01B4               	clrf	??___flmul+1
  9343  0A2E  01B5               	clrf	??___flmul+2
  9344  0A2F  01B6               	clrf	??___flmul+3
  9345  0A30  0833               	movf	??___flmul,w
  9346  0A31  07B9               	addwf	___flmul@grs,f
  9347  0A32  0834               	movf	??___flmul+1,w
  9348  0A33  1103               	clrz
  9349  0A34  1803               	skipnc
  9350  0A35  3E01               	addlw	1
  9351  0A36  1903               	skipnz
  9352  0A37  2A39               	goto	u3921
  9353  0A38  07BA               	addwf	___flmul@grs+1,f
  9354  0A39                     u3921:
  9355  0A39  0835               	movf	??___flmul+2,w
  9356  0A3A  1103               	clrz
  9357  0A3B  1803               	skipnc
  9358  0A3C  3E01               	addlw	1
  9359  0A3D  1903               	skipnz
  9360  0A3E  2A40               	goto	u3922
  9361  0A3F  07BB               	addwf	___flmul@grs+2,f
  9362  0A40                     u3922:
  9363  0A40  0836               	movf	??___flmul+3,w
  9364  0A41  1103               	clrz
  9365  0A42  1803               	skipnc
  9366  0A43  3E01               	addlw	1
  9367  0A44  1903               	skipnz
  9368  0A45  2A47               	goto	u3923
  9369  0A46  07BC               	addwf	___flmul@grs+3,f
  9370  0A47                     u3923:
  9371  0A47                     l2768:
  9372  0A47  0844               	movf	___flmul@temp+1,w
  9373  0A48  00B3               	movwf	??___flmul
  9374  0A49  01B4               	clrf	??___flmul+1
  9375  0A4A  01B5               	clrf	??___flmul+2
  9376  0A4B  01B6               	clrf	??___flmul+3
  9377  0A4C  0833               	movf	??___flmul,w
  9378  0A4D  07BF               	addwf	___flmul@prod,f
  9379  0A4E  0834               	movf	??___flmul+1,w
  9380  0A4F  1103               	clrz
  9381  0A50  1803               	skipnc
  9382  0A51  3E01               	addlw	1
  9383  0A52  1903               	skipnz
  9384  0A53  2A55               	goto	u3931
  9385  0A54  07C0               	addwf	___flmul@prod+1,f
  9386  0A55                     u3931:
  9387  0A55  0835               	movf	??___flmul+2,w
  9388  0A56  1103               	clrz
  9389  0A57  1803               	skipnc
  9390  0A58  3E01               	addlw	1
  9391  0A59  1903               	skipnz
  9392  0A5A  2A5C               	goto	u3932
  9393  0A5B  07C1               	addwf	___flmul@prod+2,f
  9394  0A5C                     u3932:
  9395  0A5C  0836               	movf	??___flmul+3,w
  9396  0A5D  1103               	clrz
  9397  0A5E  1803               	skipnc
  9398  0A5F  3E01               	addlw	1
  9399  0A60  1903               	skipnz
  9400  0A61  2A63               	goto	u3933
  9401  0A62  07C2               	addwf	___flmul@prod+3,f
  9402  0A63                     u3933:
  9403  0A63                     l2770:
  9404  0A63  3008               	movlw	8
  9405  0A64  00B3               	movwf	??___flmul
  9406  0A65                     u3945:
  9407  0A65  1003               	clrc
  9408  0A66  0DB9               	rlf	___flmul@grs,f
  9409  0A67  0DBA               	rlf	___flmul@grs+1,f
  9410  0A68  0DBB               	rlf	___flmul@grs+2,f
  9411  0A69  0DBC               	rlf	___flmul@grs+3,f
  9412  0A6A  0BB3               	decfsz	??___flmul,f
  9413  0A6B  2A65               	goto	u3945
  9414  0A6C                     l2772:
  9415  0A6C  082C               	movf	___flmul@b+1,w
  9416  0A6D  00B3               	movwf	??___flmul
  9417  0A6E  0833               	movf	??___flmul,w
  9418  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  9419  0A70  082F               	movf	___flmul@a,w
  9420  0A71  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9421  0A76  0874               	movf	?__Umul8_16+1,w
  9422  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  9423  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  9424  0A79  00C4               	movwf	___flmul@temp+1
  9425  0A7A  0873               	movf	?__Umul8_16,w
  9426  0A7B  00C3               	movwf	___flmul@temp
  9427  0A7C                     l2774:
  9428  0A7C  0843               	movf	___flmul@temp,w
  9429  0A7D  00B3               	movwf	??___flmul
  9430  0A7E  0844               	movf	___flmul@temp+1,w
  9431  0A7F  00B4               	movwf	??___flmul+1
  9432  0A80  01B5               	clrf	??___flmul+2
  9433  0A81  01B6               	clrf	??___flmul+3
  9434  0A82  0833               	movf	??___flmul,w
  9435  0A83  07B9               	addwf	___flmul@grs,f
  9436  0A84  0834               	movf	??___flmul+1,w
  9437  0A85  1103               	clrz
  9438  0A86  1803               	skipnc
  9439  0A87  3E01               	addlw	1
  9440  0A88  1903               	skipnz
  9441  0A89  2A8B               	goto	u3951
  9442  0A8A  07BA               	addwf	___flmul@grs+1,f
  9443  0A8B                     u3951:
  9444  0A8B  0835               	movf	??___flmul+2,w
  9445  0A8C  1103               	clrz
  9446  0A8D  1803               	skipnc
  9447  0A8E  3E01               	addlw	1
  9448  0A8F  1903               	skipnz
  9449  0A90  2A92               	goto	u3952
  9450  0A91  07BB               	addwf	___flmul@grs+2,f
  9451  0A92                     u3952:
  9452  0A92  0836               	movf	??___flmul+3,w
  9453  0A93  1103               	clrz
  9454  0A94  1803               	skipnc
  9455  0A95  3E01               	addlw	1
  9456  0A96  1903               	skipnz
  9457  0A97  2A99               	goto	u3953
  9458  0A98  07BC               	addwf	___flmul@grs+3,f
  9459  0A99                     u3953:
  9460  0A99                     l2776:
  9461  0A99  082B               	movf	___flmul@b,w
  9462  0A9A  00B3               	movwf	??___flmul
  9463  0A9B  0833               	movf	??___flmul,w
  9464  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  9465  0A9D  0830               	movf	___flmul@a+1,w
  9466  0A9E  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9467  0AA3  0874               	movf	?__Umul8_16+1,w
  9468  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  9469  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  9470  0AA6  00C4               	movwf	___flmul@temp+1
  9471  0AA7  0873               	movf	?__Umul8_16,w
  9472  0AA8  00C3               	movwf	___flmul@temp
  9473  0AA9                     l2778:
  9474  0AA9  0843               	movf	___flmul@temp,w
  9475  0AAA  00B3               	movwf	??___flmul
  9476  0AAB  0844               	movf	___flmul@temp+1,w
  9477  0AAC  00B4               	movwf	??___flmul+1
  9478  0AAD  01B5               	clrf	??___flmul+2
  9479  0AAE  01B6               	clrf	??___flmul+3
  9480  0AAF  0833               	movf	??___flmul,w
  9481  0AB0  07B9               	addwf	___flmul@grs,f
  9482  0AB1  0834               	movf	??___flmul+1,w
  9483  0AB2  1103               	clrz
  9484  0AB3  1803               	skipnc
  9485  0AB4  3E01               	addlw	1
  9486  0AB5  1903               	skipnz
  9487  0AB6  2AB8               	goto	u3961
  9488  0AB7  07BA               	addwf	___flmul@grs+1,f
  9489  0AB8                     u3961:
  9490  0AB8  0835               	movf	??___flmul+2,w
  9491  0AB9  1103               	clrz
  9492  0ABA  1803               	skipnc
  9493  0ABB  3E01               	addlw	1
  9494  0ABC  1903               	skipnz
  9495  0ABD  2ABF               	goto	u3962
  9496  0ABE  07BB               	addwf	___flmul@grs+2,f
  9497  0ABF                     u3962:
  9498  0ABF  0836               	movf	??___flmul+3,w
  9499  0AC0  1103               	clrz
  9500  0AC1  1803               	skipnc
  9501  0AC2  3E01               	addlw	1
  9502  0AC3  1903               	skipnz
  9503  0AC4  2AC6               	goto	u3963
  9504  0AC5  07BC               	addwf	___flmul@grs+3,f
  9505  0AC6                     u3963:
  9506  0AC6                     l2780:
  9507  0AC6  3008               	movlw	8
  9508  0AC7  00B3               	movwf	??___flmul
  9509  0AC8                     u3975:
  9510  0AC8  1003               	clrc
  9511  0AC9  0DB9               	rlf	___flmul@grs,f
  9512  0ACA  0DBA               	rlf	___flmul@grs+1,f
  9513  0ACB  0DBB               	rlf	___flmul@grs+2,f
  9514  0ACC  0DBC               	rlf	___flmul@grs+3,f
  9515  0ACD  0BB3               	decfsz	??___flmul,f
  9516  0ACE  2AC8               	goto	u3975
  9517  0ACF  082B               	movf	___flmul@b,w
  9518  0AD0  00B3               	movwf	??___flmul
  9519  0AD1  0833               	movf	??___flmul,w
  9520  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  9521  0AD3  082F               	movf	___flmul@a,w
  9522  0AD4  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9523  0AD9  0874               	movf	?__Umul8_16+1,w
  9524  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  9525  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  9526  0ADC  00C4               	movwf	___flmul@temp+1
  9527  0ADD  0873               	movf	?__Umul8_16,w
  9528  0ADE  00C3               	movwf	___flmul@temp
  9529  0ADF                     l2782:
  9530  0ADF  0843               	movf	___flmul@temp,w
  9531  0AE0  00B3               	movwf	??___flmul
  9532  0AE1  0844               	movf	___flmul@temp+1,w
  9533  0AE2  00B4               	movwf	??___flmul+1
  9534  0AE3  01B5               	clrf	??___flmul+2
  9535  0AE4  01B6               	clrf	??___flmul+3
  9536  0AE5  0833               	movf	??___flmul,w
  9537  0AE6  07B9               	addwf	___flmul@grs,f
  9538  0AE7  0834               	movf	??___flmul+1,w
  9539  0AE8  1103               	clrz
  9540  0AE9  1803               	skipnc
  9541  0AEA  3E01               	addlw	1
  9542  0AEB  1903               	skipnz
  9543  0AEC  2AEE               	goto	u3981
  9544  0AED  07BA               	addwf	___flmul@grs+1,f
  9545  0AEE                     u3981:
  9546  0AEE  0835               	movf	??___flmul+2,w
  9547  0AEF  1103               	clrz
  9548  0AF0  1803               	skipnc
  9549  0AF1  3E01               	addlw	1
  9550  0AF2  1903               	skipnz
  9551  0AF3  2AF5               	goto	u3982
  9552  0AF4  07BB               	addwf	___flmul@grs+2,f
  9553  0AF5                     u3982:
  9554  0AF5  0836               	movf	??___flmul+3,w
  9555  0AF6  1103               	clrz
  9556  0AF7  1803               	skipnc
  9557  0AF8  3E01               	addlw	1
  9558  0AF9  1903               	skipnz
  9559  0AFA  2AFC               	goto	u3983
  9560  0AFB  07BC               	addwf	___flmul@grs+3,f
  9561  0AFC                     u3983:
  9562  0AFC                     l2784:
  9563  0AFC  082C               	movf	___flmul@b+1,w
  9564  0AFD  00B3               	movwf	??___flmul
  9565  0AFE  0833               	movf	??___flmul,w
  9566  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  9567  0B00  0831               	movf	___flmul@a+2,w
  9568  0B01  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9569  0B06  0874               	movf	?__Umul8_16+1,w
  9570  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  9571  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  9572  0B09  00C4               	movwf	___flmul@temp+1
  9573  0B0A  0873               	movf	?__Umul8_16,w
  9574  0B0B  00C3               	movwf	___flmul@temp
  9575  0B0C  0843               	movf	___flmul@temp,w
  9576  0B0D  00B3               	movwf	??___flmul
  9577  0B0E  0844               	movf	___flmul@temp+1,w
  9578  0B0F  00B4               	movwf	??___flmul+1
  9579  0B10  01B5               	clrf	??___flmul+2
  9580  0B11  01B6               	clrf	??___flmul+3
  9581  0B12  0833               	movf	??___flmul,w
  9582  0B13  07BF               	addwf	___flmul@prod,f
  9583  0B14  0834               	movf	??___flmul+1,w
  9584  0B15  1103               	clrz
  9585  0B16  1803               	skipnc
  9586  0B17  3E01               	addlw	1
  9587  0B18  1903               	skipnz
  9588  0B19  2B1B               	goto	u3991
  9589  0B1A  07C0               	addwf	___flmul@prod+1,f
  9590  0B1B                     u3991:
  9591  0B1B  0835               	movf	??___flmul+2,w
  9592  0B1C  1103               	clrz
  9593  0B1D  1803               	skipnc
  9594  0B1E  3E01               	addlw	1
  9595  0B1F  1903               	skipnz
  9596  0B20  2B22               	goto	u3992
  9597  0B21  07C1               	addwf	___flmul@prod+2,f
  9598  0B22                     u3992:
  9599  0B22  0836               	movf	??___flmul+3,w
  9600  0B23  1103               	clrz
  9601  0B24  1803               	skipnc
  9602  0B25  3E01               	addlw	1
  9603  0B26  1903               	skipnz
  9604  0B27  2B29               	goto	u3993
  9605  0B28  07C2               	addwf	___flmul@prod+3,f
  9606  0B29                     u3993:
  9607  0B29                     l2786:
  9608  0B29  082D               	movf	___flmul@b+2,w
  9609  0B2A  00B3               	movwf	??___flmul
  9610  0B2B  0833               	movf	??___flmul,w
  9611  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  9612  0B2D  0830               	movf	___flmul@a+1,w
  9613  0B2E  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9614  0B33  0874               	movf	?__Umul8_16+1,w
  9615  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  9616  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  9617  0B36  00C4               	movwf	___flmul@temp+1
  9618  0B37  0873               	movf	?__Umul8_16,w
  9619  0B38  00C3               	movwf	___flmul@temp
  9620  0B39                     l2788:
  9621  0B39  0843               	movf	___flmul@temp,w
  9622  0B3A  00B3               	movwf	??___flmul
  9623  0B3B  0844               	movf	___flmul@temp+1,w
  9624  0B3C  00B4               	movwf	??___flmul+1
  9625  0B3D  01B5               	clrf	??___flmul+2
  9626  0B3E  01B6               	clrf	??___flmul+3
  9627  0B3F  0833               	movf	??___flmul,w
  9628  0B40  07BF               	addwf	___flmul@prod,f
  9629  0B41  0834               	movf	??___flmul+1,w
  9630  0B42  1103               	clrz
  9631  0B43  1803               	skipnc
  9632  0B44  3E01               	addlw	1
  9633  0B45  1903               	skipnz
  9634  0B46  2B48               	goto	u4001
  9635  0B47  07C0               	addwf	___flmul@prod+1,f
  9636  0B48                     u4001:
  9637  0B48  0835               	movf	??___flmul+2,w
  9638  0B49  1103               	clrz
  9639  0B4A  1803               	skipnc
  9640  0B4B  3E01               	addlw	1
  9641  0B4C  1903               	skipnz
  9642  0B4D  2B4F               	goto	u4002
  9643  0B4E  07C1               	addwf	___flmul@prod+2,f
  9644  0B4F                     u4002:
  9645  0B4F  0836               	movf	??___flmul+3,w
  9646  0B50  1103               	clrz
  9647  0B51  1803               	skipnc
  9648  0B52  3E01               	addlw	1
  9649  0B53  1903               	skipnz
  9650  0B54  2B56               	goto	u4003
  9651  0B55  07C2               	addwf	___flmul@prod+3,f
  9652  0B56                     u4003:
  9653  0B56  082D               	movf	___flmul@b+2,w
  9654  0B57  00B3               	movwf	??___flmul
  9655  0B58  0833               	movf	??___flmul,w
  9656  0B59  00F3               	movwf	__Umul8_16@multiplicand
  9657  0B5A  0831               	movf	___flmul@a+2,w
  9658  0B5B  160A  158A  20D6  120A  158A  	fcall	__Umul8_16
  9659  0B60  0874               	movf	?__Umul8_16+1,w
  9660  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  9661  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  9662  0B63  00C4               	movwf	___flmul@temp+1
  9663  0B64  0873               	movf	?__Umul8_16,w
  9664  0B65  00C3               	movwf	___flmul@temp
  9665  0B66                     l2790:
  9666  0B66  0843               	movf	___flmul@temp,w
  9667  0B67  00B3               	movwf	??___flmul
  9668  0B68  0844               	movf	___flmul@temp+1,w
  9669  0B69  00B4               	movwf	??___flmul+1
  9670  0B6A  01B5               	clrf	??___flmul+2
  9671  0B6B  01B6               	clrf	??___flmul+3
  9672  0B6C  3008               	movlw	8
  9673  0B6D                     u4015:
  9674  0B6D  1003               	clrc
  9675  0B6E  0DB3               	rlf	??___flmul,f
  9676  0B6F  0DB4               	rlf	??___flmul+1,f
  9677  0B70  0DB5               	rlf	??___flmul+2,f
  9678  0B71  0DB6               	rlf	??___flmul+3,f
  9679  0B72                     u4010:
  9680  0B72  3EFF               	addlw	-1
  9681  0B73  1D03               	skipz
  9682  0B74  2B6D               	goto	u4015
  9683  0B75  0833               	movf	??___flmul,w
  9684  0B76  07BF               	addwf	___flmul@prod,f
  9685  0B77  0834               	movf	??___flmul+1,w
  9686  0B78  1103               	clrz
  9687  0B79  1803               	skipnc
  9688  0B7A  3E01               	addlw	1
  9689  0B7B  1903               	skipnz
  9690  0B7C  2B7E               	goto	u4021
  9691  0B7D  07C0               	addwf	___flmul@prod+1,f
  9692  0B7E                     u4021:
  9693  0B7E  0835               	movf	??___flmul+2,w
  9694  0B7F  1103               	clrz
  9695  0B80  1803               	skipnc
  9696  0B81  3E01               	addlw	1
  9697  0B82  1903               	skipnz
  9698  0B83  2B85               	goto	u4022
  9699  0B84  07C1               	addwf	___flmul@prod+2,f
  9700  0B85                     u4022:
  9701  0B85  0836               	movf	??___flmul+3,w
  9702  0B86  1103               	clrz
  9703  0B87  1803               	skipnc
  9704  0B88  3E01               	addlw	1
  9705  0B89  1903               	skipnz
  9706  0B8A  2B8C               	goto	u4023
  9707  0B8B  07C2               	addwf	___flmul@prod+3,f
  9708  0B8C                     u4023:
  9709  0B8C                     l2792:
  9710  0B8C  0839               	movf	___flmul@grs,w
  9711  0B8D  00B3               	movwf	??___flmul
  9712  0B8E  083A               	movf	___flmul@grs+1,w
  9713  0B8F  00B4               	movwf	??___flmul+1
  9714  0B90  083B               	movf	___flmul@grs+2,w
  9715  0B91  00B5               	movwf	??___flmul+2
  9716  0B92  083C               	movf	___flmul@grs+3,w
  9717  0B93  00B6               	movwf	??___flmul+3
  9718  0B94  3018               	movlw	24
  9719  0B95                     u4035:
  9720  0B95  1003               	clrc
  9721  0B96  0CB6               	rrf	??___flmul+3,f
  9722  0B97  0CB5               	rrf	??___flmul+2,f
  9723  0B98  0CB4               	rrf	??___flmul+1,f
  9724  0B99  0CB3               	rrf	??___flmul,f
  9725  0B9A                     u4030:
  9726  0B9A  3EFF               	addlw	-1
  9727  0B9B  1D03               	skipz
  9728  0B9C  2B95               	goto	u4035
  9729  0B9D  0833               	movf	??___flmul,w
  9730  0B9E  07BF               	addwf	___flmul@prod,f
  9731  0B9F  0834               	movf	??___flmul+1,w
  9732  0BA0  1103               	clrz
  9733  0BA1  1803               	skipnc
  9734  0BA2  3E01               	addlw	1
  9735  0BA3  1903               	skipnz
  9736  0BA4  2BA6               	goto	u4041
  9737  0BA5  07C0               	addwf	___flmul@prod+1,f
  9738  0BA6                     u4041:
  9739  0BA6  0835               	movf	??___flmul+2,w
  9740  0BA7  1103               	clrz
  9741  0BA8  1803               	skipnc
  9742  0BA9  3E01               	addlw	1
  9743  0BAA  1903               	skipnz
  9744  0BAB  2BAD               	goto	u4042
  9745  0BAC  07C1               	addwf	___flmul@prod+2,f
  9746  0BAD                     u4042:
  9747  0BAD  0836               	movf	??___flmul+3,w
  9748  0BAE  1103               	clrz
  9749  0BAF  1803               	skipnc
  9750  0BB0  3E01               	addlw	1
  9751  0BB1  1903               	skipnz
  9752  0BB2  2BB4               	goto	u4043
  9753  0BB3  07C2               	addwf	___flmul@prod+3,f
  9754  0BB4                     u4043:
  9755  0BB4                     l2794:
  9756  0BB4  3008               	movlw	8
  9757  0BB5  00B3               	movwf	??___flmul
  9758  0BB6                     u4055:
  9759  0BB6  1003               	clrc
  9760  0BB7  0DB9               	rlf	___flmul@grs,f
  9761  0BB8  0DBA               	rlf	___flmul@grs+1,f
  9762  0BB9  0DBB               	rlf	___flmul@grs+2,f
  9763  0BBA  0DBC               	rlf	___flmul@grs+3,f
  9764  0BBB  0BB3               	decfsz	??___flmul,f
  9765  0BBC  2BB6               	goto	u4055
  9766  0BBD                     l2796:
  9767  0BBD  083E               	movf	___flmul@bexp,w
  9768  0BBE  073D               	addwf	___flmul@aexp,w
  9769  0BBF  00B3               	movwf	??___flmul
  9770  0BC0  01B4               	clrf	??___flmul+1
  9771  0BC1  0DB4               	rlf	??___flmul+1,f
  9772  0BC2  0833               	movf	??___flmul,w
  9773  0BC3  3E82               	addlw	130
  9774  0BC4  00C3               	movwf	___flmul@temp
  9775  0BC5  0834               	movf	??___flmul+1,w
  9776  0BC6  1803               	skipnc
  9777  0BC7  3E01               	addlw	1
  9778  0BC8  3EFF               	addlw	255
  9779  0BC9  00C4               	movwf	___flmul@temp+1
  9780  0BCA  2BE8               	goto	l2808
  9781  0BCB                     l2798:
  9782  0BCB  3001               	movlw	1
  9783  0BCC  00B3               	movwf	??___flmul
  9784  0BCD                     u4065:
  9785  0BCD  1003               	clrc
  9786  0BCE  0DBF               	rlf	___flmul@prod,f
  9787  0BCF  0DC0               	rlf	___flmul@prod+1,f
  9788  0BD0  0DC1               	rlf	___flmul@prod+2,f
  9789  0BD1  0DC2               	rlf	___flmul@prod+3,f
  9790  0BD2  0BB3               	decfsz	??___flmul,f
  9791  0BD3  2BCD               	goto	u4065
  9792  0BD4                     l2800:
  9793  0BD4  1FBC               	btfss	___flmul@grs+3,7
  9794  0BD5  2BD7               	goto	u4071
  9795  0BD6  2BD8               	goto	u4070
  9796  0BD7                     u4071:
  9797  0BD7  2BD9               	goto	l2804
  9798  0BD8                     u4070:
  9799  0BD8                     l2802:
  9800  0BD8  143F               	bsf	___flmul@prod,0
  9801  0BD9                     l2804:
  9802  0BD9  3001               	movlw	1
  9803  0BDA  00B3               	movwf	??___flmul
  9804  0BDB                     u4085:
  9805  0BDB  1003               	clrc
  9806  0BDC  0DB9               	rlf	___flmul@grs,f
  9807  0BDD  0DBA               	rlf	___flmul@grs+1,f
  9808  0BDE  0DBB               	rlf	___flmul@grs+2,f
  9809  0BDF  0DBC               	rlf	___flmul@grs+3,f
  9810  0BE0  0BB3               	decfsz	??___flmul,f
  9811  0BE1  2BDB               	goto	u4085
  9812  0BE2                     l2806:
  9813  0BE2  30FF               	movlw	255
  9814  0BE3  07C3               	addwf	___flmul@temp,f
  9815  0BE4  1803               	skipnc
  9816  0BE5  0AC4               	incf	___flmul@temp+1,f
  9817  0BE6  30FF               	movlw	255
  9818  0BE7  07C4               	addwf	___flmul@temp+1,f
  9819  0BE8                     l2808:
  9820  0BE8  1FC1               	btfss	___flmul@prod+2,7
  9821  0BE9  2BEB               	goto	u4091
  9822  0BEA  2BEC               	goto	u4090
  9823  0BEB                     u4091:
  9824  0BEB  2BCB               	goto	l2798
  9825  0BEC                     u4090:
  9826  0BEC                     l2810:
  9827  0BEC  01BD               	clrf	___flmul@aexp
  9828  0BED                     l2812:
  9829  0BED  1FBC               	btfss	___flmul@grs+3,7
  9830  0BEE  2BF0               	goto	u4101
  9831  0BEF  2BF1               	goto	u4100
  9832  0BF0                     u4101:
  9833  0BF0  2C0D               	goto	l2820
  9834  0BF1                     u4100:
  9835  0BF1                     l2814:
  9836  0BF1  30FF               	movlw	255
  9837  0BF2  0539               	andwf	___flmul@grs,w
  9838  0BF3  00B3               	movwf	??___flmul
  9839  0BF4  30FF               	movlw	255
  9840  0BF5  053A               	andwf	___flmul@grs+1,w
  9841  0BF6  00B4               	movwf	??___flmul+1
  9842  0BF7  30FF               	movlw	255
  9843  0BF8  053B               	andwf	___flmul@grs+2,w
  9844  0BF9  00B5               	movwf	??___flmul+2
  9845  0BFA  307F               	movlw	127
  9846  0BFB  053C               	andwf	___flmul@grs+3,w
  9847  0BFC  00B6               	movwf	??___flmul+3
  9848  0BFD  0836               	movf	??___flmul+3,w
  9849  0BFE  0435               	iorwf	??___flmul+2,w
  9850  0BFF  0434               	iorwf	??___flmul+1,w
  9851  0C00  0433               	iorwf	??___flmul,w
  9852  0C01  1903               	skipnz
  9853  0C02  2C04               	goto	u4111
  9854  0C03  2C05               	goto	u4110
  9855  0C04                     u4111:
  9856  0C04  2C08               	goto	l841
  9857  0C05                     u4110:
  9858  0C05                     l2816:
  9859  0C05  01BD               	clrf	___flmul@aexp
  9860  0C06  0ABD               	incf	___flmul@aexp,f
  9861  0C07  2C0D               	goto	l2820
  9862  0C08                     l841:
  9863  0C08  1C3F               	btfss	___flmul@prod,0
  9864  0C09  2C0B               	goto	u4121
  9865  0C0A  2C0C               	goto	u4120
  9866  0C0B                     u4121:
  9867  0C0B  2C0D               	goto	l2820
  9868  0C0C                     u4120:
  9869  0C0C  2C05               	goto	l2816
  9870  0C0D                     l2820:
  9871  0C0D  083D               	movf	___flmul@aexp,w
  9872  0C0E  1903               	btfsc	3,2
  9873  0C0F  2C11               	goto	u4131
  9874  0C10  2C12               	goto	u4130
  9875  0C11                     u4131:
  9876  0C11  2C43               	goto	l2830
  9877  0C12                     u4130:
  9878  0C12                     l2822:
  9879  0C12  3001               	movlw	1
  9880  0C13  07BF               	addwf	___flmul@prod,f
  9881  0C14  3000               	movlw	0
  9882  0C15  1803               	skipnc
  9883  0C16  3001               	movlw	1
  9884  0C17  07C0               	addwf	___flmul@prod+1,f
  9885  0C18  3000               	movlw	0
  9886  0C19  1803               	skipnc
  9887  0C1A  3001               	movlw	1
  9888  0C1B  07C1               	addwf	___flmul@prod+2,f
  9889  0C1C  3000               	movlw	0
  9890  0C1D  1803               	skipnc
  9891  0C1E  3001               	movlw	1
  9892  0C1F  07C2               	addwf	___flmul@prod+3,f
  9893  0C20                     l2824:
  9894  0C20  1C42               	btfss	___flmul@prod+3,0
  9895  0C21  2C23               	goto	u4141
  9896  0C22  2C24               	goto	u4140
  9897  0C23                     u4141:
  9898  0C23  2C43               	goto	l2830
  9899  0C24                     u4140:
  9900  0C24                     l2826:
  9901  0C24  083F               	movf	___flmul@prod,w
  9902  0C25  00B3               	movwf	??___flmul
  9903  0C26  0840               	movf	___flmul@prod+1,w
  9904  0C27  00B4               	movwf	??___flmul+1
  9905  0C28  0841               	movf	___flmul@prod+2,w
  9906  0C29  00B5               	movwf	??___flmul+2
  9907  0C2A  0842               	movf	___flmul@prod+3,w
  9908  0C2B  00B6               	movwf	??___flmul+3
  9909  0C2C  3001               	movlw	1
  9910  0C2D  00B7               	movwf	??___flmul+4
  9911  0C2E                     u4155:
  9912  0C2E  0D36               	rlf	??___flmul+3,w
  9913  0C2F  0CB6               	rrf	??___flmul+3,f
  9914  0C30  0CB5               	rrf	??___flmul+2,f
  9915  0C31  0CB4               	rrf	??___flmul+1,f
  9916  0C32  0CB3               	rrf	??___flmul,f
  9917  0C33                     u4150:
  9918  0C33  0BB7               	decfsz	??___flmul+4,f
  9919  0C34  2C2E               	goto	u4155
  9920  0C35  0836               	movf	??___flmul+3,w
  9921  0C36  00C2               	movwf	___flmul@prod+3
  9922  0C37  0835               	movf	??___flmul+2,w
  9923  0C38  00C1               	movwf	___flmul@prod+2
  9924  0C39  0834               	movf	??___flmul+1,w
  9925  0C3A  00C0               	movwf	___flmul@prod+1
  9926  0C3B  0833               	movf	??___flmul,w
  9927  0C3C  00BF               	movwf	___flmul@prod
  9928  0C3D                     l2828:
  9929  0C3D  3001               	movlw	1
  9930  0C3E  07C3               	addwf	___flmul@temp,f
  9931  0C3F  1803               	skipnc
  9932  0C40  0AC4               	incf	___flmul@temp+1,f
  9933  0C41  3000               	movlw	0
  9934  0C42  07C4               	addwf	___flmul@temp+1,f
  9935  0C43                     l2830:
  9936  0C43  0844               	movf	___flmul@temp+1,w
  9937  0C44  3A80               	xorlw	128
  9938  0C45  00FF               	movwf	btemp+1
  9939  0C46  3080               	movlw	128
  9940  0C47  027F               	subwf	btemp+1,w
  9941  0C48  1D03               	skipz
  9942  0C49  2C4C               	goto	u4165
  9943  0C4A  30FF               	movlw	255
  9944  0C4B  0243               	subwf	___flmul@temp,w
  9945  0C4C                     u4165:
  9946  0C4C  1C03               	skipc
  9947  0C4D  2C4F               	goto	u4161
  9948  0C4E  2C50               	goto	u4160
  9949  0C4F                     u4161:
  9950  0C4F  2C5B               	goto	l2834
  9951  0C50                     u4160:
  9952  0C50                     l2832:
  9953  0C50  307F               	movlw	127
  9954  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  9955  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  9956  0C53  00C2               	movwf	___flmul@prod+3
  9957  0C54  3080               	movlw	128
  9958  0C55  00C1               	movwf	___flmul@prod+2
  9959  0C56  3000               	movlw	0
  9960  0C57  00C0               	movwf	___flmul@prod+1
  9961  0C58  3000               	movlw	0
  9962  0C59  00BF               	movwf	___flmul@prod
  9963  0C5A  2C90               	goto	l847
  9964  0C5B                     l2834:
  9965  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  9966  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  9967  0C5D  0844               	movf	___flmul@temp+1,w
  9968  0C5E  3A80               	xorlw	128
  9969  0C5F  00FF               	movwf	btemp+1
  9970  0C60  3080               	movlw	128
  9971  0C61  027F               	subwf	btemp+1,w
  9972  0C62  1D03               	skipz
  9973  0C63  2C66               	goto	u4175
  9974  0C64  3001               	movlw	1
  9975  0C65  0243               	subwf	___flmul@temp,w
  9976  0C66                     u4175:
  9977  0C66  1803               	skipnc
  9978  0C67  2C69               	goto	u4171
  9979  0C68  2C6A               	goto	u4170
  9980  0C69                     u4171:
  9981  0C69  2C76               	goto	l2840
  9982  0C6A                     u4170:
  9983  0C6A                     l2836:
  9984  0C6A  3000               	movlw	0
  9985  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9986  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9987  0C6D  00C2               	movwf	___flmul@prod+3
  9988  0C6E  3000               	movlw	0
  9989  0C6F  00C1               	movwf	___flmul@prod+2
  9990  0C70  3000               	movlw	0
  9991  0C71  00C0               	movwf	___flmul@prod+1
  9992  0C72  3000               	movlw	0
  9993  0C73  00BF               	movwf	___flmul@prod
  9994  0C74                     l2838:
  9995  0C74  01B8               	clrf	___flmul@sign
  9996  0C75  2C90               	goto	l847
  9997  0C76                     l2840:
  9998  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  9999  0C77  1303               	bcf	3,6	;RP1=0, select bank0
 10000  0C78  0843               	movf	___flmul@temp,w
 10001  0C79  00B3               	movwf	??___flmul
 10002  0C7A  0833               	movf	??___flmul,w
 10003  0C7B  00BE               	movwf	___flmul@bexp
 10004  0C7C  30FF               	movlw	255
 10005  0C7D  05BF               	andwf	___flmul@prod,f
 10006  0C7E  30FF               	movlw	255
 10007  0C7F  05C0               	andwf	___flmul@prod+1,f
 10008  0C80  307F               	movlw	127
 10009  0C81  05C1               	andwf	___flmul@prod+2,f
 10010  0C82  3000               	movlw	0
 10011  0C83  05C2               	andwf	___flmul@prod+3,f
 10012  0C84                     l2842:
 10013  0C84  1C3E               	btfss	___flmul@bexp,0
 10014  0C85  2C87               	goto	u4181
 10015  0C86  2C88               	goto	u4180
 10016  0C87                     u4181:
 10017  0C87  2C89               	goto	l2846
 10018  0C88                     u4180:
 10019  0C88                     l2844:
 10020  0C88  17C1               	bsf	___flmul@prod+2,7
 10021  0C89                     l2846:
 10022  0C89  083E               	movf	___flmul@bexp,w
 10023  0C8A  00B3               	movwf	??___flmul
 10024  0C8B  1003               	clrc
 10025  0C8C  0C33               	rrf	??___flmul,w
 10026  0C8D  00B4               	movwf	??___flmul+1
 10027  0C8E  0834               	movf	??___flmul+1,w
 10028  0C8F  00C2               	movwf	___flmul@prod+3
 10029  0C90                     l847:
 10030  0C90  0838               	movf	___flmul@sign,w
 10031  0C91  00B3               	movwf	??___flmul
 10032  0C92  0833               	movf	??___flmul,w
 10033  0C93  04C2               	iorwf	___flmul@prod+3,f
 10034  0C94                     l2848:
 10035  0C94  0842               	movf	___flmul@prod+3,w
 10036  0C95  00AE               	movwf	?___flmul+3
 10037  0C96  0841               	movf	___flmul@prod+2,w
 10038  0C97  00AD               	movwf	?___flmul+2
 10039  0C98  0840               	movf	___flmul@prod+1,w
 10040  0C99  00AC               	movwf	?___flmul+1
 10041  0C9A  083F               	movf	___flmul@prod,w
 10042  0C9B  00AB               	movwf	?___flmul
 10043  0C9C                     l835:
 10044  0C9C  0008               	return
 10045  0C9D                     __end_of___flmul:
 10046                           
 10047                           	psect	text26
 10048  18D6                     __ptext26:	
 10049 ;; *************** function __Umul8_16 *****************
 10050 ;; Defined at:
 10051 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;  multiplier      1    wreg     unsigned char 
 10054 ;;  multiplicand    1    3[COMMON] unsigned char 
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;  multiplier      1    4[BANK0 ] unsigned char 
 10057 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 10058 ;;  product         2    0[BANK0 ] unsigned int 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  2    3[COMMON] unsigned int 
 10061 ;; Registers used:
 10062 ;;		wreg, status,2, status,0
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10068 ;;      Params:         2       0       0       0       0
 10069 ;;      Locals:         0       5       0       0       0
 10070 ;;      Temps:          2       0       0       0       0
 10071 ;;      Totals:         4       5       0       0       0
 10072 ;;Total ram usage:        9 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:    2
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		___flmul
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           
 10083                           ;psect for function __Umul8_16
 10084  18D6                     __Umul8_16:
 10085                           
 10086                           ;incstack = 0
 10087                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10088                           ;__Umul8_16@multiplier stored from wreg
 10089  18D6  1283               	bcf	3,5	;RP0=0, select bank0
 10090  18D7  1303               	bcf	3,6	;RP1=0, select bank0
 10091  18D8  00A4               	movwf	__Umul8_16@multiplier
 10092  18D9                     l2356:
 10093  18D9  01A0               	clrf	__Umul8_16@product
 10094  18DA  01A1               	clrf	__Umul8_16@product+1
 10095  18DB                     l2358:
 10096  18DB  0873               	movf	__Umul8_16@multiplicand,w
 10097  18DC  00F5               	movwf	??__Umul8_16
 10098  18DD  01F6               	clrf	??__Umul8_16+1
 10099  18DE  0875               	movf	??__Umul8_16,w
 10100  18DF  00A2               	movwf	__Umul8_16@word_mpld
 10101  18E0  0876               	movf	??__Umul8_16+1,w
 10102  18E1  00A3               	movwf	__Umul8_16@word_mpld+1
 10103  18E2                     l2360:
 10104  18E2  1C24               	btfss	__Umul8_16@multiplier,0
 10105  18E3  28E5               	goto	u2931
 10106  18E4  28E6               	goto	u2930
 10107  18E5                     u2931:
 10108  18E5  28EC               	goto	l854
 10109  18E6                     u2930:
 10110  18E6                     l2362:
 10111  18E6  0822               	movf	__Umul8_16@word_mpld,w
 10112  18E7  07A0               	addwf	__Umul8_16@product,f
 10113  18E8  1803               	skipnc
 10114  18E9  0AA1               	incf	__Umul8_16@product+1,f
 10115  18EA  0823               	movf	__Umul8_16@word_mpld+1,w
 10116  18EB  07A1               	addwf	__Umul8_16@product+1,f
 10117  18EC                     l854:
 10118  18EC  3001               	movlw	1
 10119  18ED                     u2945:
 10120  18ED  1003               	clrc
 10121  18EE  0DA2               	rlf	__Umul8_16@word_mpld,f
 10122  18EF  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 10123  18F0  3EFF               	addlw	-1
 10124  18F1  1D03               	skipz
 10125  18F2  28ED               	goto	u2945
 10126  18F3  1003               	clrc
 10127  18F4  0CA4               	rrf	__Umul8_16@multiplier,f
 10128  18F5                     l2364:
 10129  18F5  0824               	movf	__Umul8_16@multiplier,w
 10130  18F6  1D03               	btfss	3,2
 10131  18F7  28F9               	goto	u2951
 10132  18F8  28FA               	goto	u2950
 10133  18F9                     u2951:
 10134  18F9  28E2               	goto	l2360
 10135  18FA                     u2950:
 10136  18FA                     l2366:
 10137  18FA  0821               	movf	__Umul8_16@product+1,w
 10138  18FB  00F4               	movwf	?__Umul8_16+1
 10139  18FC  0820               	movf	__Umul8_16@product,w
 10140  18FD  00F3               	movwf	?__Umul8_16
 10141  18FE                     l856:
 10142  18FE  0008               	return
 10143  18FF                     __end_of__Umul8_16:
 10144                           
 10145                           	psect	text27
 10146  10DA                     __ptext27:	
 10147 ;; *************** function _clear_LCD *****************
 10148 ;; Defined at:
 10149 ;;		line 52 in file "LCD.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2, status,0, pclath, cstack
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10163 ;;      Params:         0       0       0       0       0
 10164 ;;      Locals:         0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0
 10166 ;;      Totals:         0       0       0       0       0
 10167 ;;Total ram usage:        0 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; Hardware stack levels required when called:    4
 10170 ;; This function calls:
 10171 ;;		_CMDs
 10172 ;; This function is called by:
 10173 ;;		_main
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           
 10178                           ;psect for function _clear_LCD
 10179  10DA                     _clear_LCD:
 10180  10DA                     l4284:	
 10181                           ;incstack = 0
 10182                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
 10183                           
 10184                           
 10185                           ;LCD.c: 53:     CMDs(0);
 10186  10DA  3000               	movlw	0
 10187  10DB  160A  158A  2090  160A  118A  	fcall	_CMDs
 10188                           
 10189                           ;LCD.c: 54:     CMDs(1);
 10190  10E0  3001               	movlw	1
 10191  10E1  160A  158A  2090  160A  118A  	fcall	_CMDs
 10192  10E6                     l130:
 10193  10E6  0008               	return
 10194  10E7                     __end_of_clear_LCD:
 10195                           
 10196                           	psect	text28
 10197  18FF                     __ptext28:	
 10198 ;; *************** function _Write_USART_String *****************
 10199 ;; Defined at:
 10200 ;;		line 31 in file "USART.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  a               2    4[COMMON] PTR unsigned char 
 10203 ;;		 -> BUFFER(20), STR_1(21), 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  i               1    7[COMMON] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10215 ;;      Params:         2       0       0       0       0
 10216 ;;      Locals:         1       0       0       0       0
 10217 ;;      Temps:          1       0       0       0       0
 10218 ;;      Totals:         4       0       0       0       0
 10219 ;;Total ram usage:        4 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    3
 10222 ;; This function calls:
 10223 ;;		_Write_USART
 10224 ;; This function is called by:
 10225 ;;		_main
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           
 10230                           ;psect for function _Write_USART_String
 10231  18FF                     _Write_USART_String:
 10232  18FF                     l3392:	
 10233                           ;incstack = 0
 10234                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10235                           
 10236                           
 10237                           ;USART.c: 32:     uint8_t i;;USART.c: 33:     for(i=0;a[i]!='\0';i++){
 10238  18FF  01F7               	clrf	Write_USART_String@i
 10239  1900  2916               	goto	l3398
 10240  1901                     l3394:
 10241                           
 10242                           ;USART.c: 34:         Write_USART(a[i]);
 10243  1901  0877               	movf	Write_USART_String@i,w
 10244  1902  0774               	addwf	Write_USART_String@a,w
 10245  1903  0084               	movwf	4
 10246  1904  0875               	movf	Write_USART_String@a+1,w
 10247  1905  1803               	skipnc
 10248  1906  0A75               	incf	Write_USART_String@a+1,w
 10249  1907  00FF               	movwf	btemp+1
 10250  1908  160A  118A  2000  160A  158A  	fcall	stringtab
 10251  190D  160A  118A  20CE  160A  158A  	fcall	_Write_USART
 10252  1912                     l3396:
 10253                           
 10254                           ;USART.c: 35:     }
 10255  1912  3001               	movlw	1
 10256  1913  00F6               	movwf	??_Write_USART_String
 10257  1914  0876               	movf	??_Write_USART_String,w
 10258  1915  07F7               	addwf	Write_USART_String@i,f
 10259  1916                     l3398:
 10260  1916  0877               	movf	Write_USART_String@i,w
 10261  1917  0774               	addwf	Write_USART_String@a,w
 10262  1918  0084               	movwf	4
 10263  1919  0875               	movf	Write_USART_String@a+1,w
 10264  191A  1803               	skipnc
 10265  191B  0A75               	incf	Write_USART_String@a+1,w
 10266  191C  1283               	bcf	3,5	;RP0=0, select bank0
 10267  191D  1303               	bcf	3,6	;RP1=0, select bank0
 10268  191E  00FF               	movwf	btemp+1
 10269  191F  160A  118A  2000  160A  158A  	fcall	stringtab
 10270  1924  3A00               	xorlw	0
 10271  1925  1D03               	skipz
 10272  1926  2928               	goto	u5431
 10273  1927  2929               	goto	u5430
 10274  1928                     u5431:
 10275  1928  2901               	goto	l3394
 10276  1929                     u5430:
 10277  1929                     l230:
 10278  1929  0008               	return
 10279  192A                     __end_of_Write_USART_String:
 10280                           
 10281                           	psect	text29
 10282  10CE                     __ptext29:	
 10283 ;; *************** function _Write_USART *****************
 10284 ;; Defined at:
 10285 ;;		line 27 in file "USART.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  a               1    wreg     unsigned char 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  a               1    3[COMMON] unsigned char 
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10299 ;;      Params:         0       0       0       0       0
 10300 ;;      Locals:         1       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0
 10302 ;;      Totals:         1       0       0       0       0
 10303 ;;Total ram usage:        1 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    2
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_main
 10310 ;;		_Write_USART_String
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function _Write_USART
 10316  10CE                     _Write_USART:
 10317                           
 10318                           ;incstack = 0
 10319                           ; Regs used in _Write_USART: [wreg]
 10320                           ;Write_USART@a stored from wreg
 10321  10CE  00F3               	movwf	Write_USART@a
 10322  10CF                     l2852:
 10323  10CF                     l221:	
 10324                           ;USART.c: 28:     while(!TRMT);
 10325                           
 10326  10CF  1683               	bsf	3,5	;RP0=1, select bank1
 10327  10D0  1303               	bcf	3,6	;RP1=0, select bank1
 10328  10D1  1C98               	btfss	24,1	;volatile
 10329  10D2  28D4               	goto	u4191
 10330  10D3  28D5               	goto	u4190
 10331  10D4                     u4191:
 10332  10D4  28CF               	goto	l221
 10333  10D5                     u4190:
 10334  10D5                     l2854:
 10335                           
 10336                           ;USART.c: 29:     TXREG=a;
 10337  10D5  0873               	movf	Write_USART@a,w
 10338  10D6  1283               	bcf	3,5	;RP0=0, select bank0
 10339  10D7  1303               	bcf	3,6	;RP1=0, select bank0
 10340  10D8  0099               	movwf	25	;volatile
 10341  10D9                     l224:
 10342  10D9  0008               	return
 10343  10DA                     __end_of_Write_USART:
 10344                           
 10345                           	psect	text30
 10346  11A5                     __ptext30:	
 10347 ;; *************** function _USART_Init *****************
 10348 ;; Defined at:
 10349 ;;		line 6 in file "USART.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;  baudrate        4   14[BANK0 ] const long 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  x               2    4[COMMON] unsigned int 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      unsigned char 
 10356 ;; Registers used:
 10357 ;;		wreg, status,2, status,0, pclath, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10363 ;;      Params:         0       4       0       0       0
 10364 ;;      Locals:         2       0       0       0       0
 10365 ;;      Temps:          0      12       0       0       0
 10366 ;;      Totals:         2      16       0       0       0
 10367 ;;Total ram usage:       18 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    3
 10370 ;; This function calls:
 10371 ;;		___aldiv
 10372 ;; This function is called by:
 10373 ;;		_main
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           
 10378                           ;psect for function _USART_Init
 10379  11A5                     _USART_Init:
 10380  11A5                     l4244:	
 10381                           ;incstack = 0
 10382                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
 10383                           
 10384                           
 10385                           ;USART.c: 7:   unsigned int x;;USART.c: 8:   x = (4000000 - baudrate*64)/(baudrate*64);
 10386  11A5  1283               	bcf	3,5	;RP0=0, select bank0
 10387  11A6  1303               	bcf	3,6	;RP1=0, select bank0
 10388  11A7  082E               	movf	USART_Init@baudrate,w
 10389  11A8  00B2               	movwf	??_USART_Init
 10390  11A9  082F               	movf	USART_Init@baudrate+1,w
 10391  11AA  00B3               	movwf	??_USART_Init+1
 10392  11AB  0830               	movf	USART_Init@baudrate+2,w
 10393  11AC  00B4               	movwf	??_USART_Init+2
 10394  11AD  0831               	movf	USART_Init@baudrate+3,w
 10395  11AE  00B5               	movwf	??_USART_Init+3
 10396  11AF  3006               	movlw	6
 10397  11B0                     u7275:
 10398  11B0  1003               	clrc
 10399  11B1  0DB2               	rlf	??_USART_Init,f
 10400  11B2  0DB3               	rlf	??_USART_Init+1,f
 10401  11B3  0DB4               	rlf	??_USART_Init+2,f
 10402  11B4  0DB5               	rlf	??_USART_Init+3,f
 10403  11B5                     u7270:
 10404  11B5  3EFF               	addlw	-1
 10405  11B6  1D03               	skipz
 10406  11B7  29B0               	goto	u7275
 10407  11B8  0835               	movf	??_USART_Init+3,w
 10408  11B9  00A3               	movwf	___aldiv@divisor+3
 10409  11BA  0834               	movf	??_USART_Init+2,w
 10410  11BB  00A2               	movwf	___aldiv@divisor+2
 10411  11BC  0833               	movf	??_USART_Init+1,w
 10412  11BD  00A1               	movwf	___aldiv@divisor+1
 10413  11BE  0832               	movf	??_USART_Init,w
 10414  11BF  00A0               	movwf	___aldiv@divisor
 10415  11C0  082E               	movf	USART_Init@baudrate,w
 10416  11C1  00B6               	movwf	??_USART_Init+4
 10417  11C2  082F               	movf	USART_Init@baudrate+1,w
 10418  11C3  00B7               	movwf	??_USART_Init+5
 10419  11C4  0830               	movf	USART_Init@baudrate+2,w
 10420  11C5  00B8               	movwf	??_USART_Init+6
 10421  11C6  0831               	movf	USART_Init@baudrate+3,w
 10422  11C7  00B9               	movwf	??_USART_Init+7
 10423  11C8  3006               	movlw	6
 10424  11C9                     u7285:
 10425  11C9  1003               	clrc
 10426  11CA  0DB6               	rlf	??_USART_Init+4,f
 10427  11CB  0DB7               	rlf	??_USART_Init+5,f
 10428  11CC  0DB8               	rlf	??_USART_Init+6,f
 10429  11CD  0DB9               	rlf	??_USART_Init+7,f
 10430  11CE                     u7280:
 10431  11CE  3EFF               	addlw	-1
 10432  11CF  1D03               	skipz
 10433  11D0  29C9               	goto	u7285
 10434  11D1  3000               	movlw	0
 10435  11D2  00BA               	movwf	??_USART_Init+8
 10436  11D3  3009               	movlw	9
 10437  11D4  00BB               	movwf	??_USART_Init+9
 10438  11D5  303D               	movlw	61
 10439  11D6  00BC               	movwf	??_USART_Init+10
 10440  11D7  3000               	movlw	0
 10441  11D8  00BD               	movwf	??_USART_Init+11
 10442  11D9  0836               	movf	??_USART_Init+4,w
 10443  11DA  02BA               	subwf	??_USART_Init+8,f
 10444  11DB  0837               	movf	??_USART_Init+5,w
 10445  11DC  1C03               	skipc
 10446  11DD  0F37               	incfsz	??_USART_Init+5,w
 10447  11DE  29E0               	goto	u7291
 10448  11DF  29E1               	goto	u7292
 10449  11E0                     u7291:
 10450  11E0  02BB               	subwf	??_USART_Init+9,f
 10451  11E1                     u7292:
 10452  11E1  0838               	movf	??_USART_Init+6,w
 10453  11E2  1C03               	skipc
 10454  11E3  0F38               	incfsz	??_USART_Init+6,w
 10455  11E4  29E6               	goto	u7293
 10456  11E5  29E7               	goto	u7294
 10457  11E6                     u7293:
 10458  11E6  02BC               	subwf	??_USART_Init+10,f
 10459  11E7                     u7294:
 10460  11E7  0839               	movf	??_USART_Init+7,w
 10461  11E8  1C03               	skipc
 10462  11E9  0F39               	incfsz	??_USART_Init+7,w
 10463  11EA  29EC               	goto	u7295
 10464  11EB  29ED               	goto	u7296
 10465  11EC                     u7295:
 10466  11EC  02BD               	subwf	??_USART_Init+11,f
 10467  11ED                     u7296:
 10468  11ED  083D               	movf	??_USART_Init+11,w
 10469  11EE  00A7               	movwf	___aldiv@dividend+3
 10470  11EF  083C               	movf	??_USART_Init+10,w
 10471  11F0  00A6               	movwf	___aldiv@dividend+2
 10472  11F1  083B               	movf	??_USART_Init+9,w
 10473  11F2  00A5               	movwf	___aldiv@dividend+1
 10474  11F3  083A               	movf	??_USART_Init+8,w
 10475  11F4  00A4               	movwf	___aldiv@dividend
 10476  11F5  160A  158A  2546  160A  118A  	fcall	___aldiv
 10477  11FA  1283               	bcf	3,5	;RP0=0, select bank0
 10478  11FB  1303               	bcf	3,6	;RP1=0, select bank0
 10479  11FC  0821               	movf	?___aldiv+1,w
 10480  11FD  00F5               	movwf	USART_Init@x+1
 10481  11FE  0820               	movf	?___aldiv,w
 10482  11FF  00F4               	movwf	USART_Init@x
 10483  1200                     l4246:
 10484                           
 10485                           ;USART.c: 9:   if(x>255)
 10486  1200  3001               	movlw	1
 10487  1201  0275               	subwf	USART_Init@x+1,w
 10488  1202  3000               	movlw	0
 10489  1203  1903               	skipnz
 10490  1204  0274               	subwf	USART_Init@x,w
 10491  1205  1C03               	skipc
 10492  1206  2A08               	goto	u7301
 10493  1207  2A09               	goto	u7300
 10494  1208                     u7301:
 10495  1208  2A65               	goto	l4252
 10496  1209                     u7300:
 10497  1209                     l4248:
 10498                           
 10499                           ;USART.c: 10:   {;USART.c: 11:     x = (4000000 - baudrate*16)/(baudrate*16);
 10500  1209  082E               	movf	USART_Init@baudrate,w
 10501  120A  00B2               	movwf	??_USART_Init
 10502  120B  082F               	movf	USART_Init@baudrate+1,w
 10503  120C  00B3               	movwf	??_USART_Init+1
 10504  120D  0830               	movf	USART_Init@baudrate+2,w
 10505  120E  00B4               	movwf	??_USART_Init+2
 10506  120F  0831               	movf	USART_Init@baudrate+3,w
 10507  1210  00B5               	movwf	??_USART_Init+3
 10508  1211  3004               	movlw	4
 10509  1212                     u7315:
 10510  1212  1003               	clrc
 10511  1213  0DB2               	rlf	??_USART_Init,f
 10512  1214  0DB3               	rlf	??_USART_Init+1,f
 10513  1215  0DB4               	rlf	??_USART_Init+2,f
 10514  1216  0DB5               	rlf	??_USART_Init+3,f
 10515  1217                     u7310:
 10516  1217  3EFF               	addlw	-1
 10517  1218  1D03               	skipz
 10518  1219  2A12               	goto	u7315
 10519  121A  0835               	movf	??_USART_Init+3,w
 10520  121B  00A3               	movwf	___aldiv@divisor+3
 10521  121C  0834               	movf	??_USART_Init+2,w
 10522  121D  00A2               	movwf	___aldiv@divisor+2
 10523  121E  0833               	movf	??_USART_Init+1,w
 10524  121F  00A1               	movwf	___aldiv@divisor+1
 10525  1220  0832               	movf	??_USART_Init,w
 10526  1221  00A0               	movwf	___aldiv@divisor
 10527  1222  082E               	movf	USART_Init@baudrate,w
 10528  1223  00B6               	movwf	??_USART_Init+4
 10529  1224  082F               	movf	USART_Init@baudrate+1,w
 10530  1225  00B7               	movwf	??_USART_Init+5
 10531  1226  0830               	movf	USART_Init@baudrate+2,w
 10532  1227  00B8               	movwf	??_USART_Init+6
 10533  1228  0831               	movf	USART_Init@baudrate+3,w
 10534  1229  00B9               	movwf	??_USART_Init+7
 10535  122A  3004               	movlw	4
 10536  122B                     u7325:
 10537  122B  1003               	clrc
 10538  122C  0DB6               	rlf	??_USART_Init+4,f
 10539  122D  0DB7               	rlf	??_USART_Init+5,f
 10540  122E  0DB8               	rlf	??_USART_Init+6,f
 10541  122F  0DB9               	rlf	??_USART_Init+7,f
 10542  1230                     u7320:
 10543  1230  3EFF               	addlw	-1
 10544  1231  1D03               	skipz
 10545  1232  2A2B               	goto	u7325
 10546  1233  3000               	movlw	0
 10547  1234  00BA               	movwf	??_USART_Init+8
 10548  1235  3009               	movlw	9
 10549  1236  00BB               	movwf	??_USART_Init+9
 10550  1237  303D               	movlw	61
 10551  1238  00BC               	movwf	??_USART_Init+10
 10552  1239  3000               	movlw	0
 10553  123A  00BD               	movwf	??_USART_Init+11
 10554  123B  0836               	movf	??_USART_Init+4,w
 10555  123C  02BA               	subwf	??_USART_Init+8,f
 10556  123D  0837               	movf	??_USART_Init+5,w
 10557  123E  1C03               	skipc
 10558  123F  0F37               	incfsz	??_USART_Init+5,w
 10559  1240  2A42               	goto	u7331
 10560  1241  2A43               	goto	u7332
 10561  1242                     u7331:
 10562  1242  02BB               	subwf	??_USART_Init+9,f
 10563  1243                     u7332:
 10564  1243  0838               	movf	??_USART_Init+6,w
 10565  1244  1C03               	skipc
 10566  1245  0F38               	incfsz	??_USART_Init+6,w
 10567  1246  2A48               	goto	u7333
 10568  1247  2A49               	goto	u7334
 10569  1248                     u7333:
 10570  1248  02BC               	subwf	??_USART_Init+10,f
 10571  1249                     u7334:
 10572  1249  0839               	movf	??_USART_Init+7,w
 10573  124A  1C03               	skipc
 10574  124B  0F39               	incfsz	??_USART_Init+7,w
 10575  124C  2A4E               	goto	u7335
 10576  124D  2A4F               	goto	u7336
 10577  124E                     u7335:
 10578  124E  02BD               	subwf	??_USART_Init+11,f
 10579  124F                     u7336:
 10580  124F  083D               	movf	??_USART_Init+11,w
 10581  1250  00A7               	movwf	___aldiv@dividend+3
 10582  1251  083C               	movf	??_USART_Init+10,w
 10583  1252  00A6               	movwf	___aldiv@dividend+2
 10584  1253  083B               	movf	??_USART_Init+9,w
 10585  1254  00A5               	movwf	___aldiv@dividend+1
 10586  1255  083A               	movf	??_USART_Init+8,w
 10587  1256  00A4               	movwf	___aldiv@dividend
 10588  1257  160A  158A  2546  160A  118A  	fcall	___aldiv
 10589  125C  1283               	bcf	3,5	;RP0=0, select bank0
 10590  125D  1303               	bcf	3,6	;RP1=0, select bank0
 10591  125E  0821               	movf	?___aldiv+1,w
 10592  125F  00F5               	movwf	USART_Init@x+1
 10593  1260  0820               	movf	?___aldiv,w
 10594  1261  00F4               	movwf	USART_Init@x
 10595  1262                     l4250:
 10596                           
 10597                           ;USART.c: 12:     BRGH = 1;
 10598  1262  1683               	bsf	3,5	;RP0=1, select bank1
 10599  1263  1303               	bcf	3,6	;RP1=0, select bank1
 10600  1264  1518               	bsf	24,2	;volatile
 10601  1265                     l4252:
 10602                           
 10603                           ;USART.c: 14:   if(x<256)
 10604  1265  3001               	movlw	1
 10605  1266  0275               	subwf	USART_Init@x+1,w
 10606  1267  3000               	movlw	0
 10607  1268  1903               	skipnz
 10608  1269  0274               	subwf	USART_Init@x,w
 10609  126A  1803               	skipnc
 10610  126B  2A6D               	goto	u7341
 10611  126C  2A6E               	goto	u7340
 10612  126D                     u7341:
 10613  126D  2A80               	goto	l218
 10614  126E                     u7340:
 10615  126E                     l4254:
 10616                           
 10617                           ;USART.c: 15:   {;USART.c: 16:     SPBRG = x;
 10618  126E  0874               	movf	USART_Init@x,w
 10619  126F  1683               	bsf	3,5	;RP0=1, select bank1
 10620  1270  1303               	bcf	3,6	;RP1=0, select bank1
 10621  1271  0099               	movwf	25	;volatile
 10622  1272                     l4256:
 10623                           
 10624                           ;USART.c: 17:     SYNC = 0;
 10625  1272  1218               	bcf	24,4	;volatile
 10626  1273                     l4258:
 10627                           
 10628                           ;USART.c: 18:     SPEN = 1;
 10629  1273  1283               	bcf	3,5	;RP0=0, select bank0
 10630  1274  1303               	bcf	3,6	;RP1=0, select bank0
 10631  1275  1798               	bsf	24,7	;volatile
 10632  1276                     l4260:
 10633                           
 10634                           ;USART.c: 19:     TRISC7 = 1;
 10635  1276  1683               	bsf	3,5	;RP0=1, select bank1
 10636  1277  1303               	bcf	3,6	;RP1=0, select bank1
 10637  1278  1787               	bsf	7,7	;volatile
 10638  1279                     l4262:
 10639                           
 10640                           ;USART.c: 20:     TRISC6 = 0;
 10641  1279  1307               	bcf	7,6	;volatile
 10642  127A                     l4264:
 10643                           
 10644                           ;USART.c: 21:     CREN = 1;
 10645  127A  1283               	bcf	3,5	;RP0=0, select bank0
 10646  127B  1303               	bcf	3,6	;RP1=0, select bank0
 10647  127C  1618               	bsf	24,4	;volatile
 10648  127D                     l4266:
 10649                           
 10650                           ;USART.c: 22:     TXEN = 1;
 10651  127D  1683               	bsf	3,5	;RP0=1, select bank1
 10652  127E  1303               	bcf	3,6	;RP1=0, select bank1
 10653  127F  1698               	bsf	24,5	;volatile
 10654  1280                     l218:
 10655  1280  0008               	return
 10656  1281                     __end_of_USART_Init:
 10657                           
 10658                           	psect	text31
 10659  1D46                     __ptext31:	
 10660 ;; *************** function ___aldiv *****************
 10661 ;; Defined at:
 10662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  divisor         4    0[BANK0 ] long 
 10665 ;;  dividend        4    4[BANK0 ] long 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  quotient        4   10[BANK0 ] long 
 10668 ;;  sign            1    9[BANK0 ] unsigned char 
 10669 ;;  counter         1    8[BANK0 ] unsigned char 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  4    0[BANK0 ] long 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2, status,0
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10679 ;;      Params:         0       8       0       0       0
 10680 ;;      Locals:         0       6       0       0       0
 10681 ;;      Temps:          1       0       0       0       0
 10682 ;;      Totals:         1      14       0       0       0
 10683 ;;Total ram usage:       15 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    2
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_USART_Init
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           
 10694                           ;psect for function ___aldiv
 10695  1D46                     ___aldiv:
 10696  1D46                     l4108:	
 10697                           ;incstack = 0
 10698                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10699                           
 10700  1D46  1283               	bcf	3,5	;RP0=0, select bank0
 10701  1D47  1303               	bcf	3,6	;RP1=0, select bank0
 10702  1D48  01A9               	clrf	___aldiv@sign
 10703  1D49                     l4110:
 10704  1D49  1FA3               	btfss	___aldiv@divisor+3,7
 10705  1D4A  2D4C               	goto	u6871
 10706  1D4B  2D4D               	goto	u6870
 10707  1D4C                     u6871:
 10708  1D4C  2D5A               	goto	l477
 10709  1D4D                     u6870:
 10710  1D4D                     l4112:
 10711  1D4D  09A0               	comf	___aldiv@divisor,f
 10712  1D4E  09A1               	comf	___aldiv@divisor+1,f
 10713  1D4F  09A2               	comf	___aldiv@divisor+2,f
 10714  1D50  09A3               	comf	___aldiv@divisor+3,f
 10715  1D51  0AA0               	incf	___aldiv@divisor,f
 10716  1D52  1903               	skipnz
 10717  1D53  0AA1               	incf	___aldiv@divisor+1,f
 10718  1D54  1903               	skipnz
 10719  1D55  0AA2               	incf	___aldiv@divisor+2,f
 10720  1D56  1903               	skipnz
 10721  1D57  0AA3               	incf	___aldiv@divisor+3,f
 10722  1D58  01A9               	clrf	___aldiv@sign
 10723  1D59  0AA9               	incf	___aldiv@sign,f
 10724  1D5A                     l477:
 10725  1D5A  1FA7               	btfss	___aldiv@dividend+3,7
 10726  1D5B  2D5D               	goto	u6881
 10727  1D5C  2D5E               	goto	u6880
 10728  1D5D                     u6881:
 10729  1D5D  2D6D               	goto	l4118
 10730  1D5E                     u6880:
 10731  1D5E                     l4114:
 10732  1D5E  09A4               	comf	___aldiv@dividend,f
 10733  1D5F  09A5               	comf	___aldiv@dividend+1,f
 10734  1D60  09A6               	comf	___aldiv@dividend+2,f
 10735  1D61  09A7               	comf	___aldiv@dividend+3,f
 10736  1D62  0AA4               	incf	___aldiv@dividend,f
 10737  1D63  1903               	skipnz
 10738  1D64  0AA5               	incf	___aldiv@dividend+1,f
 10739  1D65  1903               	skipnz
 10740  1D66  0AA6               	incf	___aldiv@dividend+2,f
 10741  1D67  1903               	skipnz
 10742  1D68  0AA7               	incf	___aldiv@dividend+3,f
 10743  1D69                     l4116:
 10744  1D69  3001               	movlw	1
 10745  1D6A  00F3               	movwf	??___aldiv
 10746  1D6B  0873               	movf	??___aldiv,w
 10747  1D6C  06A9               	xorwf	___aldiv@sign,f
 10748  1D6D                     l4118:
 10749  1D6D  3000               	movlw	0
 10750  1D6E  00AD               	movwf	___aldiv@quotient+3
 10751  1D6F  3000               	movlw	0
 10752  1D70  00AC               	movwf	___aldiv@quotient+2
 10753  1D71  3000               	movlw	0
 10754  1D72  00AB               	movwf	___aldiv@quotient+1
 10755  1D73  3000               	movlw	0
 10756  1D74  00AA               	movwf	___aldiv@quotient
 10757  1D75                     l4120:
 10758  1D75  0823               	movf	___aldiv@divisor+3,w
 10759  1D76  0422               	iorwf	___aldiv@divisor+2,w
 10760  1D77  0421               	iorwf	___aldiv@divisor+1,w
 10761  1D78  0420               	iorwf	___aldiv@divisor,w
 10762  1D79  1903               	skipnz
 10763  1D7A  2D7C               	goto	u6891
 10764  1D7B  2D7D               	goto	u6890
 10765  1D7C                     u6891:
 10766  1D7C  2DCA               	goto	l4140
 10767  1D7D                     u6890:
 10768  1D7D                     l4122:
 10769  1D7D  01A8               	clrf	___aldiv@counter
 10770  1D7E  0AA8               	incf	___aldiv@counter,f
 10771  1D7F  2D8D               	goto	l4126
 10772  1D80                     l4124:
 10773  1D80  3001               	movlw	1
 10774  1D81  00F3               	movwf	??___aldiv
 10775  1D82                     u6905:
 10776  1D82  1003               	clrc
 10777  1D83  0DA0               	rlf	___aldiv@divisor,f
 10778  1D84  0DA1               	rlf	___aldiv@divisor+1,f
 10779  1D85  0DA2               	rlf	___aldiv@divisor+2,f
 10780  1D86  0DA3               	rlf	___aldiv@divisor+3,f
 10781  1D87  0BF3               	decfsz	??___aldiv,f
 10782  1D88  2D82               	goto	u6905
 10783  1D89  3001               	movlw	1
 10784  1D8A  00F3               	movwf	??___aldiv
 10785  1D8B  0873               	movf	??___aldiv,w
 10786  1D8C  07A8               	addwf	___aldiv@counter,f
 10787  1D8D                     l4126:
 10788  1D8D  1FA3               	btfss	___aldiv@divisor+3,7
 10789  1D8E  2D90               	goto	u6911
 10790  1D8F  2D91               	goto	u6910
 10791  1D90                     u6911:
 10792  1D90  2D80               	goto	l4124
 10793  1D91                     u6910:
 10794  1D91                     l4128:
 10795  1D91  3001               	movlw	1
 10796  1D92  00F3               	movwf	??___aldiv
 10797  1D93                     u6925:
 10798  1D93  1003               	clrc
 10799  1D94  0DAA               	rlf	___aldiv@quotient,f
 10800  1D95  0DAB               	rlf	___aldiv@quotient+1,f
 10801  1D96  0DAC               	rlf	___aldiv@quotient+2,f
 10802  1D97  0DAD               	rlf	___aldiv@quotient+3,f
 10803  1D98  0BF3               	decfsz	??___aldiv,f
 10804  1D99  2D93               	goto	u6925
 10805  1D9A                     l4130:
 10806  1D9A  0823               	movf	___aldiv@divisor+3,w
 10807  1D9B  0227               	subwf	___aldiv@dividend+3,w
 10808  1D9C  1D03               	skipz
 10809  1D9D  2DA8               	goto	u6935
 10810  1D9E  0822               	movf	___aldiv@divisor+2,w
 10811  1D9F  0226               	subwf	___aldiv@dividend+2,w
 10812  1DA0  1D03               	skipz
 10813  1DA1  2DA8               	goto	u6935
 10814  1DA2  0821               	movf	___aldiv@divisor+1,w
 10815  1DA3  0225               	subwf	___aldiv@dividend+1,w
 10816  1DA4  1D03               	skipz
 10817  1DA5  2DA8               	goto	u6935
 10818  1DA6  0820               	movf	___aldiv@divisor,w
 10819  1DA7  0224               	subwf	___aldiv@dividend,w
 10820  1DA8                     u6935:
 10821  1DA8  1C03               	skipc
 10822  1DA9  2DAB               	goto	u6931
 10823  1DAA  2DAC               	goto	u6930
 10824  1DAB                     u6931:
 10825  1DAB  2DBB               	goto	l4136
 10826  1DAC                     u6930:
 10827  1DAC                     l4132:
 10828  1DAC  0820               	movf	___aldiv@divisor,w
 10829  1DAD  02A4               	subwf	___aldiv@dividend,f
 10830  1DAE  0821               	movf	___aldiv@divisor+1,w
 10831  1DAF  1C03               	skipc
 10832  1DB0  0F21               	incfsz	___aldiv@divisor+1,w
 10833  1DB1  02A5               	subwf	___aldiv@dividend+1,f
 10834  1DB2  0822               	movf	___aldiv@divisor+2,w
 10835  1DB3  1C03               	skipc
 10836  1DB4  0F22               	incfsz	___aldiv@divisor+2,w
 10837  1DB5  02A6               	subwf	___aldiv@dividend+2,f
 10838  1DB6  0823               	movf	___aldiv@divisor+3,w
 10839  1DB7  1C03               	skipc
 10840  1DB8  0F23               	incfsz	___aldiv@divisor+3,w
 10841  1DB9  02A7               	subwf	___aldiv@dividend+3,f
 10842  1DBA                     l4134:
 10843  1DBA  142A               	bsf	___aldiv@quotient,0
 10844  1DBB                     l4136:
 10845  1DBB  3001               	movlw	1
 10846  1DBC                     u6945:
 10847  1DBC  1003               	clrc
 10848  1DBD  0CA3               	rrf	___aldiv@divisor+3,f
 10849  1DBE  0CA2               	rrf	___aldiv@divisor+2,f
 10850  1DBF  0CA1               	rrf	___aldiv@divisor+1,f
 10851  1DC0  0CA0               	rrf	___aldiv@divisor,f
 10852  1DC1  3EFF               	addlw	-1
 10853  1DC2  1D03               	skipz
 10854  1DC3  2DBC               	goto	u6945
 10855  1DC4                     l4138:
 10856  1DC4  3001               	movlw	1
 10857  1DC5  02A8               	subwf	___aldiv@counter,f
 10858  1DC6  1D03               	btfss	3,2
 10859  1DC7  2DC9               	goto	u6951
 10860  1DC8  2DCA               	goto	u6950
 10861  1DC9                     u6951:
 10862  1DC9  2D91               	goto	l4128
 10863  1DCA                     u6950:
 10864  1DCA                     l4140:
 10865  1DCA  0829               	movf	___aldiv@sign,w
 10866  1DCB  1903               	btfsc	3,2
 10867  1DCC  2DCE               	goto	u6961
 10868  1DCD  2DCF               	goto	u6960
 10869  1DCE                     u6961:
 10870  1DCE  2DDA               	goto	l4144
 10871  1DCF                     u6960:
 10872  1DCF                     l4142:
 10873  1DCF  09AA               	comf	___aldiv@quotient,f
 10874  1DD0  09AB               	comf	___aldiv@quotient+1,f
 10875  1DD1  09AC               	comf	___aldiv@quotient+2,f
 10876  1DD2  09AD               	comf	___aldiv@quotient+3,f
 10877  1DD3  0AAA               	incf	___aldiv@quotient,f
 10878  1DD4  1903               	skipnz
 10879  1DD5  0AAB               	incf	___aldiv@quotient+1,f
 10880  1DD6  1903               	skipnz
 10881  1DD7  0AAC               	incf	___aldiv@quotient+2,f
 10882  1DD8  1903               	skipnz
 10883  1DD9  0AAD               	incf	___aldiv@quotient+3,f
 10884  1DDA                     l4144:
 10885  1DDA  082D               	movf	___aldiv@quotient+3,w
 10886  1DDB  00A3               	movwf	?___aldiv+3
 10887  1DDC  082C               	movf	___aldiv@quotient+2,w
 10888  1DDD  00A2               	movwf	?___aldiv+2
 10889  1DDE  082B               	movf	___aldiv@quotient+1,w
 10890  1DDF  00A1               	movwf	?___aldiv+1
 10891  1DE0  082A               	movf	___aldiv@quotient,w
 10892  1DE1  00A0               	movwf	?___aldiv
 10893  1DE2                     l487:
 10894  1DE2  0008               	return
 10895  1DE3                     __end_of___aldiv:
 10896                           
 10897                           	psect	text32
 10898  1982                     __ptext32:	
 10899 ;; *************** function _LCD_init *****************
 10900 ;; Defined at:
 10901 ;;		line 69 in file "LCD.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;		None
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;		None
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      void 
 10908 ;; Registers used:
 10909 ;;		wreg, status,2, status,0, pclath, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10915 ;;      Params:         0       0       0       0       0
 10916 ;;      Locals:         0       0       0       0       0
 10917 ;;      Temps:          0       2       0       0       0
 10918 ;;      Totals:         0       2       0       0       0
 10919 ;;Total ram usage:        2 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    4
 10922 ;; This function calls:
 10923 ;;		_CMDs
 10924 ;;		_port
 10925 ;; This function is called by:
 10926 ;;		_main
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           
 10931                           ;psect for function _LCD_init
 10932  1982                     _LCD_init:
 10933  1982                     l4270:	
 10934                           ;incstack = 0
 10935                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
 10936                           
 10937                           
 10938                           ;LCD.c: 70:     RE0 = 0;
 10939  1982  1283               	bcf	3,5	;RP0=0, select bank0
 10940  1983  1303               	bcf	3,6	;RP1=0, select bank0
 10941  1984  1009               	bcf	9,0	;volatile
 10942                           
 10943                           ;LCD.c: 71:     RE1 = 0;
 10944  1985  1089               	bcf	9,1	;volatile
 10945  1986                     l4272:
 10946                           
 10947                           ;LCD.c: 72:     port(0X00);
 10948  1986  3000               	movlw	0
 10949  1987  160A  158A  2224  160A  158A  	fcall	_port
 10950  198C                     l4274:
 10951                           
 10952                           ;LCD.c: 73:     _delay((unsigned long)((50)*(4000000/4000.0)));
 10953  198C  3041               	movlw	65
 10954  198D  1283               	bcf	3,5	;RP0=0, select bank0
 10955  198E  1303               	bcf	3,6	;RP1=0, select bank0
 10956  198F  00A1               	movwf	??_LCD_init+1
 10957  1990  30ED               	movlw	237
 10958  1991  00A0               	movwf	??_LCD_init
 10959  1992                     u7757:
 10960  1992  0BA0               	decfsz	??_LCD_init,f
 10961  1993  2992               	goto	u7757
 10962  1994  0BA1               	decfsz	??_LCD_init+1,f
 10963  1995  2992               	goto	u7757
 10964  1996  2997               	nop2
 10965  1997                     l4276:
 10966                           
 10967                           ;LCD.c: 74:     CMDs(0x02);
 10968  1997  3002               	movlw	2
 10969  1998  160A  158A  2090  160A  158A  	fcall	_CMDs
 10970  199D                     l4278:
 10971                           
 10972                           ;LCD.c: 75:     CMDs(0x38);
 10973  199D  3038               	movlw	56
 10974  199E  160A  158A  2090  160A  158A  	fcall	_CMDs
 10975  19A3                     l4280:
 10976                           
 10977                           ;LCD.c: 76:     CMDs(0x0C);
 10978  19A3  300C               	movlw	12
 10979  19A4  160A  158A  2090  160A  158A  	fcall	_CMDs
 10980  19A9                     l4282:
 10981                           
 10982                           ;LCD.c: 77:     CMDs(0x06);
 10983  19A9  3006               	movlw	6
 10984  19AA  160A  158A  2090  160A  158A  	fcall	_CMDs
 10985  19AF                     l139:
 10986  19AF  0008               	return
 10987  19B0                     __end_of_LCD_init:
 10988                           
 10989                           	psect	text33
 10990  1890                     __ptext33:	
 10991 ;; *************** function _CMDs *****************
 10992 ;; Defined at:
 10993 ;;		line 42 in file "LCD.c"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;  a               1    wreg     unsigned char 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  a               1    6[COMMON] unsigned char 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg, status,2, status,0, pclath, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11007 ;;      Params:         0       0       0       0       0
 11008 ;;      Locals:         1       0       0       0       0
 11009 ;;      Temps:          2       0       0       0       0
 11010 ;;      Totals:         3       0       0       0       0
 11011 ;;Total ram usage:        3 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    3
 11014 ;; This function calls:
 11015 ;;		_port
 11016 ;; This function is called by:
 11017 ;;		_clear_LCD
 11018 ;;		_set_cursor
 11019 ;;		_LCD_init
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           
 11024                           ;psect for function _CMDs
 11025  1890                     _CMDs:
 11026                           
 11027                           ;incstack = 0
 11028                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
 11029                           ;CMDs@a stored from wreg
 11030  1890  00F6               	movwf	CMDs@a
 11031  1891                     l3880:
 11032                           
 11033                           ;LCD.c: 43:     RE0 = 0;
 11034  1891  1283               	bcf	3,5	;RP0=0, select bank0
 11035  1892  1303               	bcf	3,6	;RP1=0, select bank0
 11036  1893  1009               	bcf	9,0	;volatile
 11037  1894                     l3882:
 11038                           
 11039                           ;LCD.c: 44:     port(a);
 11040  1894  0876               	movf	CMDs@a,w
 11041  1895  160A  158A  2224  160A  158A  	fcall	_port
 11042  189A                     l3884:
 11043                           
 11044                           ;LCD.c: 45:     RE1 = 1;
 11045  189A  1283               	bcf	3,5	;RP0=0, select bank0
 11046  189B  1303               	bcf	3,6	;RP1=0, select bank0
 11047  189C  1489               	bsf	9,1	;volatile
 11048  189D                     l3886:
 11049                           
 11050                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 11051  189D  289E               	nop2	;2 cycle nop
 11052  189E  289F               	nop2	;2 cycle nop
 11053  189F  0000               	nop
 11054  18A0                     l3888:
 11055                           
 11056                           ;LCD.c: 47:     RE1 = 0;
 11057  18A0  1283               	bcf	3,5	;RP0=0, select bank0
 11058  18A1  1303               	bcf	3,6	;RP1=0, select bank0
 11059  18A2  1089               	bcf	9,1	;volatile
 11060  18A3                     l3890:
 11061                           
 11062                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 11063  18A3  28A4               	nop2	;2 cycle nop
 11064  18A4  28A5               	nop2	;2 cycle nop
 11065  18A5  0000               	nop
 11066  18A6                     l3892:
 11067                           
 11068                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
 11069  18A6  3003               	movlw	3
 11070  18A7  00F5               	movwf	??_CMDs+1
 11071  18A8  3097               	movlw	151
 11072  18A9  00F4               	movwf	??_CMDs
 11073  18AA                     u7767:
 11074  18AA  0BF4               	decfsz	??_CMDs,f
 11075  18AB  28AA               	goto	u7767
 11076  18AC  0BF5               	decfsz	??_CMDs+1,f
 11077  18AD  28AA               	goto	u7767
 11078  18AE  28AF               	nop2
 11079  18AF                     l127:
 11080  18AF  0008               	return
 11081  18B0                     __end_of_CMDs:
 11082                           
 11083                           	psect	text34
 11084  1A24                     __ptext34:	
 11085 ;; *************** function _port *****************
 11086 ;; Defined at:
 11087 ;;		line 7 in file "LCD.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  a               1    wreg     unsigned char 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  a               1    3[COMMON] unsigned char 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11101 ;;      Params:         0       0       0       0       0
 11102 ;;      Locals:         1       0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0
 11104 ;;      Totals:         1       0       0       0       0
 11105 ;;Total ram usage:        1 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    2
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_CMDs
 11112 ;;		_LCD_init
 11113 ;;		_write_char
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           
 11118                           ;psect for function _port
 11119  1A24                     _port:
 11120                           
 11121                           ;incstack = 0
 11122                           ; Regs used in _port: [wreg]
 11123                           ;port@a stored from wreg
 11124  1A24  00F3               	movwf	port@a
 11125  1A25                     l3732:
 11126                           
 11127                           ;LCD.c: 8:     if(a & 1){
 11128  1A25  1C73               	btfss	port@a,0
 11129  1A26  2A28               	goto	u5851
 11130  1A27  2A29               	goto	u5850
 11131  1A28                     u5851:
 11132  1A28  2A2D               	goto	l108
 11133  1A29                     u5850:
 11134  1A29                     l3734:
 11135                           
 11136                           ;LCD.c: 9:         RD0=1;}
 11137  1A29  1283               	bcf	3,5	;RP0=0, select bank0
 11138  1A2A  1303               	bcf	3,6	;RP1=0, select bank0
 11139  1A2B  1408               	bsf	8,0	;volatile
 11140  1A2C  2A30               	goto	l109
 11141  1A2D                     l108:	
 11142                           ;LCD.c: 10:     else{
 11143                           
 11144                           
 11145                           ;LCD.c: 11:         RD0=0;}
 11146  1A2D  1283               	bcf	3,5	;RP0=0, select bank0
 11147  1A2E  1303               	bcf	3,6	;RP1=0, select bank0
 11148  1A2F  1008               	bcf	8,0	;volatile
 11149  1A30                     l109:
 11150                           
 11151                           ;LCD.c: 12:     if(a & 2){
 11152  1A30  1CF3               	btfss	port@a,1
 11153  1A31  2A33               	goto	u5861
 11154  1A32  2A34               	goto	u5860
 11155  1A33                     u5861:
 11156  1A33  2A36               	goto	l110
 11157  1A34                     u5860:
 11158  1A34                     l3736:
 11159                           
 11160                           ;LCD.c: 13:         RD1=1;}
 11161  1A34  1488               	bsf	8,1	;volatile
 11162  1A35  2A37               	goto	l111
 11163  1A36                     l110:	
 11164                           ;LCD.c: 14:     else{
 11165                           
 11166                           
 11167                           ;LCD.c: 15:         RD1=0;}
 11168  1A36  1088               	bcf	8,1	;volatile
 11169  1A37                     l111:
 11170                           
 11171                           ;LCD.c: 16:     if(a & 4){
 11172  1A37  1D73               	btfss	port@a,2
 11173  1A38  2A3A               	goto	u5871
 11174  1A39  2A3B               	goto	u5870
 11175  1A3A                     u5871:
 11176  1A3A  2A3D               	goto	l112
 11177  1A3B                     u5870:
 11178  1A3B                     l3738:
 11179                           
 11180                           ;LCD.c: 17:         RD2=1;}
 11181  1A3B  1508               	bsf	8,2	;volatile
 11182  1A3C  2A3E               	goto	l113
 11183  1A3D                     l112:	
 11184                           ;LCD.c: 18:     else{
 11185                           
 11186                           
 11187                           ;LCD.c: 19:         RD2=0;}
 11188  1A3D  1108               	bcf	8,2	;volatile
 11189  1A3E                     l113:
 11190                           
 11191                           ;LCD.c: 20:     if(a & 8){
 11192  1A3E  1DF3               	btfss	port@a,3
 11193  1A3F  2A41               	goto	u5881
 11194  1A40  2A42               	goto	u5880
 11195  1A41                     u5881:
 11196  1A41  2A44               	goto	l114
 11197  1A42                     u5880:
 11198  1A42                     l3740:
 11199                           
 11200                           ;LCD.c: 21:         RD3=1;}
 11201  1A42  1588               	bsf	8,3	;volatile
 11202  1A43  2A45               	goto	l115
 11203  1A44                     l114:	
 11204                           ;LCD.c: 22:     else{
 11205                           
 11206                           
 11207                           ;LCD.c: 23:         RD3=0;}
 11208  1A44  1188               	bcf	8,3	;volatile
 11209  1A45                     l115:
 11210                           
 11211                           ;LCD.c: 24:     if(a & 16){
 11212  1A45  1E73               	btfss	port@a,4
 11213  1A46  2A48               	goto	u5891
 11214  1A47  2A49               	goto	u5890
 11215  1A48                     u5891:
 11216  1A48  2A4B               	goto	l116
 11217  1A49                     u5890:
 11218  1A49                     l3742:
 11219                           
 11220                           ;LCD.c: 25:         RD4=1;}
 11221  1A49  1608               	bsf	8,4	;volatile
 11222  1A4A  2A4C               	goto	l117
 11223  1A4B                     l116:	
 11224                           ;LCD.c: 26:     else{
 11225                           
 11226                           
 11227                           ;LCD.c: 27:         RD4=0;}
 11228  1A4B  1208               	bcf	8,4	;volatile
 11229  1A4C                     l117:
 11230                           
 11231                           ;LCD.c: 28:     if(a & 32){
 11232  1A4C  1EF3               	btfss	port@a,5
 11233  1A4D  2A4F               	goto	u5901
 11234  1A4E  2A50               	goto	u5900
 11235  1A4F                     u5901:
 11236  1A4F  2A52               	goto	l118
 11237  1A50                     u5900:
 11238  1A50                     l3744:
 11239                           
 11240                           ;LCD.c: 29:         RD5=1;}
 11241  1A50  1688               	bsf	8,5	;volatile
 11242  1A51  2A53               	goto	l119
 11243  1A52                     l118:	
 11244                           ;LCD.c: 30:     else{
 11245                           
 11246                           
 11247                           ;LCD.c: 31:         RD5=0;}
 11248  1A52  1288               	bcf	8,5	;volatile
 11249  1A53                     l119:
 11250                           
 11251                           ;LCD.c: 32:     if(a & 64){
 11252  1A53  1F73               	btfss	port@a,6
 11253  1A54  2A56               	goto	u5911
 11254  1A55  2A57               	goto	u5910
 11255  1A56                     u5911:
 11256  1A56  2A59               	goto	l120
 11257  1A57                     u5910:
 11258  1A57                     l3746:
 11259                           
 11260                           ;LCD.c: 33:         RD6=1;}
 11261  1A57  1708               	bsf	8,6	;volatile
 11262  1A58  2A5A               	goto	l121
 11263  1A59                     l120:	
 11264                           ;LCD.c: 34:     else{
 11265                           
 11266                           
 11267                           ;LCD.c: 35:         RD6=0;}
 11268  1A59  1308               	bcf	8,6	;volatile
 11269  1A5A                     l121:
 11270                           
 11271                           ;LCD.c: 36:     if(a & 128){
 11272  1A5A  1FF3               	btfss	port@a,7
 11273  1A5B  2A5D               	goto	u5921
 11274  1A5C  2A5E               	goto	u5920
 11275  1A5D                     u5921:
 11276  1A5D  2A60               	goto	l122
 11277  1A5E                     u5920:
 11278  1A5E                     l3748:
 11279                           
 11280                           ;LCD.c: 37:         RD7=1;}
 11281  1A5E  1788               	bsf	8,7	;volatile
 11282  1A5F  2A61               	goto	l124
 11283  1A60                     l122:	
 11284                           ;LCD.c: 38:     else{
 11285                           
 11286                           
 11287                           ;LCD.c: 39:         RD7=0;}
 11288  1A60  1388               	bcf	8,7	;volatile
 11289  1A61                     l124:
 11290  1A61  0008               	return
 11291  1A62                     __end_of_port:
 11292                           
 11293                           	psect	text35
 11294  1281                     __ptext35:	
 11295 ;; *************** function _ADCmed *****************
 11296 ;; Defined at:
 11297 ;;		line 7 in file "ADC.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;  ch              1    wreg     unsigned char 
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  ch              1    5[COMMON] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  1    wreg      unsigned char 
 11304 ;; Registers used:
 11305 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11311 ;;      Params:         0       0       0       0       0
 11312 ;;      Locals:         1       0       0       0       0
 11313 ;;      Temps:          2       0       0       0       0
 11314 ;;      Totals:         3       0       0       0       0
 11315 ;;Total ram usage:        3 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:    2
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_main
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           
 11326                           ;psect for function _ADCmed
 11327  1281                     _ADCmed:
 11328                           
 11329                           ;incstack = 0
 11330                           ; Regs used in _ADCmed: [wreg-fsr0h+status,2+status,0]
 11331                           ;ADCmed@ch stored from wreg
 11332  1281  00F5               	movwf	ADCmed@ch
 11333  1282                     l3328:
 11334                           
 11335                           ;ADC.c: 8:     ADCON0bits.ADCS = 1;
 11336  1282  1283               	bcf	3,5	;RP0=0, select bank0
 11337  1283  1303               	bcf	3,6	;RP1=0, select bank0
 11338  1284  081F               	movf	31,w	;volatile
 11339  1285  393F               	andlw	-193
 11340  1286  3840               	iorlw	64
 11341  1287  009F               	movwf	31	;volatile
 11342  1288                     l3330:
 11343                           
 11344                           ;ADC.c: 9:     ADCON1 = 0;
 11345  1288  1683               	bsf	3,5	;RP0=1, select bank1
 11346  1289  1303               	bcf	3,6	;RP1=0, select bank1
 11347  128A  019F               	clrf	31	;volatile
 11348                           
 11349                           ;ADC.c: 11:     switch (ch) {
 11350  128B  2B26               	goto	l3366
 11351  128C                     l170:	
 11352                           ;ADC.c: 12:         case 0:
 11353                           
 11354                           
 11355                           ;ADC.c: 13:             TRISAbits.TRISA0 = 1;
 11356  128C  1405               	bsf	5,0	;volatile
 11357                           
 11358                           ;ADC.c: 14:             ANSELbits.ANS0 = 1;
 11359  128D  1683               	bsf	3,5	;RP0=1, select bank3
 11360  128E  1703               	bsf	3,6	;RP1=1, select bank3
 11361  128F  1408               	bsf	8,0	;volatile
 11362  1290                     l3332:
 11363                           
 11364                           ;ADC.c: 15:             ADCON0bits.CHS = 0;
 11365  1290  30C3               	movlw	-61
 11366  1291  1283               	bcf	3,5	;RP0=0, select bank0
 11367  1292  1303               	bcf	3,6	;RP1=0, select bank0
 11368  1293  059F               	andwf	31,f	;volatile
 11369                           
 11370                           ;ADC.c: 16:             break;
 11371  1294  2B5A               	goto	l171
 11372  1295                     l172:	
 11373                           ;ADC.c: 17:         case 1:
 11374                           
 11375                           
 11376                           ;ADC.c: 18:             TRISAbits.TRISA1=1;
 11377  1295  1485               	bsf	5,1	;volatile
 11378                           
 11379                           ;ADC.c: 19:             ANSELbits.ANS1=1;
 11380  1296  1683               	bsf	3,5	;RP0=1, select bank3
 11381  1297  1703               	bsf	3,6	;RP1=1, select bank3
 11382  1298  1488               	bsf	8,1	;volatile
 11383  1299                     l3334:
 11384                           
 11385                           ;ADC.c: 20:             ADCON0bits.CHS=1;
 11386  1299  1283               	bcf	3,5	;RP0=0, select bank0
 11387  129A  1303               	bcf	3,6	;RP1=0, select bank0
 11388  129B  081F               	movf	31,w	;volatile
 11389  129C  39C3               	andlw	-61
 11390  129D  3804               	iorlw	4
 11391  129E  009F               	movwf	31	;volatile
 11392                           
 11393                           ;ADC.c: 21:             break;
 11394  129F  2B5A               	goto	l171
 11395  12A0                     l173:	
 11396                           ;ADC.c: 22:         case 2:
 11397                           
 11398                           
 11399                           ;ADC.c: 23:             TRISAbits.TRISA2=1;
 11400  12A0  1505               	bsf	5,2	;volatile
 11401                           
 11402                           ;ADC.c: 24:             ANSELbits.ANS2=1;
 11403  12A1  1683               	bsf	3,5	;RP0=1, select bank3
 11404  12A2  1703               	bsf	3,6	;RP1=1, select bank3
 11405  12A3  1508               	bsf	8,2	;volatile
 11406  12A4                     l3336:
 11407                           
 11408                           ;ADC.c: 25:             ADCON0bits.CHS=2;
 11409  12A4  1283               	bcf	3,5	;RP0=0, select bank0
 11410  12A5  1303               	bcf	3,6	;RP1=0, select bank0
 11411  12A6  081F               	movf	31,w	;volatile
 11412  12A7  39C3               	andlw	-61
 11413  12A8  3808               	iorlw	8
 11414  12A9  009F               	movwf	31	;volatile
 11415                           
 11416                           ;ADC.c: 26:             break;
 11417  12AA  2B5A               	goto	l171
 11418  12AB                     l174:	
 11419                           ;ADC.c: 27:         case 3:
 11420                           
 11421                           
 11422                           ;ADC.c: 28:             TRISAbits.TRISA3=1;
 11423  12AB  1585               	bsf	5,3	;volatile
 11424                           
 11425                           ;ADC.c: 29:             ANSELbits.ANS3=1;
 11426  12AC  1683               	bsf	3,5	;RP0=1, select bank3
 11427  12AD  1703               	bsf	3,6	;RP1=1, select bank3
 11428  12AE  1588               	bsf	8,3	;volatile
 11429  12AF                     l3338:
 11430                           
 11431                           ;ADC.c: 30:             ADCON0bits.CHS=3;
 11432  12AF  1283               	bcf	3,5	;RP0=0, select bank0
 11433  12B0  1303               	bcf	3,6	;RP1=0, select bank0
 11434  12B1  081F               	movf	31,w	;volatile
 11435  12B2  39C3               	andlw	-61
 11436  12B3  380C               	iorlw	12
 11437  12B4  009F               	movwf	31	;volatile
 11438                           
 11439                           ;ADC.c: 31:             break;
 11440  12B5  2B5A               	goto	l171
 11441  12B6                     l175:	
 11442                           ;ADC.c: 32:         case 4:
 11443                           
 11444                           
 11445                           ;ADC.c: 33:             TRISAbits.TRISA5=1;
 11446  12B6  1685               	bsf	5,5	;volatile
 11447                           
 11448                           ;ADC.c: 34:             ANSELbits.ANS4=1;
 11449  12B7  1683               	bsf	3,5	;RP0=1, select bank3
 11450  12B8  1703               	bsf	3,6	;RP1=1, select bank3
 11451  12B9  1608               	bsf	8,4	;volatile
 11452  12BA                     l3340:
 11453                           
 11454                           ;ADC.c: 35:             ADCON0bits.CHS=4;
 11455  12BA  1283               	bcf	3,5	;RP0=0, select bank0
 11456  12BB  1303               	bcf	3,6	;RP1=0, select bank0
 11457  12BC  081F               	movf	31,w	;volatile
 11458  12BD  39C3               	andlw	-61
 11459  12BE  3810               	iorlw	16
 11460  12BF  009F               	movwf	31	;volatile
 11461                           
 11462                           ;ADC.c: 36:             break;
 11463  12C0  2B5A               	goto	l171
 11464  12C1                     l176:	
 11465                           ;ADC.c: 37:         case 5:
 11466                           
 11467                           
 11468                           ;ADC.c: 38:             TRISEbits.TRISE0=1;
 11469  12C1  1409               	bsf	9,0	;volatile
 11470                           
 11471                           ;ADC.c: 39:             ANSELbits.ANS5=1;
 11472  12C2  1683               	bsf	3,5	;RP0=1, select bank3
 11473  12C3  1703               	bsf	3,6	;RP1=1, select bank3
 11474  12C4  1688               	bsf	8,5	;volatile
 11475  12C5                     l3342:
 11476                           
 11477                           ;ADC.c: 40:             ADCON0bits.CHS=5;
 11478  12C5  1283               	bcf	3,5	;RP0=0, select bank0
 11479  12C6  1303               	bcf	3,6	;RP1=0, select bank0
 11480  12C7  081F               	movf	31,w	;volatile
 11481  12C8  39C3               	andlw	-61
 11482  12C9  3814               	iorlw	20
 11483  12CA  009F               	movwf	31	;volatile
 11484                           
 11485                           ;ADC.c: 41:             break;
 11486  12CB  2B5A               	goto	l171
 11487  12CC                     l177:	
 11488                           ;ADC.c: 42:         case 6:
 11489                           
 11490                           
 11491                           ;ADC.c: 43:             TRISEbits.TRISE1=1;
 11492  12CC  1489               	bsf	9,1	;volatile
 11493                           
 11494                           ;ADC.c: 44:             ANSELbits.ANS6=1;
 11495  12CD  1683               	bsf	3,5	;RP0=1, select bank3
 11496  12CE  1703               	bsf	3,6	;RP1=1, select bank3
 11497  12CF  1708               	bsf	8,6	;volatile
 11498  12D0                     l3344:
 11499                           
 11500                           ;ADC.c: 45:             ADCON0bits.CHS=6;
 11501  12D0  1283               	bcf	3,5	;RP0=0, select bank0
 11502  12D1  1303               	bcf	3,6	;RP1=0, select bank0
 11503  12D2  081F               	movf	31,w	;volatile
 11504  12D3  39C3               	andlw	-61
 11505  12D4  3818               	iorlw	24
 11506  12D5  009F               	movwf	31	;volatile
 11507                           
 11508                           ;ADC.c: 46:             break;
 11509  12D6  2B5A               	goto	l171
 11510  12D7                     l178:	
 11511                           ;ADC.c: 47:         case 7:
 11512                           
 11513                           
 11514                           ;ADC.c: 48:             TRISEbits.TRISE2=1;
 11515  12D7  1509               	bsf	9,2	;volatile
 11516                           
 11517                           ;ADC.c: 49:             ANSELbits.ANS7=1;
 11518  12D8  1683               	bsf	3,5	;RP0=1, select bank3
 11519  12D9  1703               	bsf	3,6	;RP1=1, select bank3
 11520  12DA  1788               	bsf	8,7	;volatile
 11521  12DB                     l3346:
 11522                           
 11523                           ;ADC.c: 50:             ADCON0bits.CHS=7;
 11524  12DB  1283               	bcf	3,5	;RP0=0, select bank0
 11525  12DC  1303               	bcf	3,6	;RP1=0, select bank0
 11526  12DD  081F               	movf	31,w	;volatile
 11527  12DE  39C3               	andlw	-61
 11528  12DF  381C               	iorlw	28
 11529  12E0  009F               	movwf	31	;volatile
 11530                           
 11531                           ;ADC.c: 51:             break;
 11532  12E1  2B5A               	goto	l171
 11533  12E2                     l179:	
 11534                           ;ADC.c: 52:         case 8:
 11535                           
 11536                           
 11537                           ;ADC.c: 53:             TRISBbits.TRISB2=1;
 11538  12E2  1506               	bsf	6,2	;volatile
 11539                           
 11540                           ;ADC.c: 54:             ANSELHbits.ANS8=1;
 11541  12E3  1683               	bsf	3,5	;RP0=1, select bank3
 11542  12E4  1703               	bsf	3,6	;RP1=1, select bank3
 11543  12E5  1409               	bsf	9,0	;volatile
 11544  12E6                     l3348:
 11545                           
 11546                           ;ADC.c: 55:             ADCON0bits.CHS=8;
 11547  12E6  1283               	bcf	3,5	;RP0=0, select bank0
 11548  12E7  1303               	bcf	3,6	;RP1=0, select bank0
 11549  12E8  081F               	movf	31,w	;volatile
 11550  12E9  39C3               	andlw	-61
 11551  12EA  3820               	iorlw	32
 11552  12EB  009F               	movwf	31	;volatile
 11553                           
 11554                           ;ADC.c: 56:             break;
 11555  12EC  2B5A               	goto	l171
 11556  12ED                     l180:	
 11557                           ;ADC.c: 57:         case 9:
 11558                           
 11559                           
 11560                           ;ADC.c: 58:             TRISBbits.TRISB3=1;
 11561  12ED  1586               	bsf	6,3	;volatile
 11562                           
 11563                           ;ADC.c: 59:             ANSELHbits.ANS9=1;
 11564  12EE  1683               	bsf	3,5	;RP0=1, select bank3
 11565  12EF  1703               	bsf	3,6	;RP1=1, select bank3
 11566  12F0  1489               	bsf	9,1	;volatile
 11567  12F1                     l3350:
 11568                           
 11569                           ;ADC.c: 60:             ADCON0bits.CHS=9;
 11570  12F1  1283               	bcf	3,5	;RP0=0, select bank0
 11571  12F2  1303               	bcf	3,6	;RP1=0, select bank0
 11572  12F3  081F               	movf	31,w	;volatile
 11573  12F4  39C3               	andlw	-61
 11574  12F5  3824               	iorlw	36
 11575  12F6  009F               	movwf	31	;volatile
 11576                           
 11577                           ;ADC.c: 61:             break;
 11578  12F7  2B5A               	goto	l171
 11579  12F8                     l181:	
 11580                           ;ADC.c: 62:         case 10:
 11581                           
 11582                           
 11583                           ;ADC.c: 63:             TRISBbits.TRISB1=1;
 11584  12F8  1486               	bsf	6,1	;volatile
 11585                           
 11586                           ;ADC.c: 64:             ANSELHbits.ANS10=1;
 11587  12F9  1683               	bsf	3,5	;RP0=1, select bank3
 11588  12FA  1703               	bsf	3,6	;RP1=1, select bank3
 11589  12FB  1509               	bsf	9,2	;volatile
 11590  12FC                     l3352:
 11591                           
 11592                           ;ADC.c: 65:             ADCON0bits.CHS=10;
 11593  12FC  1283               	bcf	3,5	;RP0=0, select bank0
 11594  12FD  1303               	bcf	3,6	;RP1=0, select bank0
 11595  12FE  081F               	movf	31,w	;volatile
 11596  12FF  39C3               	andlw	-61
 11597  1300  3828               	iorlw	40
 11598  1301  009F               	movwf	31	;volatile
 11599                           
 11600                           ;ADC.c: 66:             break;
 11601  1302  2B5A               	goto	l171
 11602  1303                     l182:	
 11603                           ;ADC.c: 67:         case 11:
 11604                           
 11605                           
 11606                           ;ADC.c: 68:             TRISBbits.TRISB4=1;
 11607  1303  1606               	bsf	6,4	;volatile
 11608                           
 11609                           ;ADC.c: 69:             ANSELHbits.ANS11=1;
 11610  1304  1683               	bsf	3,5	;RP0=1, select bank3
 11611  1305  1703               	bsf	3,6	;RP1=1, select bank3
 11612  1306  1589               	bsf	9,3	;volatile
 11613  1307                     l3354:
 11614                           
 11615                           ;ADC.c: 70:             ADCON0bits.CHS=11;
 11616  1307  1283               	bcf	3,5	;RP0=0, select bank0
 11617  1308  1303               	bcf	3,6	;RP1=0, select bank0
 11618  1309  081F               	movf	31,w	;volatile
 11619  130A  39C3               	andlw	-61
 11620  130B  382C               	iorlw	44
 11621  130C  009F               	movwf	31	;volatile
 11622                           
 11623                           ;ADC.c: 71:             break;
 11624  130D  2B5A               	goto	l171
 11625  130E                     l183:	
 11626                           ;ADC.c: 72:         case 12:
 11627                           
 11628                           
 11629                           ;ADC.c: 73:             TRISBbits.TRISB0=1;
 11630  130E  1406               	bsf	6,0	;volatile
 11631                           
 11632                           ;ADC.c: 74:             ANSELHbits.ANS12=1;
 11633  130F  1683               	bsf	3,5	;RP0=1, select bank3
 11634  1310  1703               	bsf	3,6	;RP1=1, select bank3
 11635  1311  1609               	bsf	9,4	;volatile
 11636  1312                     l3356:
 11637                           
 11638                           ;ADC.c: 75:             ADCON0bits.CHS=12;
 11639  1312  1283               	bcf	3,5	;RP0=0, select bank0
 11640  1313  1303               	bcf	3,6	;RP1=0, select bank0
 11641  1314  081F               	movf	31,w	;volatile
 11642  1315  39C3               	andlw	-61
 11643  1316  3830               	iorlw	48
 11644  1317  009F               	movwf	31	;volatile
 11645                           
 11646                           ;ADC.c: 76:             break;
 11647  1318  2B5A               	goto	l171
 11648  1319                     l184:	
 11649                           ;ADC.c: 77:         case 13:
 11650                           
 11651                           
 11652                           ;ADC.c: 78:             TRISBbits.TRISB5=1;
 11653  1319  1686               	bsf	6,5	;volatile
 11654                           
 11655                           ;ADC.c: 79:             ANSELHbits.ANS13=1;
 11656  131A  1683               	bsf	3,5	;RP0=1, select bank3
 11657  131B  1703               	bsf	3,6	;RP1=1, select bank3
 11658  131C  1689               	bsf	9,5	;volatile
 11659  131D                     l3358:
 11660                           
 11661                           ;ADC.c: 80:             ADCON0bits.CHS=13;
 11662  131D  1283               	bcf	3,5	;RP0=0, select bank0
 11663  131E  1303               	bcf	3,6	;RP1=0, select bank0
 11664  131F  081F               	movf	31,w	;volatile
 11665  1320  39C3               	andlw	-61
 11666  1321  3834               	iorlw	52
 11667  1322  009F               	movwf	31	;volatile
 11668                           
 11669                           ;ADC.c: 81:             break;
 11670  1323  2B5A               	goto	l171
 11671  1324                     l3360:
 11672                           
 11673                           ;ADC.c: 83:             return 0;
 11674  1324  3000               	movlw	0
 11675  1325  2B6A               	goto	l186
 11676  1326                     l3366:
 11677  1326  0875               	movf	ADCmed@ch,w
 11678  1327  00F3               	movwf	??_ADCmed
 11679  1328  01F4               	clrf	??_ADCmed+1
 11680                           
 11681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11682                           ; Switch size 1, requested type "simple"
 11683                           ; Number of cases is 1, Range of values is 0 to 0
 11684                           ; switch strategies available:
 11685                           ; Name         Instructions Cycles
 11686                           ; simple_byte            4     3 (average)
 11687                           ; direct_byte           11     8 (fixed)
 11688                           ; jumptable            260     6 (fixed)
 11689                           ;	Chosen strategy is simple_byte
 11690  1329  0874               	movf	??_ADCmed+1,w
 11691  132A  3A00               	xorlw	0	; case 0
 11692  132B  1903               	skipnz
 11693  132C  2B2E               	goto	l4602
 11694  132D  2B24               	goto	l3360
 11695  132E                     l4602:
 11696                           
 11697                           ; Switch size 1, requested type "simple"
 11698                           ; Number of cases is 14, Range of values is 0 to 13
 11699                           ; switch strategies available:
 11700                           ; Name         Instructions Cycles
 11701                           ; simple_byte           43    22 (average)
 11702                           ; direct_byte           50     8 (fixed)
 11703                           ; jumptable            260     6 (fixed)
 11704                           ;	Chosen strategy is simple_byte
 11705  132E  0873               	movf	??_ADCmed,w
 11706  132F  3A00               	xorlw	0	; case 0
 11707  1330  1903               	skipnz
 11708  1331  2A8C               	goto	l170
 11709  1332  3A01               	xorlw	1	; case 1
 11710  1333  1903               	skipnz
 11711  1334  2A95               	goto	l172
 11712  1335  3A03               	xorlw	3	; case 2
 11713  1336  1903               	skipnz
 11714  1337  2AA0               	goto	l173
 11715  1338  3A01               	xorlw	1	; case 3
 11716  1339  1903               	skipnz
 11717  133A  2AAB               	goto	l174
 11718  133B  3A07               	xorlw	7	; case 4
 11719  133C  1903               	skipnz
 11720  133D  2AB6               	goto	l175
 11721  133E  3A01               	xorlw	1	; case 5
 11722  133F  1903               	skipnz
 11723  1340  2AC1               	goto	l176
 11724  1341  3A03               	xorlw	3	; case 6
 11725  1342  1903               	skipnz
 11726  1343  2ACC               	goto	l177
 11727  1344  3A01               	xorlw	1	; case 7
 11728  1345  1903               	skipnz
 11729  1346  2AD7               	goto	l178
 11730  1347  3A0F               	xorlw	15	; case 8
 11731  1348  1903               	skipnz
 11732  1349  2AE2               	goto	l179
 11733  134A  3A01               	xorlw	1	; case 9
 11734  134B  1903               	skipnz
 11735  134C  2AED               	goto	l180
 11736  134D  3A03               	xorlw	3	; case 10
 11737  134E  1903               	skipnz
 11738  134F  2AF8               	goto	l181
 11739  1350  3A01               	xorlw	1	; case 11
 11740  1351  1903               	skipnz
 11741  1352  2B03               	goto	l182
 11742  1353  3A07               	xorlw	7	; case 12
 11743  1354  1903               	skipnz
 11744  1355  2B0E               	goto	l183
 11745  1356  3A01               	xorlw	1	; case 13
 11746  1357  1903               	skipnz
 11747  1358  2B19               	goto	l184
 11748  1359  2B24               	goto	l3360
 11749  135A                     l171:
 11750                           
 11751                           ;ADC.c: 86:     ADCON0bits.ADON = 1;
 11752  135A  141F               	bsf	31,0	;volatile
 11753  135B                     l3368:
 11754                           
 11755                           ;ADC.c: 87:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 11756  135B  3006               	movlw	6
 11757  135C  00F3               	movwf	??_ADCmed
 11758  135D                     u7777:
 11759  135D  0BF3               	decfsz	??_ADCmed,f
 11760  135E  2B5D               	goto	u7777
 11761  135F  0000               	nop
 11762  1360                     l3370:
 11763                           
 11764                           ;ADC.c: 88:     ADCON0bits.GO = 1;
 11765  1360  1283               	bcf	3,5	;RP0=0, select bank0
 11766  1361  1303               	bcf	3,6	;RP1=0, select bank0
 11767  1362  149F               	bsf	31,1	;volatile
 11768  1363                     l3372:
 11769                           
 11770                           ;ADC.c: 91:     if (ADCON0bits.GO_DONE == 1){
 11771  1363  1C9F               	btfss	31,1	;volatile
 11772  1364  2B66               	goto	u5421
 11773  1365  2B67               	goto	u5420
 11774  1366                     u5421:
 11775  1366  2B68               	goto	l188
 11776  1367                     u5420:
 11777  1367  2B63               	goto	l3372
 11778  1368                     l188:	
 11779                           ;ADC.c: 94:     else{
 11780                           
 11781                           
 11782                           ;ADC.c: 95:         ADCON0bits.ADON = 0;
 11783  1368  101F               	bcf	31,0	;volatile
 11784  1369                     l3378:
 11785                           
 11786                           ;ADC.c: 96:         return ADRESH;
 11787  1369  081E               	movf	30,w	;volatile
 11788  136A                     l186:
 11789  136A  0008               	return
 11790  136B                     __end_of_ADCmed:
 11791                           
 11792                           	psect	text36
 11793  1955                     __ptext36:	
 11794 ;; *************** function _ISR *****************
 11795 ;; Defined at:
 11796 ;;		line 48 in file "main.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;		None
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0, pclath, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11810 ;;      Params:         0       0       0       0       0
 11811 ;;      Locals:         0       0       0       0       0
 11812 ;;      Temps:          3       0       0       0       0
 11813 ;;      Totals:         3       0       0       0       0
 11814 ;;Total ram usage:        3 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    1
 11817 ;; This function calls:
 11818 ;;		_Read_USART
 11819 ;; This function is called by:
 11820 ;;		Interrupt level 1
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           
 11825                           ;psect for function _ISR
 11826  1955                     _ISR:
 11827  1955                     i1l3622:
 11828                           
 11829                           ;main.c: 49: 
 11830  1955  1283               	bcf	3,5	;RP0=0, select bank0
 11831  1956  1303               	bcf	3,6	;RP1=0, select bank0
 11832  1957  1E8C               	btfss	12,5	;volatile
 11833  1958  295A               	goto	u582_21
 11834  1959  295B               	goto	u582_20
 11835  195A                     u582_21:
 11836  195A  297B               	goto	i1l69
 11837  195B                     u582_20:
 11838  195B                     i1l3624:
 11839                           
 11840                           ;main.c: 50:         sprintf(BUFFER, "%f %f  %d" , V1,V2,contador);
 11841  195B  128C               	bcf	12,5	;volatile
 11842  195C                     i1l3626:
 11843                           
 11844                           ;main.c: 51:         Write_USART_String(BUFFER);
 11845  195C  160A  158A  2061  160A  158A  	fcall	_Read_USART
 11846  1961  00F0               	movwf	??_ISR
 11847  1962  0870               	movf	??_ISR,w
 11848  1963  00F8               	movwf	_readUSART
 11849  1964                     i1l3628:
 11850                           
 11851                           ;main.c: 52:         Write_USART(13);
 11852  1964  302B               	movlw	43
 11853  1965  0678               	xorwf	_readUSART,w
 11854  1966  1D03               	btfss	3,2
 11855  1967  2969               	goto	u583_21
 11856  1968  296A               	goto	u583_20
 11857  1969                     u583_21:
 11858  1969  2971               	goto	i1l3632
 11859  196A                     u583_20:
 11860  196A                     i1l3630:
 11861                           
 11862                           ;main.c: 53:         Write_USART(10);
 11863  196A  3001               	movlw	1
 11864  196B  00F0               	movwf	??_ISR
 11865  196C  0870               	movf	??_ISR,w
 11866  196D  1283               	bcf	3,5	;RP0=0, select bank0
 11867  196E  1303               	bcf	3,6	;RP1=0, select bank0
 11868  196F  07ED               	addwf	_contador,f
 11869                           
 11870                           ;main.c: 54:         clear_LCD();
 11871  1970  297B               	goto	i1l69
 11872  1971                     i1l3632:
 11873  1971  302D               	movlw	45
 11874  1972  0678               	xorwf	_readUSART,w
 11875  1973  1D03               	btfss	3,2
 11876  1974  2976               	goto	u584_21
 11877  1975  2977               	goto	u584_20
 11878  1976                     u584_21:
 11879  1976  297B               	goto	i1l69
 11880  1977                     u584_20:
 11881  1977                     i1l3634:
 11882                           
 11883                           ;main.c: 56:         write_string("V1   V2   CONT");
 11884  1977  3001               	movlw	1
 11885  1978  1283               	bcf	3,5	;RP0=0, select bank0
 11886  1979  1303               	bcf	3,6	;RP1=0, select bank0
 11887  197A  02ED               	subwf	_contador,f
 11888  197B                     i1l69:
 11889  197B  0872               	movf	??_ISR+2,w
 11890  197C  008A               	movwf	10
 11891  197D  0E71               	swapf	??_ISR+1,w
 11892  197E  0083               	movwf	3
 11893  197F  0EFE               	swapf	btemp,f
 11894  1980  0E7E               	swapf	btemp,w
 11895  1981  0009               	retfie
 11896  1982                     __end_of_ISR:
 11897                           
 11898                           	psect	intentry
 11899  0004                     __pintentry:	
 11900                           ;incstack = 0
 11901                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 11902                           
 11903  0004                     interrupt_function:
 11904  007E                     saved_w	set	btemp
 11905  0004  00FE               	movwf	btemp
 11906  0005  0E03               	swapf	3,w
 11907  0006  00F1               	movwf	??_ISR+1
 11908  0007  080A               	movf	10,w
 11909  0008  00F2               	movwf	??_ISR+2
 11910  0009  160A  158A  2955   	ljmp	_ISR
 11911                           
 11912                           	psect	text37
 11913  1861                     __ptext37:	
 11914 ;; *************** function _Read_USART *****************
 11915 ;; Defined at:
 11916 ;;		line 37 in file "USART.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;		None
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;		None
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  1    wreg      unsigned char 
 11923 ;; Registers used:
 11924 ;;		wreg
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11930 ;;      Params:         0       0       0       0       0
 11931 ;;      Locals:         0       0       0       0       0
 11932 ;;      Temps:          0       0       0       0       0
 11933 ;;      Totals:         0       0       0       0       0
 11934 ;;Total ram usage:        0 bytes
 11935 ;; Hardware stack levels used:    1
 11936 ;; This function calls:
 11937 ;;		Nothing
 11938 ;; This function is called by:
 11939 ;;		_ISR
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           
 11944                           ;psect for function _Read_USART
 11945  1861                     _Read_USART:
 11946  1861                     i1l3270:	
 11947                           ;incstack = 0
 11948                           ; Regs used in _Read_USART: [wreg]
 11949                           
 11950  1861                     i1l233:	
 11951                           ;USART.c: 38:   while(!RCIF);
 11952                           
 11953  1861  1283               	bcf	3,5	;RP0=0, select bank0
 11954  1862  1303               	bcf	3,6	;RP1=0, select bank0
 11955  1863  1E8C               	btfss	12,5	;volatile
 11956  1864  2866               	goto	u533_21
 11957  1865  2867               	goto	u533_20
 11958  1866                     u533_21:
 11959  1866  2861               	goto	i1l233
 11960  1867                     u533_20:
 11961  1867                     i1l3272:
 11962                           
 11963                           ;USART.c: 39:   return RCREG;
 11964  1867  081A               	movf	26,w	;volatile
 11965  1868                     i1l236:
 11966  1868  0008               	return
 11967  1869                     __end_of_Read_USART:
 11968  007E                     btemp	set	126	;btemp
 11969  007E                     wtemp0	set	126
 11970                           
 11971                           	psect	config
 11972                           
 11973                           ;Config register CONFIG1 @ 0x2007
 11974                           ;	Oscillator Selection bits
 11975                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11976                           ;	Watchdog Timer Enable bit
 11977                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11978                           ;	Power-up Timer Enable bit
 11979                           ;	PWRTE = OFF, PWRT disabled
 11980                           ;	RE3/MCLR pin function select bit
 11981                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11982                           ;	Code Protection bit
 11983                           ;	CP = OFF, Program memory code protection is disabled
 11984                           ;	Data Code Protection bit
 11985                           ;	CPD = OFF, Data memory code protection is disabled
 11986                           ;	Brown Out Reset Selection bits
 11987                           ;	BOREN = OFF, BOR disabled
 11988                           ;	Internal External Switchover bit
 11989                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11990                           ;	Fail-Safe Clock Monitor Enabled bit
 11991                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11992                           ;	Low Voltage Programming Enable bit
 11993                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11994                           ;	In-Circuit Debugger Mode bit
 11995                           ;	DEBUG = 0x1, unprogrammed default
 11996  2007                     	org	8199
 11997  2007  20D4               	dw	8404
 11998                           
 11999                           ;Config register CONFIG2 @ 0x2008
 12000                           ;	Brown-out Reset Selection bit
 12001                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12002                           ;	Flash Program Memory Self Write Enable bits
 12003                           ;	WRT = OFF, Write protection off
 12004  2008                     	org	8200
 12005  2008  3FFF               	dw	16383

Data Sizes:
    Strings     46
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     52      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> BUFFER(BANK1[20]), STR_1(CODE[21]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[15]), BUFFER(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _main->_set_cursor
    _main->_write_string
    _write_string->_write_char
    _write_char->_port
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    _set_cursor->_CMDs
    ___flmul->___awmod
    ___flmul->___lwmod
    _clear_LCD->_CMDs
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _LCD_init->_CMDs
    _CMDs->_port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversion->___flmul
    ___flmul->___awdiv
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   43476
                                             49 BANK1      3     3      0
                             _ADCmed
                           _LCD_init
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                          _clear_LCD
                         _conversion
                         _set_cursor
                              _setup
                            _sprintf
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     589
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     279
                                              4 COMMON     2     2      0
                               _port
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   34772
                                              8 BANK1     41    30     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8392
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6448
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     651
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _conversion                                           9     5      4    5232
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     279
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4    1118
                                              4 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     527
                                              0 BANK0      2     2      0
                               _CMDs
                               _port
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     279
                                              4 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _port                                                 1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCmed                                               3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCmed
   _LCD_init
     _CMDs
       _port
     _port
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _clear_LCD
     _CMDs
       _port
   _conversion
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _set_cursor
     _CMDs
       _port
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _write_string
     _write_char
       _port

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     34      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 17:20:06 2021

                          pc 0002                           l80 19E7                           l83 07FC  
                         _V1 00D8                           _V2 00D4                 ___awdiv@sign 0028  
                         fsr 0004          ___wmul@multiplicand 0075          __Umul8_16@word_mpld 0022  
       __size_of_Write_USART 000C                          l110 1A36                          l111 1A37  
                        l120 1A59                          l112 1A3D                          l121 1A5A  
                        l113 1A3E                          l122 1A60                          l114 1A44  
                        l130 10E6                          l115 1A45                          l124 1A61  
                        l116 1A4B                          l108 1A2D                          l117 1A4C  
                        l109 1A30                          l221 10CF                          l118 1A52  
                        l230 1929                          l142 188F                          l119 1A53  
                        l127 18AF                          l224 10D9                          l136 18D5  
                        l170 128C                          l218 1280                          l171 135A  
                        l139 19AF                          l180 12ED                          l172 1295  
                        l412 193A                          l148 084E                          l181 12F8  
                        l173 12A0                          l182 1303                          l174 12AB  
                        l414 1954                          l183 130E                          l175 12B6  
                        l343 0FFF                          l184 1319                          l176 12C1  
                        l600 1AF7                          l336 1577                          l408 07E9  
                        l177 12CC                          l186 136A                          l178 12D7  
                        l179 12E2                          l603 1E01                          l611 1873  
                        l188 1368                          l357 003F                          l606 1E6D  
                        l622 1D30                          l630 1F71                          l607 1E86  
                        l615 1D45                          l391 0516                          l448 1C60  
                        l640 1FF2                          l384 04D2                          l625 1D45  
                        l633 1FC2                          l477 1D5A                          l629 1FFF  
                        l565 1CC9                          l582 11A4                          l718 1AA7  
                        l487 1DE2                          l743 1682                          l583 1109  
                        l760 174D                          l752 17FF                          l728 1A23  
                        l841 0C08                          l745 1659                          l593 1197  
                        l770 1793                          l586 1167                          l578 1BF8  
                        l835 0C9C                          l739 15DB                          l764 1771  
                        l668 1B9D                          l781 17F3                          l773 17D1  
                        l854 18EC                          l598 1AC6                          l782 17FF  
                        l847 0C90                          l599 1AE2                          l856 18FE  
                        l881 1F42                          l785 1B47                          l892 1F0C  
                        l893 1F18                          l885 1EF0                          l879 1EAB  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          _ISR 1955                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0021                 ___flmul@aexp 003D  
               ___flmul@bexp 003E                 ___flmul@sign 0038                 ___flmul@temp 0043  
               ___flmul@prod 003F  __size_of_Write_USART_String 002B                         ?_ISR 0070  
               ___fltol@exp1 0062                         l3220 1AF8                         l4100 1C49  
                       l4020 10F4                         l4012 1FE7                         l4004 1FCE  
                       l4110 1D49                         l3222 1AFC                         l4102 1C52  
                       l4030 110A                         l4014 1FF7                         l4006 1FE0  
                       l4120 1D75                         l4112 1D4D                         l2360 18E2  
                       l4200 1E8A                         l3160 1873                         l2600 163D  
                       l2520 157F                         l4104 1C58                         l4040 1137  
                       l4032 1112                         l4024 10FD                         l3330 1288  
                       l4130 1D9A                         l4122 1D7D                         l4114 1D5E  
                       l2362 18E6                         l4202 1E8F                         l2610 166D  
                       l2602 165D                         l2530 1594                         l2522 1585  
                       l3170 1CE0                         l4050 116B                         l4042 1149  
                       l4034 1123                         l4018 10E7                         l3340 12BA  
                       l3332 1290                         l4132 1DAC                         l4124 1D80  
                       l4140 1DCA                         l4116 1D69                         l4108 1D46  
                       l2364 18F5                         l2356 18D9                         l4220 1ED9  
                       l4212 1EBC                         l4204 1E93                         l3156 1869  
                       l2700 17E8                         l2612 1676                         l2604 1666  
                       l2540 15AC                         l2532 159C                         l2524 1589  
                       l3180 1D04                         l3172 1CF5                         l3164 1CCA  
                       l4044 1157                         l4036 1125                         l3350 12F1  
                       l3342 12C5                         l3334 1299                         l4142 1DCF  
                       l4134 1DBA                         l4126 1D8D                         l4118 1D6D  
                       l2366 18FA                         l2358 18DB                         l4230 1F10  
                       l4222 1EE7                         l4214 1EC1                         l4206 1EA3  
                       l4150 1ABE                         l3158 1871                         l2710 17FE  
                       l2702 17E9                         l2630 16BC                         l2622 1694  
                       l2606 1668                         l2614 167A                         l2550 15BE  
                       l2542 15B2                         l2534 159D                         l2526 158A  
                       l2518 1578                         l3174 1CF6                         l3166 1CD7  
                       l4070 192A                         l4046 1158                         l4038 112E  
                       l4310 007F                         l4302 0041                         _ADC0 007A  
                       _ADC1 0079                         l3360 1324                         l3352 12FC  
                       l3344 12D0                         l3336 12A4                         l3328 1282  
                       l4144 1DDA                         l4136 1DBB                         l4128 1D91  
                       l2800 0BD4                         l2720 094E                         l2712 093C  
                       l4240 1F3A                         l4232 1F1A                         l4224 1EF7  
                       l4216 1ECE                         l4208 1EB3                         l3280 07F7  
                       l4152 1ADA                         l4160 1DE3                         l2704 17ED  
                       l2632 16BE                         l2624 16AB                         l2616 1686  
                       l2640 16D1                         l2608 166C                         l2552 15C3  
                       l2560 15D3                         l2544 15B3                         l2528 158F  
                       l2536 159F                         l3176 1CFE                         l4080 194E  
                       l4072 192E                         l4064 118C                         l4056 1173  
                       l4048 1161                         l4400 04C6                         l4320 00CB  
                       l4312 0083                         l4304 0061                         l3370 1360  
                       l3354 1307                         l3346 12DB                         l3338 12AF  
                       l4138 1DC4                         l4250 1262                         l2810 0BEC  
                       l2802 0BD8                         l2730 096A                         l2722 0953  
                       l2714 0943                         l4234 1F30                         l4226 1F02  
                       l4218 1ED5                         l3282 07F8                         l4154 1AF4  
                       l4170 1E45                         l4162 1DF9                         l2706 17EF  
                       l2642 16E7                         l2650 173F                         l2634 16C2  
                       l2626 16AF                         l2618 168B                         l2570 15F1  
                       l2562 15E1                         l2554 15C8                         l2546 15B9  
                       l2538 15A7                         l3194 1D25                         l3186 1D0C  
                       l3178 1D00                         l4090 1C1B                         l4074 1932  
                       l4066 119C                         l4058 1185                         l4410 04FA  
                       l4402 04DA                         l4330 0139                         l4322 00F2  
                       l4314 00AA                         l4306 006D                         l3372 1363  
                       l3356 1312                         l3348 12E6                         l4260 1276  
                       l4252 1265                         l4244 11A5                         l2820 0C0D  
                       l2812 0BED                         l2804 0BD9                         l2740 097F  
                       l2732 096F                         l2724 0958                         l2716 0949  
                       l4236 1F35                         l4228 1F06                         l4500 18CA  
                       l3284 07FB                         l3276 07EA                         l4156 1AF6  
                       l4148 1AA8                         l4172 1E49                         l4164 1E15  
                       l2708 17FA                         l2660 176C                         l2652 1755  
                       l2644 1725                         l2636 16C3                         l2628 16B3  
                       l2580 1605                         l2572 15F5                         l2564 15E5  
                       l2556 15D0                         l2548 15BD                         l3196 1D35  
                       l3188 1D1E                         l4092 1C1F                         l4084 1BF9  
                       l4180 1B48                         l4076 1941                         l4420 052B  
                       l4412 0509                         l4404 04E3                         l4340 01D4  
                       l4332 013D                         l4324 00FD                         l4316 00C3  
                       l4308 0071                         l3358 131D                         l3366 1326  
                       l4270 1982                         l4262 1279                         l4254 126E  
                       l4246 1200                         l2822 0C12                         l2830 0C43  
                       l2814 0BF1                         l2806 0BE2                         l2750 099B  
                       l2742 0984                         l2734 0975                         l2726 0960  
                       l2718 094D                         l4238 1F39                         l4502 18CF  
                       l3278 07F6                         l4174 1E83                         l4166 1E1D  
                       l2670 177F                         l2662 1770                         l2654 175A  
                       l2646 172B                         l2638 16CC                         l2590 1619  
                       l2582 1609                         l2574 15F9                         l2566 15E9  
                       l2558 15D1                         l3198 1D3A                         l4094 1C28  
                       l4086 1C0B                         l4190 1B78                         l4182 1B52  
                       l4078 1948                         l4430 0642                         l4422 052F  
                       l4414 0510                         l4406 04E7                         l4350 0253  
                       l4342 01DD                         l4334 0143                         l4326 0103  
                       l4318 00C7                         l4510 0832                         l3368 135B  
                       l4280 19A3                         l4272 1986                         l4264 127A  
                       l4256 1272                         l4248 1209                         l3392 18FF  
                       l2840 0C76                         l2832 0C50                         l2824 0C20  
                       l2816 0C05                         l2808 0BE8                         l2760 09C6  
                       l2752 09A0                         l2744 098C                         l2736 0979  
                       l2728 0962                         l4176 1E85                         l4168 1E21  
                       l2680 1790                         l2664 1775                         l2672 1781  
                       l2648 1730                         l2592 161D                         l2584 160D  
                       l2576 15FD                         l2568 15ED                         l4096 1C3A  
                       l4088 1C0E                         l4192 1B86                         l4184 1B55  
                       l3800 1BAA                         l4440 06BC                         l4432 064E  
                       l4424 054D                         l4416 051F                         l4408 04ED  
                       l4360 02E8                         l4352 0260                         l4344 0206  
                       l4336 0162                         l4328 0116                         l4600 0053  
                       l4504 0809                         l4520 086D                         l4512 084F  
                       l3378 1369                         l4602 132E                         l4282 19A9  
                       l4274 198C                         l4266 127D                         l4258 1273  
                       l3394 1901                         l2842 0C84                         l2834 0C5B  
                       l2826 0C24                         l2770 0A63                         l2762 09E3  
                       l2746 098E                         l2738 097A                         l2690 17AF  
                       l2666 1778                         l2658 1763                         l2674 1785  
                       l2594 1621                         l2586 1611                         l2578 1601  
                       l4098 1C48                         l4194 1B8F                         l4186 1B62  
                       l3810 1BBE                         l3802 1BAC                         l4450 06E2  
                       l4442 06C2                         l4426 05A8                         l4434 06A9  
                       l4418 0524                         l4370 0362                         l4362 02F1  
                       l4354 0289                         l4338 01AD                         l4346 020E  
                       l4290 0025                         l4506 080E                         l4530 08C8  
                       l4522 0878                         l4514 0854                         l3740 1A42  
                       l3732 1A25                         l4276 1997                         l2852 10CF  
                       l3396 1912                         l4284 10DA                         l2844 0C88  
                       l2836 0C6A                         l2828 0C3D                         l2780 0AC6  
                       l2772 0A6C                         l2764 09FF                         l2756 09A9  
                       l2748 0996                         l2692 17CD                         l2684 1798  
                       l2676 1786                         l2668 177A                         l2588 1615  
                       l2596 1625                         l4188 1B66                         l4196 1B95  
                       l3820 1BDD                         l3812 1BC5                         l3804 1BB0  
                       l4460 06F3                         l4452 06E6                         l4436 06B1  
                       l4428 0603                         l4364 02F9                         l4356 02B0  
                       l4372 036B                         l4348 020E                         l4444 06C9  
                       l4292 002A                         l3900 1881                         l4508 082A  
                       l4540 0909                         l4532 08EF                         l4524 0883  
                       l4516 0863                         l3742 1A49                         l3734 1A29  
                       l4278 199D                         l2854 10D5                         l3398 1916  
                       l2846 0C89                         l2838 0C74                         l2790 0B66  
                       l2782 0ADF                         l2774 0A7C                         l2766 0A2B  
                       l2758 09B9                         l4286 19B3                         l2694 17D6  
                       l2686 179D                         l2678 178A                         l2598 1626  
                       l3910 1374                         l3750 1C61                         l3822 1BE4  
                       l3814 1BC9                         l3806 1BB5                         l4470 0747  
                       l4454 06F1                         l4446 06DA                         l4438 06B8  
                       l4390 0414                         l4374 03A0                         l4366 0317  
                       l4358 02BF                         l4294 0030                         l3902 1884  
                       l4542 0911                         l4534 08F8                         l4526 08A1  
                       l4518 0868                         l3744 1A50                         l3736 1A34  
                       l2848 0C94                         l2792 0B8C                         l2784 0AFC  
                       l2776 0A99                         l2768 0A47                         l2696 17DB  
                       l2688 17AB                         l3840 1A76                         l3832 1A62  
                       l3760 1C73                         l3752 1C64                         l3816 1BCD  
                       l3808 1BBB                         l3824 1BEA                         l4480 07C5  
                       l4472 074B                         l4464 072A                         l4448 06DE  
                       l4392 0420                         l4384 03D3                         l4376 03CF  
                       l4296 0037                         l3904 1887                         l4544 091A  
                       l4536 08FE                         l4528 08BF                         l3746 1A57  
                       l3738 1A3B                         l2794 0BB4                         l2786 0B29  
                       l2778 0AA9                         l2698 17E3                         l3850 1A96  
                       l3842 1A7A                         l3834 1A66                         l3922 1534  
                       l3770 1C87                         l3762 1C78                         l3754 1C68  
                       l3826 1BEF                         l3818 1BD7                         l3930 0CA6  
                       l4474 0753                         l4466 0734                         l4394 0427  
                       l4378 03D1                         l4298 003C                         l4482 07D3  
                       l3906 188A                         l4546 0921                         l4538 0904  
                       l3748 1A5E                         l2796 0BBD                         l2788 0B39  
                       l4492 18B3                         l3852 1A9D                         l3844 1A7E  
                       l3836 1A6C                         l3860 19EE                         l3916 1483  
                       l3908 136E                         l3780 1CAD                         l3772 1C8E  
                       l3764 1C7C                         l3756 1C6D                         l3828 1BF4  
                       l3940 0D9E                         l3932 0CAD                         l4476 07BA  
                       l4468 0740                         l4396 042C                         l4388 040A  
                       l4484 07E5                         l4548 092A                         l2798 0BCB  
                       l4494 18B8                         l3846 1A8F                         l3838 1A6F  
                       l3854 1AA3                         l3870 1A0C                         l3862 19F3  
                       l3918 1489                         l3790 1CC5                         l3782 1CAE  
                       l3774 1C92                         l3766 1C7E                         l3758 1C6F  
                       l3950 0E5A                         l3926 0CA0                         l4478 07C1  
                       l4398 0487                         l3880 1891                         l4496 18BD  
                       l3848 1A95                         l3872 1A12                         l3864 19FA  
                       l3784 1CB5                         l3776 1C96                         l3768 1C84  
                       l3944 0E26                         l3928 0CA4                         l3890 18A3  
                       l3882 1894                         l4498 18C4                         l3874 1A19  
                       l3866 19FE                         l3858 19E8                         l3778 1CA7  
                       l3786 1CBB                         l3794 1B9E                         l3962 0FD3  
                       l3938 0D97                         l3892 18A6                         l3884 189A  
                       l3980 1F78                         l3972 1F5F                         l3868 1A02  
                       l3876 1A1F                         l3788 1CC0                         l3796 1BA1  
                       l3956 0F44                         l3948 0E53                         l3886 189D  
                       l3990 1FA9                         l3982 1F87                         l3966 1F43  
                       l3798 1BA5                         l3958 0F4B                         l3894 1875  
                       l3888 18A0                         l3992 1FB3                         l3984 1F89  
                       l3968 1F56                         l3896 1878                         l3994 1FB4  
                       l3986 1F92                         l3978 1F72                         l3898 187E  
                       l3996 1FBC                         l3988 1F9B                         l3998 1FC6  
                       STR_1 10A0                         STR_2 10C4                         STR_3 10B5  
                       _BRGH 04C2                         _CREN 00C4                         _CMDs 1890  
                       u4001 0B48                         u4010 0B72                         u4002 0B4F  
                       u4003 0B56                         u4100 0BF1                         u4101 0BF0  
                       u4021 0B7E                         u4110 0C05                         u4030 0B9A  
                       u4022 0B85                         u4111 0C04                         u4023 0B8C  
                       u4015 0B6D                         u4120 0C0C                         u3400 15BD  
                       u4121 0C0B                         u4041 0BA6                         u3401 15BC  
                       u4130 0C12                         u4042 0BAD                         u3410 15C3  
                       u4131 0C11                         u4043 0BB4                         u4035 0B95  
                       u3411 15C2                         u4140 0C24                         u5020 1871  
                       u3420 15C8                         u4141 0C23                         u5021 1870  
                       u3421 15C7                         u4150 0C33                         u4070 0BD8  
                       u3510 1682                         u3430 15E1                         u5110 1D35  
                       u5030 1CD7                         u4071 0BD7                         u4055 0BB6  
                       u3511 1681                         u3431 15E0                         u5111 1D34  
                       u5031 1CD6                         u4160 0C50                         u3520 1686  
                       u3440 15E5                         u3360 1589                         u5120 1D3A  
                       u5040 1CEE                         u4161 0C4F                         u4065 0BCD  
                       u3601 16FE                         u3521 1685                         u3505 166F  
                       u3441 15E4                         u3361 1588                         u5121 1D39  
                       u5105 1D27                         u4170 0C6A                         u4090 0BEC  
                       u3610 1712                         u3602 16FF                         u3530 168B  
                       u3450 163D                         u3370 158F                         u5050 1D04  
                       u6010 1CBB                         u4171 0C69                         u4155 0C2E  
                       u4091 0BEB                         u3611 1713                         u3603 1704  
                       u3531 168A                         u3451 163C                         u3371 158E  
                       u5051 1D03                         u6011 1CBA                         u4180 0C88  
                       u3700 178A                         u3620 1730                         u3612 1718  
                       u3604 1705                         u3460 1648                         u3380 1594  
                       u5060 1D0B                         u6020 1CC0                         u6100 1BEA  
                       u4181 0C87                         u4165 0C4C                         u4085 0BDB  
                       u3701 1789                         u3621 172F                         u3613 1719  
                       u3605 170A                         u3541 169D                         u3461 1646  
                       u3381 1593                         u5061 1D0A                         u5045 1CE9  
                       u6021 1CBF                         u6005 1CAF                         u6101 1BE9  
                       u4190 10D5                         u3710 1790                         u3630 1755  
                       u3606 170B                         u3550 16AF                         u3542 16A4  
                       u3470 1649                         u3390 15B2                         u6110 1BEF  
                       u6030 1BA5                         u4191 10D4                         u4175 0C66  
                       u3711 178F                         u3631 1754                         u3551 16AE  
                       u3543 16AB                         u3455 1639                         u3391 15B1  
                       u6111 1BEE                         u6031 1BA4                         u7000 1DF9  
                       u3800 17ED                         u3720 1797                         u3640 175A  
                       u3560 16B3                         u3480 165D                         u5080 1D1D  
                       u6120 1A6C                         u6040 1BB0                         u7001 1DF8  
                       u3801 17EC                         u3721 1796                         u3641 1759  
                       u3561 16B2                         u3481 165C                         u5081 1D1C  
                       u6121 1A6B                         u6041 1BAF                         u2930 18E6  
                       u7010 1E15                         u3810 17FE                         u3730 179D  
                       u3570 16C2                         u3490 166C                         u5090 1D24  
                       u6210 1A02                         u6050 1BBB                         u2931 18E5  
                       u7011 1E14                         u3811 17FD                         u3731 179C  
                       u3571 16C1                         u3491 166B                         u5091 1D23  
                       u5075 1D0D                         u6211 1A01                         u6051 1BBA  
                       u5420 1367                         u3820 094D                         u7020 1E21  
                       u3740 17AF                         u3660 1770                         u7100 1B78  
                       u6140 1A7E                         u6220 1A0C                         u5421 1366  
                       u3901 09F1                         u3821 094C                         u7021 1E20  
                       u3741 17AE                         u3661 176F                         u7101 1B77  
                       u6141 1A7D                         u6221 1A0B                         u6205 19F4  
                       u5430 1929                         u2950 18FA                         u3902 09F8  
                       u3830 0953                         u3750 17BE                         u3670 1775  
                       u3590 16E7                         u6070 1BCD                         u5431 1928  
                       u2951 18F9                         u3911 0A0D                         u3903 09FF  
                       u3831 0952                         u7031 1E30                         u3671 1774  
                       u3655 1765                         u3591 16E6                         u6135 1A70  
                       u6071 1BCC                         u3912 0A14                         u3840 0958  
                       u7040 1E49                         u7032 1E31                         u3760 17CD  
                       u3680 177F                         u7120 1B95                         u6160 1A8F  
                       u6240 1A1F                         u6080 1BD7                         u2945 18ED  
                       u3921 0A39                         u3913 0A1B                         u3841 0957  
                       u7041 1E48                         u7033 1E36                         u3761 17CC  
                       u3681 177E                         u3593 16E3                         u3585 16C5  
                       u7121 1B94                         u7105 1B74                         u6161 1A8E  
                       u6241 1A1E                         u6225 1A08                         u6305 14A6  
                       u6081 1BD6                         u6065 1BBF                         u3922 0A40  
                       u3850 0979                         u7210 1F06                         u7130 1E8F  
                       u7034 1E37                         u3770 17D6                         u3690 1785  
                       u6250 1374                         u6330 0CA4                         u3931 0A55  
                       u3923 0A47                         u3851 0978                         u7211 1F05  
                       u7131 1E8E                         u7051 1E58                         u7035 1E3C  
                       u3771 17D5                         u3755 17B9                         u3691 1784  
                       u7115 1B87                         u6155 1A7F                         u6235 1A13  
                       u6315 14F3                         u6251 1373                         u6331 0CA3  
                       u7300 1209                         u3932 0A5C                         u3860 097F  
                       u7220 1F0C                         u7140 1E93                         u7060 1E83  
                       u7052 1E59                         u7036 1E3D                         u3780 17DB  
                       u6500 1F56                         u6180 1AA3                         u6420 0E5A  
                       u6340 0CAD                         _RCIF 0065                         u7301 1208  
                       u3933 0A63                         u3861 097E                         u7221 1F0B  
                       u7205 1EFB                         u7141 1E92                         u7061 1E82  
                       u7053 1E5E                         u3781 17DA                         u6501 1F55  
                       u6181 1AA2                         u6165 1A8B                         u6325 153F  
                       u6085 1BD3                         u6421 0E59                         u6405 0DED  
                       u6341 0CAC                         u7310 1217                         u3870 0984  
                       u7230 1F10                         u7150 1EB3                         u7054 1E5F  
                       u3790 17E8                         u7070 1B52                         u6510 1F70  
                       u6190 19EE                         u3951 0A8B                         u3871 0983  
                       u7231 1F0F                         u7151 1EB2                         u7055 1E64  
                       u3791 17E7                         u7071 1B51                         u6511 1F6F  
                       u6175 1A97                         u6191 19ED                         u6095 1BDE  
                       u6415 0E29                         u7320 1230                         u3952 0A92  
                       u3880 099B                         u7240 1F25                         u7056 1E65  
                       u6600 1FE6                         u7400 01D4                         u3961 0AB8  
                       u3953 0A99                         u3945 0A65                         u3881 099A  
                       u7065 1E7F                         u6601 1FE5                         u6265 1391  
                       u7401 01D3                         u3962 0ABF                         u3890 09A0  
                       u7250 1F35                         u7170 1ED4                         u7090 1B66  
                       u6530 1FA9                         u6290 1489                         u7410 0206  
                       u7331 1242                         u7315 1212                         u3963 0AC6  
                       u3891 099F                         u7251 1F34                         u7171 1ED3  
                       u7091 1B65                         u6531 1FA8                         u6291 1488  
                       u6275 13ED                         u6435 0E7C                         u6355 0CCF  
                       u7411 0205                         u5900 1A50                         u7340 126E  
                       u7332 1243                         u7260 1F39                         u6700 1172  
                       u6620 1FF7                         u6460 0F4B                         u6380 0D9E  
                       u7500 0420                         u7420 0260                         i1l69 197B  
                       u5901 1A4F                         u7341 126D                         u7333 1248  
                       u7325 122B                         u3981 0AEE                         u7261 1F38  
                       u7245 1F20                         u7165 1EC6                         u7085 1B57  
                       u6701 1171                         u6621 1FF6                         u6525 1F94  
                       u6285 1442                         u6461 0F4A                         u6445 0EB8  
                       u6381 0D9D                         u6365 0D0B                         u7501 041F  
                       u7421 025F                         u5910 1A57                         u7334 1249  
                       u7270 11B5                         u3982 0AF5                         u7190 1EF6  
                       u6630 10F4                         u6550 1FC2                         u7430 0289  
                       u7350 0030                         u5911 1A56                         u7335 124E  
                       u3991 0B1B                         u3983 0AFC                         u3975 0AC8  
                       u7191 1EF5                         u6631 10F3                         u6615 1FE9  
                       u6551 1FC1                         u6535 1FA5                         u6455 0F03  
                       u6375 0D56                         u7431 0288                         u7351 002F  
                       u5920 1A5E                         u7336 124F                         u7280 11CE  
                       u3992 0B22                         u6800 1C0B                         u6720 1184  
                       u6640 1108                         u6560 1FC6                         u7600 06E2  
                       u7520 04D9                         u7440 02B0                         u7360 006D  
                       u5921 1A5D                         u3993 0B29                         u7185 1EE8  
                       u6801 1C0A                         u6721 1183                         u6641 1107  
                       u6561 1FC5                         u6545 1FB5                         u7601 06E1  
                       u7521 04D8                         u7441 02AF                         u7425 025C  
                       u7361 006C                         u5850 1A29                         u6730 118B  
                       u6570 1FCD                         u5930 1C68                         u7530 04FA  
                       u7450 02BF                         u7370 00AA                         u5851 1A28  
                       u7291 11E0                         u7275 11B0                         u6731 118A  
                       u6715 1174                         u6571 1FCC                         u5931 1C67  
                       u6475 0F5E                         u6395 0DB1                         u7531 04F9  
                       u7515 042F                         u7451 02BE                         u7371 00A9  
                       u5860 1A34                         u7292 11E1                         u6820 1C1F  
                       u6660 1149                         u5940 1C73                         u7620 0729  
                       u7540 0509                         u7460 02E8                         u7380 00F2  
                       u7700 0818                         u5861 1A33                         u7293 11E6  
                       u7285 11C9                         u6821 1C1E                         u6661 1148  
                       u5941 1C72                         u6485 0F9A                         u7621 0728  
                       u7541 0508                         u7461 02E7                         u7381 00F1  
                       u5870 1A3B                         u6910 1D91                         u7294 11E7  
                       u6750 119C                         u6590 1FDF                         u5950 1C84  
                       u7630 0734                         u7550 0524                         u7390 013D  
                       u7710 083C                         u5871 1A3A                         u6911 1D90  
                       u7295 11EC                         u6815 1C10                         u6751 119B  
                       u6655 1130                         u6591 1FDE                         u5951 1C83  
                       u6495 0FD6                         u7631 0733                         u7615 06F6  
                       u7551 0523                         u7535 04F6                         u7455 02BB  
                       u7391 013C                         u5880 1A42                         u7296 11ED  
                       u6840 1C3A                         u6760 1932                         u6680 1167  
                       u7640 0740                         u7480 0409                         u7720 084E  
                       u5881 1A41                         u6905 1D82                         u6841 1C39  
                       u6761 1931                         u6745 118E                         u6681 1166  
                       u6665 1145                         u6585 1FCF                         u7641 073F  
                       u7625 0725                         u7545 0505                         u7481 0408  
                       u7721 084D                         u5890 1A49                         u6930 1DAC  
                       u6690 116B                         u5970 1C96                         u7490 0414  
                       u5891 1A48                         u6931 1DAB                         u6835 1C21  
                       u6691 116A                         u6675 115A                         u5971 1C95  
                       u7491 0413                         u7475 03D6                         u6860 1C58  
                       u7660 07D3                         u7580 06B0                         u6925 1D93  
                       u6861 1C57                         u6845 1C36                         u5965 1C88  
                       u7661 07D2                         u7581 06AF                         u7565 05AB  
                       u7485 0405                         u6950 1DCA                         u6870 1D4D  
                       u6790 194E                         u5990 1CA7                         u7670 07E5  
                       u7590 06C8                         u6951 1DC9                         u6935 1DA8  
                       u6871 1D4C                         u6855 1C4A                         u6791 194D  
                       u6775 193B                         u5991 1CA6                         u7671 07E4  
                       u7655 0762                         u7591 06C7                         u7575 0651  
                       u6960 1DCF                         u6880 1D5E                         u7680 18B8  
                       u6961 1DCE                         u6945 1DBC                         u6881 1D5D  
                       u7681 18B7                         u6785 1942                         u5985 1C97  
                       u7737 0932                         u6890 1D7D                         u7690 18CA  
                       u6970 1ABE                         u6891 1D7C                         u7691 18C9  
                       u6971 1ABD                         u5995 1CA3                         u7747 188C  
                       u6980 1ADA                         u7757 1992                         u6981 1AD9  
                       u6990 1AF4                         u7767 18AA                         u6991 1AF3  
                       u7777 135D                         u6995 1AF0                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
                       _main 084F                         _port 1A24                         btemp 007E  
                       start 000C                 _sprintf$1110 00B8                        ??_ISR 0070  
                      CMDs@a 0076                        ?_CMDs 0070             __end_of_LCD_init 19B0  
              ___fltol@sign1 0061              __end_of___aldiv 1DE3              __end_of___fladd 1800  
                      ?_main 0070              __end_of___awdiv 1CCA              __end_of___flneg 1874  
            __end_of___awmod 1BF9              __end_of___flmul 0C9D              __end_of___flsub 1B48  
                      ?_port 0070              __end_of___fltol 1D46                        _ANSEL 0188  
            __end_of___lldiv 1C61              ___awdiv@divisor 0022              __end_of___llmod 1B9E  
            __end_of___lwdiv 1AA8                write_string@a 0076                        i1l233 1861  
              write_string@i 0023                        i1l236 1868              __end_of___lwmod 1A24  
            ___awdiv@counter 0027                        _RCREG 001A                        _SPBRG 0099  
                      _PORTD 0008                        _PORTE 0009                        _TRISD 0088  
                      _TRISE 0089                        _TXREG 0019              __end_of_dpowers 10A0  
                      _scale 0C9D                        _setup 07EA                  conversion@x 004D  
                      pclath 000A                        port@a 0073                        status 0003  
                      wtemp0 007E              __end_of_sprintf 07EA                  ?_USART_Init 002E  
               __end_of_CMDs 18B0              __initialization 000F                   _Read_USART 1861  
               __end_of_main 093C                 __end_of_port 1A62                       ??_CMDs 0074  
                     ??_main 00D1                       ??_port 0073        __size_of_write_string 0046  
       __size_of__tdiv_to_l_ 00BD                       _ADCON1 009F             ___llmod@dividend 0031  
                     ?_scale 0045                       _ADRESH 001E             ___awdiv@dividend 0024  
                     _ADCmed 1281                       ?_setup 0070                       _ANSELH 0189  
                     _BUFFER 00DC                       i1l3270 1861                       i1l3272 1867  
                     i1l3630 196A                       i1l3622 1955                       i1l3632 1971  
                     i1l3624 195B                       i1l3634 1977                       i1l3626 195C  
                     i1l3628 1964                       u533_20 1867                       u533_21 1866  
                     u582_20 195B                       u582_21 195A                       u583_20 196A  
                     u583_21 1969                       u584_20 1977                       u584_21 1976  
                     _TRISC6 043E                       _TRISC7 043F             __end_of___xxtofl 1F43  
           __end_of__powers_ 1044                       ___flge 1DE3                       ___fleq 1AA8  
                  ??___aldiv 0073                 _write_string 0809                    ??___fladd 0061  
                     ___wmul 192A                    ??___awdiv 0026                    ??___flneg 0077  
                  ??___awmod 0077                    ??___flmul 0033                    ??___flsub 0078  
                  ??___fltol 005C                    ??___lldiv 0073                    ??___llmod 0074  
                  ??___lwdiv 0025                    ??___lwmod 0077                       _fround 136B  
           ___awdiv@quotient 0029              ___awmod@divisor 0073              ___awmod@counter 0020  
         __size_of__Umul8_16 0029                       saved_w 007E          __size_of_USART_Init 00DC  
                  ??_sprintf 00B3                   ___flge@ff1 0020                   ___flge@ff2 0024  
               ___xxtofl@arg 0026                 ___xxtofl@exp 0025                 ___xxtofl@val 0073  
                 ___fleq@ff1 0020                   ___fleq@ff2 0024      __end_of__initialization 001E  
                 ___flneg@f1 0073                    ?_LCD_init 0070                   ___fltol@f1 0058  
                ?_Read_USART 0070               __pcstackCOMMON 0070                __end_of_scale 1000  
              __end_of_setup 07FD           __size_of_clear_LCD 000D                   __div_to_l_ 10E7  
            __div_to_l_@exp1 002D              __div_to_l_@cntr 002C                      ??_scale 0049  
            __div_to_l_@quot 0028                      ?_ADCmed 0070                      ??_setup 0073  
               Write_USART@a 0073                   __pbssBANK0 006D                   __pbssBANK1 00D4  
                 ??_LCD_init 0020                __div_to_l_@f1 0020                __div_to_l_@f2 0024  
          __end_of__Umul8_16 18FF                   __pmaintext 084F                      ?___flge 0020  
                    ?___fleq 0020                      ?___wmul 0073                ??_Write_USART 0073  
                 __pintentry 0004                      ?_fround 0045   __end_of_Write_USART_String 192A  
                  ?___xxtofl 0073          __size_of_Read_USART 0008                   __stringtab 1000  
            __size_of_ADCmed 00EA            __end_of_clear_LCD 10E7                   _conversion 19B0  
               ??_USART_Init 0032            __end_of__npowers_ 1078                   _scale$1109 0053  
                    ___aldiv 1D46              __size_of___flge 00A4              __size_of___fleq 0050  
                    ___fladd 1578                      ___awdiv 1C61                      ___flneg 1869  
                    ___awmod 1B9E                      ___flmul 093C                      ___flsub 1AF8  
                    ___fltol 1CCA                      ___lldiv 1BF9              __size_of___wmul 002B  
                    ___llmod 1B48                      ___lwdiv 1A62                      ___lwmod 19E8  
                  _ANSELbits 0188              __size_of_fround 020D                      __ptext1 0809  
                    __ptext2 1874                      __ptext3 0022                      __ptext4 0C9D  
                    __ptext5 1B9E                      __ptext6 1C61                      __ptext7 136B  
                    __ptext8 19E8                      __ptext9 1A62                 __size_of_ISR 002D  
                ?__div_to_l_ 0020                      _dpowers 1078          __end_of_Write_USART 10DA  
                 ??___xxtofl 0020             ___awmod@dividend 0075             ___aldiv@dividend 0024  
         __end_of_USART_Init 1281                  set_cursor@a 0021                  set_cursor@b 0077  
                set_cursor@x 0022                      _sprintf 0022                      clrloop0 0802  
       end_of_initialization 001E              ___lldiv@divisor 0020              ___lldiv@counter 002C  
                 _set_cursor 18B0             ___aldiv@quotient 002A               __tdiv_to_l_@f1 0020  
             __tdiv_to_l_@f2 0024                ??__tdiv_to_l_ 0073                  ___fladd@grs 006C  
              ___xxtofl@sign 0024                    _TRISAbits 0085                    _TRISBbits 0086  
                  _TRISEbits 0089               __end_of_ADCmed 136B                  ___flmul@grs 0039  
                ?_conversion 0045          __size_of__div_to_l_ 00BE            __size_of_LCD_init 002E  
               ??_Read_USART 0070               __end_of___flge 1E87               __end_of___fleq 1AF8  
                _Write_USART 10CE               __end_of___wmul 1955                   _write_char 1874  
                USART_Init@x 0074               __end_of_fround 1578          start_initialization 000F  
                __end_of_ISR 1982          __end_of__tdiv_to_l_ 2000                     ??_ADCmed 0073  
         __end_of_Read_USART 1869              ___llmod@divisor 002D              ___llmod@counter 0075  
                   ADCmed@ch 0075                  ?_set_cursor 0077                     ??___flge 0073  
                   ??___fleq 0073                     ??___wmul 0077                    __Umul8_16 18D6  
                   ??_fround 0049                sprintf@tmpval 00C7                    ___fladd@a 005D  
                  ___fladd@b 0059          __size_of_conversion 0038                   fround@prec 0058  
                  ___flmul@a 002F                    ___flmul@b 002B                  __pbssCOMMON 0078  
                  ___flsub@a 00A0                    ___flsub@b 00A4                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of___xxtofl 00BC  
                sprintf@flag 00BD                  sprintf@eexp 00C5                  sprintf@fval 00CC  
         _Write_USART_String 18FF                  sprintf@prec 00BF                    _clear_LCD 10DA  
           ___lwdiv@dividend 0023          ?_Write_USART_String 0074                     ?___aldiv 0020  
                   ?___fladd 0059                     ?___awdiv 0022                     ?___flneg 0073  
                   ?___awmod 0073                     ?___flmul 002B                     ?___flsub 00A0  
                   ?___fltol 0058                     ?___lldiv 0020                     ?___llmod 002D  
                  __npowers_ 1044                   ?__Umul8_16 0073                     ?___lwdiv 0021  
                   ?___lwmod 0073                  ?_write_char 0070                    __pstrings 1000  
                __tdiv_to_l_ 1F43                 ??__div_to_l_ 0073                    _readUSART 0078  
       ??_Write_USART_String 0076             ___lwdiv@quotient 0027          __size_of_set_cursor 0026  
                   ?_sprintf 00A8               __size_of_scale 0363               __size_of_setup 0013  
            ___aldiv@divisor 0020            interrupt_function 0004              ___aldiv@counter 0028  
             ___wmul@product 0020                     _LCD_init 1982                    clear_ram0 0801  
                   _PIE1bits 008C                   ?_clear_LCD 0070                     _PIR1bits 000C  
         __end_of__div_to_l_ 11A5                ?_write_string 0076                   _ADCON0bits 001F  
                __stringbase 100F            ___wmul@multiplier 0073                  write_char@a 0075  
         USART_Init@baudrate 002E                 ??_conversion 0049          __size_of_write_char 001C  
             ??_write_string 0020                  ??__Umul8_16 0075                 ?_Write_USART 0070  
           __size_of___aldiv 009D             __size_of___fladd 0288             __size_of___awdiv 0069  
           __size_of___flneg 000B             __size_of___awmod 005B             __size_of___flmul 0361  
           __size_of___flsub 0050             __size_of___fltol 007C             __size_of___lldiv 0068  
           __size_of___llmod 0056             __size_of___lwdiv 0046             __size_of___lwmod 003C  
                _fround$1107 0054                  _fround$1108 0050           __end_of__stringtab 1010  
                 _ANSELHbits 0189                   sprintf@val 00C1           __end_of_conversion 19E8  
                   ___xxtofl 1E87              ___lwdiv@divisor 0021              ___lwdiv@counter 0026  
                   __ptext10 1F43                     __ptext11 10E7                     __ptext20 1AA8  
                   __ptext12 192A                     __ptext21 07EA                     __ptext13 1B48  
                   __ptext30 11A5                     __ptext22 18B0                     __ptext14 1BF9  
                   __ptext31 1D46                     __ptext23 19B0                     __ptext15 1CCA  
                   __ptext32 1982                     __ptext24 1E87                     __ptext16 1AF8  
                   __ptext33 1890                     __ptext25 093C                     __ptext17 1578  
                   __ptext34 1A24                     __ptext26 18D6                     __ptext18 1869  
                   __ptext35 1281                     __ptext27 10DA                     __ptext19 1DE3  
                   __ptext36 1955                     __ptext28 18FF                     __ptext37 1861  
                   __ptext29 10CE                     __powers_ 1010                     _contador 006D  
           __size_of_sprintf 07C8                __size_of_CMDs 0020                __size_of_main 00ED  
              __size_of_port 003E                  ??_clear_LCD 0077                 ??_set_cursor 0020  
                 _INTCONbits 000B          Write_USART_String@a 0074          Write_USART_String@i 0077  
                   scale@scl 0057           __end_of_set_cursor 18D6                     intlevel1 0000  
                  sprintf@ap 00BC             __tdiv_to_l_@exp1 002D             __tdiv_to_l_@cntr 002C  
                  sprintf@sp 00CB             __tdiv_to_l_@quot 0028             ___lwmod@dividend 0075  
           ___lldiv@dividend 0024                    stringcode 100A                 ??_write_char 0074  
               ?__tdiv_to_l_ 0020       __Umul8_16@multiplicand 0073                     sprintf@c 00D0  
                   sprintf@f 00A8             ___lldiv@quotient 0028              ___lwmod@divisor 0073  
            ___lwmod@counter 0020                     stringdir 100A                     stringtab 1000  
               ___aldiv@sign 0029         __end_of_write_string 084F                ___fladd@signs 0069  
               ___fladd@aexp 006A                 ___fladd@bexp 006B         __Umul8_16@multiplier 0024  
         __end_of_write_char 1890                   _USART_Init 11A5            __Umul8_16@product 0020  
